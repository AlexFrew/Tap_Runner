<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Keysight.Aes.Asf</name>
    </assembly>
    <members>
        <member name="T:Keysight.Aes.Asf.Applications.AppData">
            <summary>   Contains various helper methods related to the AppData/Roaming directory. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppData.GetAppDataPath(System.String)">
             <summary>   Gets the full path to a folder within the application data path. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when folderNames contains an absolute path. </exception>
            
             <param name="folderNames">  The relative path of folder names, e.g. "CompanyName\\
                                         ApplicationName". If any of the folders does not exist, it is
                                         created. </param>
            
             <returns>   The application data path. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppData.GetAppDataFilePath(System.String,System.String)">
             <summary>
             Gets the full path to a file within a folder within the AppData/Roaming location.
             </summary>
            
             <param name="folderNames">  The relative path of folder names, e.g.
                                         "CompanyName\\ApplicationName". If any of the folders does not
                                         exist, it is created. </param>
             <param name="fileName">     Filename of the file. No check is done on whether the file
                                         exists. </param>
            
             <returns>   The application data file path. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices">
             <summary>
             This is the service host for basic application wide services that either require user
             interaction (like messageboxes, dialogs etc.) or storage access like reading and writing
             files.
            
             It defines various delegates for actions that can be rerouted thus allowing dependency
             injection in a simple way. All delegates are populated them default methods that issue
             regular actions as you would expect in a normal application. They can be overridden at any
             time, typically for unit testing, for injecting themed windows, for rerouting file access to
             a database etc. For an example on unit tests, see the tests for the Solution Catalog.
            
             By default, the application services will take care of saving and restoring your main
             windows position and size (taking changes of multiple screens and resolution into account).
             If you want to supress this behaviour, you need to call DontSaveMainWindowPosition() before
             your main window is actually constructed, e.g. in your App.xaml.cs.
             </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.MainWindowCoordinates">
            <summary>   Helper type to uniquely identify the main window coordinates in the GlobalSettings. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.ApplicationServices.MainWindowCoordinates.SerializedWindowPlacement">
             <summary>   Gets or sets the serialized window placement. </summary>
            
             <value> The serialized window placement. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ApplicationServices.DisableMainWindowPlacementSaveAndRestore">
            <summary>
            Call this if you don't want to save and restore the main window position. 
            Call this before your main window is constructed, e.g. do it in App.xaml.cs.
            </summary>
            <example>
            Put this code in your App.xaml.cs to prevent the auto save and restore of the main window
            position:
            <code>
             /// &lt;summary&gt;
            Interaction logic for App.xaml
            &lt;/summary&gt;
                   public partial class App : Application
                   {
                       public App()
                       {
                           Keysight.Aes.Asf.Applications.ApplicationServices.DontSaveMainWindowPosition();
                       }
                   }
            </code>
            </example>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ApplicationServices.EnableMainWindowPlacementSaveAndRestore">
            <summary>
            Enables the main window position save and restore. This will happen automatically unless you
            access the ApplicationServices before your main window is constructed. If so, call this
            method after your MainWindow was constructed to enable position saving.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.ApplicationServices.GlobalSettings">
             <summary>   Gets or sets the global settings. </summary>
            
             <value> The global settings. </value>
             <example>
             To make use of these settings, you need to provide a storage location
             somewhere in your startup code and actively load the previous settings.
             You then probe for missing settings classes and add them one by one.
             Typically, this would look something like this, for example in your
             MainWindow or MainViewModel constructor:
             <code>
             ApplicationServices.GlobalSettings.SettingsFolder = &quot;Keysight\\&quot; + ProductCode;
             ApplicationServices.GlobalSettings.LoadSettings();
             ApplicationServices.GlobalSettings.ConfirmSetting&lt;MySettingsType1&gt;();
             ApplicationServices.GlobalSettings.ConfirmSetting&lt;MySettingsType2&gt;();
             </code>
             </example>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.ApplicationServices.GlobalInformation">
             <summary>
             This storage can be used for information that is accessed throughout the entire application.
             It only persists at runtime and there are no automated means of saving or loading this data.
             </summary>
            
             <value> Information describing the global. </value>
        </member>
        <member name="E:Keysight.Aes.Asf.Applications.ApplicationServices.ShutdownRequestedChanged">
            <summary>
            Event is fired whenever IsShutdownRequested changes. The sender will be null and the argument
            will be the current state.
            </summary>
        </member>
        <member name="E:Keysight.Aes.Asf.Applications.ApplicationServices.ProcessStopRequestedChanged">
            <summary>
            Event is fired whenever IsProcessStopRequested changes. The sender will be null and the argument
            will be the current state.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.ApplicationServices.IsShutdownRequested">
            <summary>
            Gets or sets a value indicating whether the whole application is supposed to shutdown. For
            example, a QUIT button in a UI may cause this and any class may decide to no longer provide
            certain services but throw an exception instead.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.ApplicationServices.IsProcessStopRequested">
            <summary>
            Gets or sets a value indicating whether the current process is supposed to shutdown. For
            example, a STOP button in a UI may cause this and any class may decide to no longer provide
            certain services but throw an exception instead.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.ApplicationServices.IsAnyBreakRequested">
             <summary>
             Gets a value indicating whether any of the break requests IsShutdownRequested or
             IsProcessStopRequested was set.
             </summary>
            
             <value> true if this object is any break requested, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.Sleep">
            <summary>   Sleeps for the given amount of milliseconds (in fragments of 100ms) or throws an HaltRequestedException if the according ApplicationServices are meanwhile triggered. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.LogAction">
             <summary>   Logs a message at a certain level action. </summary>
            
             <param name="level">    The level. </param>
             <param name="message">  The message. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.LogException">
             <summary>   Logs an exception. </summary>
            
             <param name="cause">                The cause. </param>
             <param name="ex">                   The exception. </param>
             <param name="includeStackTrace">    true to include, false to exclude the stack trace. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.LogTraceAction">
             <summary>   Logs trace messages. </summary>
            
             <param name="message">  The message. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.LogInfoAction">
             <summary>   Logs information messages. </summary>
            
             <param name="message">  The message. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.LogWarningAction">
             <summary>   Logs warning messages. </summary>
            
             <param name="message">  The message. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.LogErrorAction">
             <summary>   Logs error messages. </summary>
            
             <param name="message">  The message. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.GetLogAction">
             <summary>   Gets the current log. </summary>
            
             <returns>   A string. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.ExistsAction">
             <summary>   Defines an Existence-Test action. </summary>
            
             <param name="fileName"> Filename of the file to test (full path). </param>
            
             <returns>   True if the file exists, false if not. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.CreationDateAction">
             <summary>   Gets the creation date of a file. </summary>
            
             <param name="filename"> Filename of the file. </param>
            
             <returns>   A DateTime. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.SaveTextAction">
             <summary>   Defines a Save Text action </summary>
            
             <param name="fileName"> Filename of the file to save to (full path). </param>
             <param name="content">  The content. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.LoadTextAction">
             <summary>   Defines a Load Text action. </summary>
            
             <param name="fileName"> Filename of the file to load from (full path). </param>
            
             <returns>   The loaded contents as a string. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.SaveBinaryAction">
             <summary>   Defines a Save Binary action </summary>
            
             <param name="fileName"> Filename of the file to save to (full path). </param>
             <param name="content">  The content. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.LoadBinaryAction">
             <summary>   Defines a Load Binary action. </summary>
            
             <param name="fileName"> Filename of the file to load from (full path). </param>
            
             <returns>   The loaded contents as an array of bytes. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.SelectLoadFileAction">
             <summary>   Defines an action to select a file for loading. </summary>
            
             <param name="presetFilePath">   Optional default value for the file to load. </param>
             <param name="presetFileMasks">  Optional list of masks for the files to present (as accepted
                                             by the OpenFileDialog). </param>
            
             <returns>
             A string containing either the full path to the selected file or null if the selection was
             canceled.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.SelectSaveFileAction">
             <summary>   Defines an action to select a file for saving. </summary>
            
             <param name="presetFilePath">   Optional default value for the file to save. </param>
             <param name="presetFileMasks">  Optional list of masks for the files to present (as accepted
                                             by the OpenFileDialog). </param>
             <param name="promptOverride">    true to prompt for override if the file already exists. </param>
            
             <returns>
             A string containing either the full path to the selected file or null if the selection was
             canceled.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.SelectFolderAction">
             <summary>   Defines an action to select a file for loading. </summary>
            
             <param name="presetFolderPath"> Optional default value for the folder to select. </param>
            
             <returns>
             A string containing either the full path to the selected file or null if the selection was
             canceled.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.InformationLevels">
            <summary>   The information levels for the UserInformation calls. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.InformationLevels.Information">
            <summary>   The Information level means no problems. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.InformationLevels.Warning">
            <summary>   The Warning level points out potential problems. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.InformationLevels.Error">
            <summary>   The Error level is for actual problems. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.PresentUserInformationAction">
             <summary>   Defines the announcement of an information that shall be presented to the user. </summary>
            
             <param name="message">  The message. </param>
             <param name="title">    The title. </param>
             <param name="level">    The level. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.RequestUserInformationAction">
             <summary>   Defines the announcement of an information that shall be presented to the user and offers an OK and Cancel option. </summary>
            
             <param name="message">  The message. </param>
             <param name="title">    The title. </param>
             <param name="level">    The level. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.InternalErrorAction">
             <summary>   Informs the user about an internal error. </summary>
            
             <param name="errorCode">    The error code. </param>
             <param name="isFatal">      true if this error is fatal. This will throw an exception after informing the user. Otherwise, control is simply returned to the caller. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ApplicationServices.WindowProvider">
             <summary>
             A Window provider delegate. Shall return a class instance that is derived from the regular
             WPF Window. This allows to substitute all dialog windows that are created by ASF with other
             window types that a theme may require (like WSL).
             </summary>
            
             <returns>   A Window. </returns>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.ClearLog">
            <summary>   Action to clear the current log. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.Log">
            <summary>   General logging using the Applications.Logger Levels. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.LogEx">
            <summary>   Exception logging using the Applications.Error level. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.LogTrace">
            <summary>   Trace Logging, the lowest level. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.LogInfo">
            <summary>   Info Logging, the second lowest level. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.LogWarn">
            <summary>   Warn Logging, the second highest level. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.LogError">
            <summary>   Trace Logging, the highest level. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.LogBootInfo">
            <summary>   Boot Info Logging, the highest information level. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.GetLog">
            <summary>   Returns the current log. </summary>
        </member>
        <member name="E:Keysight.Aes.Asf.Applications.ApplicationServices.LogWritten">
            <summary>   Event that is called whenever a new message is added to the log. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ApplicationServices.LogMessageAvailable(System.String)">
             <summary>
             Any logger participating in the ApplicationServices Log redistribution must call this
             whenever a new message is logged.
             </summary>
            
             <param name="message">  The message. </param>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.OnExistSettings">
            <summary>   Action called when testing if a settings file exists. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.OnLoadSettings">
            <summary>   Action called when a settings file is loaded. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.OnSaveSettings">
            <summary>   Action called when a settings file is saved. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.OnExistFile">
            <summary>   Action called when testing if a file exists. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.OnDeleteFile">
            <summary>   Action called when trying to delete a file. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.OnSelectSaveFile">
            <summary>   Action called when the user shall be prompted to select a file for saving. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.OnSelectLoadFile">
            <summary>   Action called when the user shall be prompted to select a file for loading. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.OnSelectFolder">
            <summary>   Action called when the user shall be prompted to select a folder. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.OnLoadTextFile">
            <summary>   Action called when a generic text file is loaded. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.OnSaveTextFile">
            <summary>   Action called when a generic text file  is saved. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.OnLoadBinaryFile">
            <summary>   Action called when a generic binary file is loaded. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.OnSaveBinaryFile">
            <summary>   Action called when a generic binary file is saved. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.OnCreationDateQuery">
            <summary>   Action called when a file date is required. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.PresentUserInformation">
            <summary>
            The default action will log errors and warnings and show a windows MessageBox with the icon
            depending on the level.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.RequestUserInformation">
            <summary>
            The default action will log errors and warnings and show a windows MessageBox with the icon
            depending on the level. It will offer the user to confirm with OK or cancel. It will return
            true if the user confirmed with OK.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.InternalError">
            <summary>
            Informs the user about an internal error and also logs it. When marked as fatal, an
            ApplicationException is thrown. Use error codes starting with E_ followed by your class name
            capital letters and an abbreviation that can be searched for in the source code. For example
            if a "Setup" property is null that should have been set by the consuming code of your class
            called "XmlSetupReader", your error code would be "E_XSR_SNS" (SND for "Setup Not Set"). Make
            sure that you don't use duplicate error codes.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.DialogWindowProvider">
            <summary>
            A custom dialog window provider. You can use this to provide a different hosting window for
            dialogs that are automatically brought up, for example in a ExpertSolution environment, the
            SolutionConfiguration dialog will be hosted in what is returned here.
            </summary>
            <example>
            If your application uses WSL, you want to change this to:
            <code>
            ApplicationServices.DialogWindowProvider = (() =&gt; { return new WslDialog(); });
            </code>
            </example>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ApplicationServices.RegularWindowProvider">
            <summary>
            A custom regular window provider. You can use this to provide a different hosting window for
            regular windows that are supposed to stay open, like a document window. For example in a
            ExpertSolution environment, loading a previously saved measurement will be hosted in what is
            returned here.
            </summary>
            <example>
            If your application uses WSL, you want to change this to:
            <code>
            ApplicationServices.DialogWindowProvider = (() =&gt; { return new WslMainWindow(); });
            </code>
            </example>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.AppSettings">
             <summary>
             Helper methods to simplify the load and save operations for settings or configuration files
             within the AppData/Roaming space.
            
             All files are serialized to and saved as UTF8 encoded XML.
            
             The actual file operations can be redirected via the dependency injection hooks in the
             ApplicationServices.
             </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppSettings.SaveDefaultSettings(System.String,System.Object)">
             <summary>
             Saves a serialized class instance as the default settings within a particular Domain.
             </summary>
            
             <param name="folderNames">  The relative path of folder names, e.g. "CompanyName\\
                                         ApplicationName". If any of the folders does not exist, it is
                                         created. </param>
             <param name="settings">     The class instance to serialize and store. </param>
            
             <returns>   The full path of the default settings file. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppSettings.SaveSettings(System.String,System.Object)">
             <summary>
             Saves a serialized class instance as an xml settings file within a particular Domain. This
             tries to automatically determine the file name from the type to save, hence the type must
             have the StorageName attribute attached.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="folderNames">  The relative path of folder names, e.g. "CompanyName\\
                                         ApplicationName". If any of the folders does not exist, it is
                                         created. </param>
             <param name="settings">     The class instance to serialize and store. </param>
            
             <returns>   The full path of the default settings file. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppSettings.SaveSettings(System.String,System.String,System.Object)">
             <summary>
             Saves a serialized class instance as an xml settings file within a particular Domain.
             </summary>
            
             <param name="folderNames">  The relative path of folder names, e.g. "CompanyName\\
                                         ApplicationName". If any of the folders does not exist, it is
                                         created. </param>
             <param name="fileName">     Filename of the file. No check is done on whether the file
                                                                exists. </param>
             <param name="settings">     The class instance to serialize and store. </param>
            
             <returns>   The full path of the default settings file. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppSettings.LoadDefaultSettings``1(System.String,System.Boolean)">
             <summary>
             Loads the default settings from a particular domain as an instance of a particular type.
             </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="folderNames">          The relative path of folder names, e.g. "CompanyName\\
                                                 ApplicationName". If any of the folders does not exist, it is
                                                 created. </param>
             <param name="forwardExceptions">    true to forward exceptions, otherwise they will only be logged and null is returned. </param>
            
             <returns>   The default settings or null if no settings exist. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppSettings.LoadSettings``1(System.String,System.Boolean)">
             <summary>
             Loads a settings class from a particular domain as an instance of a particular type. This
             tries to automatically determine the file name from the type to load, hence the type must
             have the StorageName attribute attached.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="folderNames">          The relative path of folder names, e.g. "CompanyName\\
                                                 ApplicationName". If any of the folders does not exist, it is
                                                 created. </param>
             <param name="forwardExceptions">    true to forward exceptions, otherwise they will only be
                                                 logged and null is returned. </param>
            
             <returns>   The default settings or null if no settings exist. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppSettings.LoadSettings``1(System.String,System.String,System.Boolean)">
             <summary>
             Loads a settings class from a particular domain as an instance of a particular type.
             </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="folderNames">          The relative path of folder names, e.g. "CompanyName\\
                                                 ApplicationName". If any of the folders does not exist, it is
                                                 created. </param>
             <param name="fileName">             Filename of the file. No check is done on whether the file
                                                                                               exists. </param>
             <param name="forwardExceptions">    (Optional) true to forward exceptions, otherwise they
                                                 will only be logged and null is returned. </param>
            
             <returns>   The default settings or null if no settings exist. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppSettings.GetDefaultSettingsFilePath(System.String)">
             <summary>   Gets the full path for a default settings file. </summary>
            
             <param name="folderNames">  The relative path of folder names, e.g. "CompanyName\\
                                         ApplicationName". If any of the folders does not exist, it is
                                         created. </param>
            
             <returns>   The default settings file path. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppSettings.GetSettingsFilePath(System.String,System.String)">
             <summary>   Gets the full path for a settings file. </summary>
            
             <param name="folderNames">  The relative path of folder names, e.g. "CompanyName\\
                                         ApplicationName". If any of the folders does not exist, it is
                                         created. </param>
             <param name="fileName">     Filename of the file. No check is done on whether the file
                                                                exists. </param>
            
             <returns>   The default settings file path. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppSettings.GetSettingsFilePath(System.String)">
             <summary>   Gets the full path for a folder within the AppData hierarchy. </summary>
            
             <param name="folderNames">  The relative path of folder names, e.g. "CompanyName\\
                                         ApplicationName". If any of the folders does not exist, it is
                                         created. </param>
            
             <returns>   The default settings file path. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppSettings.SaveSettingsTo(System.String,System.Object)">
             <summary>   Saves settings to an absolute path. </summary>
            
             <param name="fullFilePath"> Full pathname of the full file. </param>
             <param name="settings">     The class instance to serialize and store. </param>
            
             <returns>   The full file path to which the settings were stored. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppSettings.LoadSettingsFrom``1(System.String,System.Boolean)">
             <summary>   Loads settings from an absolute path. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="fullFilePath">         Full pathname of the full file. </param>
             <param name="forwardExceptions">    true to forward exceptions, otherwise they will only be
                                                 logged and null is returned. </param>
            
             <returns>   The restored settings. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.Assemblies">
            <summary>   Contains various methods to help load assemblies from various locations. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.Assemblies.GetExecutableLocation">
             <summary>   Gets the location of the executable file that started the current task. </summary>
            
             <returns>   The executable location. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.Assemblies.LoadAllReferencedAssemblies(System.Boolean,System.Boolean)">
             <summary>
             Loads all referenced assemblies that have not been loaded yet. Note that the compiler may
             remove assembly references if no code is used at compile time. You have to manually load such
             an assembly or use a dummy call or type within such an assembly.
             </summary>
            
             <param name="recursively">          Recursively load all referenced assemblies. </param>
             <param name="omitSystemNamespace">  true to ignore all assemblies in the System namespace and start the search from the entry assembly. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.Assemblies.LoadReferencedAssemblies(System.Reflection.Assembly,System.Boolean,System.Boolean)">
             <summary>
             Loads all the assemblies referenced by another assembly that have not been loaded yet. Note
             that the compiler may remove assembly references if no code is used at compile time. You have
             to manually load such an assembly or use a dummy call or type within such an assembly.
             </summary>
            
             <param name="assembly">             The root assembly. </param>
             <param name="recursively">          Recursively load all referenced assemblies. </param>
             <param name="omitSystemNamespace">  true to ignore all assemblies in the System namespace. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.Assemblies.LoadAssembliesFrom(System.String,System.Boolean)">
             <summary>
             Loads all assemblies from a certain directory. All files ending in .dll are treated as
             possible assemblies and a load attempt is performed. Failed attempts are logged to the
             Asf.Applications.Logger as warnings and loading is continued.
             </summary>
            
             <param name="path">         Full pathname of the directory to search for assemblies. If the
                                         directory does not exist, a log entry is created and the method
                                         returns 0. </param>
             <param name="recursively">  Recursively load all referenced assemblies. </param>
            
             <returns>   The number of assemblies successfully loaded from the directory. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ConfigFile">
            <summary>
            Read and writes configuration files where each line is stored in the "Key=Value" format. For
            each key, multiple entries are allowed. Use GetConfigValue() to retrieve the first entry,
            use GetAllConfigValues() or GetFirst/NextConfigValue() to retrieve additional ones.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.ConfigFile.C_COMMENT_CHARS">
            <summary>
            Accepted characters at the line beginning that indicate a remark
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.ConfigFile.Count">
            <summary>
            The number of entries in the config file
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.CountKeys(System.String)">
            <summary>
            The number of entries for a certain key
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.ContainsKey(System.String)">
             <summary>   Check if a certain key is present in the config file. </summary>
            
             <param name="key">  The key. </param>
            
             <returns>   true if at least one entry is present. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.ConfigFile.StringPairs">
            <summary>
            An internal helper class that holds all the key value pairs in the config file. A regular
            dictionary doesn't work since we allow multiple key entries.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.#ctor">
            <summary>
            Creates a new empty config file with no physical file location attached. You need to call
            SaveConfigAs() to associate this instance with a file on disk.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.FromString(System.String)">
             <summary>
             Initializes this object from the given config file contents. Those may be read e.g. from a
             database or file. Note that no physical file location is attached to the newly created
             instance. You need to call SaveConfigAs() to associate this instance with a file on disk.
             </summary>
            
             <param name="configContents">   The configuration contents. </param>
            
             <returns>   A ConfigFile. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.FromFile(System.String)">
             <summary>
             Initializes this object from the given file and associates it with the physical file
             location. If the file does not exist yet, it will be created once you call SaveConfig(). Note
             that any comments or blank lines are lost if you later save the file to the same location.
             </summary>
            
             <param name="fullFilePath"> The file to load the config from. Each line must be in the format
                                         "Key=Value". </param>
            
             <returns>   A ConfigFile. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.SaveConfig">
             <summary>
             Saves the configuration to a file that must have previously been associated by either calling
             SaveConfigAs() or initially instantiating the config file with FromFile().
             </summary>
            
             <exception cref="T:System.InvalidOperationException">    Thrown when no file was yet associated. </exception>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.SaveConfigAs(System.String)">
             <summary>
             Saves the configuration in the given location. The caller must be aware of any exceptions
             that may occur due to illegal path syntax, missing access rights etc.
             </summary>
            
             <param name="fullFilePath"> . </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.CreateConfigString">
             <summary>
             Creates a string containing the configuration. This string may be saved to a file or database.
             </summary>
            
             <returns>   The new configuration string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.SetConfigValue(System.String,System.String)">
             <summary>
             Will set (or create) the entry for the given key. If multiple entries for this key do already
             exist, only the first occurrence is overwritten. Note that an empty string can be set as a
             value. If configValue is null however, the key will be removed from the config. If multiple
             entries exist, all of them will be removed.
             </summary>
            
             <param name="configKey">    The key of the config entry. </param>
             <param name="configValue">  The value or null. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.DeleteConfigValue(System.String)">
             <summary>
             Deletes the config entry. If multiple entries exist, all of them are removed. If no entry
             with the given key exists, the function will return without further notice.
             </summary>
            
             <param name="configKey">    The key of the config entry. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.GetConfigValue(System.String)">
             <summary>
             Gets the configuration value. If multiple entries exist, the first occurrence is returned.
             </summary>
            
             <param name="configKey">    The key of the config entry. </param>
            
             <returns>   The configuration value. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.GetAllConfigValues(System.String)">
             <summary>   Gets all configuration values for a certain key. </summary>
            
             <param name="configKey">    The key of the config entry. </param>
            
             <returns>   A list of configuration values. If the key does not exist, an empty list is returned. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.GetFirstConfigValue(System.String)">
             <summary>   Gets the configuration value for the first occurrence of a key. </summary>
            
             <param name="configKey">    The key of the config entry. </param>
            
             <returns>   The first configuration value or null if the key does not exist. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.GetNextConfigValue(System.String)">
             <summary>   Gets the next configuration value for the key. </summary>
            
             <param name="configKey">    The key of the config entry. </param>
            
             <returns>   The next configuration value or null if no further entries do exist. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.GetBooleanValue(System.String)">
             <summary>
             Returns true, if the entry exists and is set to "true" (non-case sensitive)
             Returns false, if the entry exists and is set to "false" (non-case sensitive)
             Returns null if the key does not exist or the value is not boolean
             </summary>
            
             <param name="configKey">    The key of the config entry. </param>
            
             <returns>   The entry's value or null </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.GetBooleanValue(System.String,System.Boolean)">
             <summary>
             Returns true, if the entry exists and is set to "true" (non-case sensitive)
             Returns false, if the entry exists and is set to "false" (non-case sensitive)
             Returns the "missingValue" if the key does not exist or the value is not boolean
             </summary>
            
             <param name="configKey">    The key of the config entry. </param>
             <param name="missingValue"> true to missing value. </param>
            
             <returns>   true if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.GetFirstKeyValuePair">
             <summary>   Gets the first key value pair from the config file. </summary>
            
             <returns>   The first key value pair or null if the config is empty. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.ConfigFile.GetNextKeyValuePair">
             <summary>   Gets the next key value pair. </summary>
            
             <returns>   The next key value pair or null if no more entries exist. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.FolderBrowserDialog">
            <summary>
            Prompts the user to select a folder with a vista style dialog. Source: 
            
            http://dotnet-snippets.com/snippet/folderbrowserdialog-with-vista-style/8803
            
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.FolderBrowserDialog.SelectedPath">
            <summary>
            Gets or sets the path selected by the user.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.FolderBrowserDialog.SelectedElementName">
            <summary>
            Gets the name of the element selected by the user.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.FolderBrowserDialog.SelectedPaths">
            <summary>
            Gets an array of paths selected by the user.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.FolderBrowserDialog.SelectedElementNames">
            <summary>
            Gets an array of element names selected by the user.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.FolderBrowserDialog.AllowNonStoragePlaces">
            <summary>
            Gets or sets a value indicating whether the user is able to select non storage places.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.FolderBrowserDialog.Multiselect">
            <summary>
            Gets or sets a value indicating whether the user can select multiple folders or elements.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.FolderBrowserDialog.ShowDialog">
            <summary>
            Shows the dialog with the default owner.
            </summary>
            <returns><c>true</c> if the user clicks OK in the dialog box; otherwise <c>false</c></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.FolderBrowserDialog.ShowDialog(System.Windows.Window)">
            <summary>
            Shows the dialog with <paramref name="owner"/> as the owner.
            </summary>
            <param name="owner">The owner of the dialog box.</param>
            <returns><c>true</c> if the user clicks OK in the dialog box; otherwise <c>false</c></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.FolderBrowserDialog.ShowDialog(System.Windows.Interop.IWin32Window)">
            <summary>
            Shows the dialog with <paramref name="owner"/> as the owner.
            </summary>
            <param name="owner">The owner of the dialog box.</param>
            <returns><c>true</c> if the user clicks OK in the dialog box; otherwise <c>false</c></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.FolderBrowserDialog.ShowDialog(System.IntPtr)">
            <summary>
            Shows the dialog with <paramref name="owner"/> as the owner.
            </summary>
            <param name="owner">The owner of the dialog box.</param>
            <returns><c>true</c> if the user clicks OK in the dialog box; otherwise <c>false</c></returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.HaltRequestedException">
            <summary>   Exception for signaling errors due to halt requests through the ApplicationServices. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.HaltRequestedException.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.HaltRequestedException.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <param name="message">  The message. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.HaltRequestedException.#ctor(System.String,System.Exception)">
             <summary>   Constructor. </summary>
            
             <param name="message">          The message. </param>
             <param name="innerException">   The inner exception. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.HaltRequestedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>   Specialised constructor for use only by derived class. </summary>
            
             <param name="info">     The information. </param>
             <param name="context">  The context. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.Logger">
            <summary>   A static class to log to a file and to memory. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.Logger.LogLevels">
            <summary>
            The higher the log level the more important it is
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.Logger.C_MAX_LOG_DEFAULT">
            <summary>   The default maximum log size in characters. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.Logger.C_LOG_FILE_NAME">
            <summary>   The default Filename of the log file. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.Logger.MaxDescriptorLength">
             <summary>
             Gets the maximum length of any log level descriptor. When set to &lt;= 0, the length of the
             longest level descriptor is returned, otherwise the assigned value is returned.
             </summary>
            
             <value> The length of the maximum descriptor. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.Logger.GetLevelDescriptor(Keysight.Aes.Asf.Applications.Logger.LogLevels,System.Boolean)">
             <summary>   Get a text description for a log level, e.g. "WARN" for the Warning level. </summary>
            
             <param name="level">        The log level. </param>
             <param name="usePadding">   true to add trailing whitespaces up to MaxDescriptorLength. </param>
            
             <returns>   The level descriptor, cropped (or optionally padded) to MaxDescriptorLength. </returns>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.Logger.TimestampFormat">
             <summary>
             Gets or sets the format string for the timestamp of a log entry. By default, the year, month,
             day, hours, minutes and seconds are logged.
             </summary>
            
             <value> The timestamp format. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.Logger.MaxLogSize">
             <summary>   Gets or sets the maximum size of the log in memory. Set this to zero for no limit. </summary>
            
             <value> The maximum log size in characters. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.Logger.LogFileName">
             <summary>
             Gets or sets the filename of the log file. This is relative to the LogFilePath and called
             "Application.log" by default. This is evaluated on every call to "Log()" so you may switch
             logfiles at any time. Set this to an empty string or null to disable logging to a file.
             </summary>
            
             <value> The filename of the log file. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.Logger.LogFilePath">
             <summary>   Gets or sets the full pathname of the log file. </summary>
            
             <value>
             The full pathname of where the log file is stored. If you want to keep any existing log file,
             use MoveLogFile instead.
             </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.Logger.LogFileFullName">
            <summary>   Gets the name and path of the log file or null if none is set. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Applications.Logger.C_MARK_FRAME">
            <summary>
            Log entries of level "MARK" are framed by this line
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.Logger.LogLevelLimit">
            <summary>
            The log level (and above) that the logger should record.
            Incoming log levels that are below the set level are ignored.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.Logger.IsLogging">
            <summary>
            Use this to switch the logging on or off
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.Logger.GetLog">
            <summary>
            The current log
            </summary>
        </member>
        <member name="E:Keysight.Aes.Asf.Applications.Logger.LogChanged">
            <summary>   Is fired whenever the log contents change. </summary>
        </member>
        <member name="E:Keysight.Aes.Asf.Applications.Logger.LogWritten">
            <summary>   Is fired whenever a message is added to the log. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.Logger.SetLogger(Keysight.Aes.Asf.Applications.Logger.LogLevels,System.Boolean,System.Boolean)">
             <summary>
             Simple wrapper to modify the default configuration for the logger. By default, any existing
             log file is kept and no further logging is written to disk.
             </summary>
            
             <param name="level">        The log level. The default depends on the Debug/Release compile mode. Leave this at Undefined to keep the default setting. </param>
             <param name="writeFile">    true to write to a file 'Application.log' in the AppData directory. </param>
             <param name="clearFile">    true to clear any existing 'Application.log' file. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.Logger.MoveLogFile(System.String)">
             <summary>   Moves any existing log file to a new location. </summary>
            
             <param name="newFilePath">  Full pathname of the new file. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.Logger.Clear">
            <summary>
            Clear the current log in memory
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.Logger.ClearFile">
            <summary>
            Clears the log file if a LogFileName is set. Note that if this throws an exception, for
            example because the current access rights are not sufficient, the exception will be caught
            and logged to the memory logger.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.Logger.Log(System.String,System.Exception,System.Boolean)">
             <summary>   Add the message to the log file. </summary>
            
             <param name="cause">                The cause. </param>
             <param name="ex">                   The ex. </param>
             <param name="includeStackTrace">    true to include, false to exclude the stack trace. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.Logger.Log(Keysight.Aes.Asf.Applications.Logger.LogLevels,System.String)">
            <summary>
            Add the message to the log file
            </summary>
            <param name="level"></param>
            <param name="message"></param>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.Logger.GetLogEntry(Keysight.Aes.Asf.Applications.Logger.LogLevels,System.String)">
             <summary>   Creates the full log entry with a timestamp and a type description. </summary>
            
             <param name="level">    . </param>
             <param name="message">  . </param>
            
             <returns>   The log entry. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.StorageNameAttribute">
            <summary>
            Allows to add a filename to a class that shall be used when the class is serialized and saved
            to (or loaded from) disk. Hence the name must not contain any characters that could interfere
            with any means of saving (like also databases etc.)
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.StorageNameAttribute.Name">
             <summary>   Gets or sets the name to use for storage. </summary>
            
             <value> The name. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.StorageNameAttribute.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <param name="name"> The name to use for storage, e.g. "PrinterSettings.xml". </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.UndoStack`1">
            <summary>   Implements an undo stack that stores the application state in a user selectable type. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.UndoStack`1.IgnoreCalls">
             <summary>
             Gets or sets a value indicating whether the ignore calls. This can be used if your code that
             restores and undo state would run through calls of the undo stack.
             </summary>
            
             <value> true if ignore calls, false if not. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.UndoStack`1.UndoLimit">
             <summary>
             Gets or sets the maximum number of undo steps that are stored on the stack.
             </summary>
            
             <value> The undo limit. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.UndoStack`1.CanUndo">
             <summary>   Gets a value indicating whether we can undo. </summary>
            
             <value> true if we can undo, false if not. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Applications.UndoStack`1.CanRedo">
             <summary>   Gets a value indicating whether we can redo. </summary>
            
             <value> true if we can redo, false if not. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.UndoStack`1.PushUndo(`0)">
             <summary>   Pushes an application state onto the stack. </summary>
            
             <param name="applicationState"> State of the application. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.UndoStack`1.PopUndo">
             <summary>   Returns the previous application state from the stack. </summary>
            
             <returns>   State of the application or default(T) if no undo state is available (i.e. null for classes). </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.UndoStack`1.PopRedo">
             <summary>   Returns the application state previous to the last undo operation from the stack. </summary>
            
             <returns>   State of the application or default(T) if no redo state is available (i.e. null for classes). </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.UndoStack`1.Purge">
            <summary>   Purges the undo and redo stack. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.UndoStack`1.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.UndoStack`1.#ctor(System.Int32)">
             <summary>   Constructor. </summary>
            
             <param name="undoLimit">    The undo limit. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.UniqueEvent">
            <summary>   Provide wrapper methods to make sure an event handler does only subscribe once to an event. </summary>
            <example>
            To subscribe to a click event only once, instead of assigning the handler directly, use UniqueEvent like this:
            <code>
            using Keysight.Aes.Asf.Applications;
            
            // Code behind of a form can use the 'this' reference
            UniqueEvent.SubscribeOnce(this, nameof(MyButton.Click), myClickHandler);
            
            // For a static event, subscribe like this:
            UniqueEvenet.SubscribeOnce(typeof(StaticClassType), nameof(StaticClassType.StaticEvent), myHandler);
            </code>
            </example>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.UniqueEvent.SubscribeOnce(System.Object,System.String,System.EventHandler)">
             <summary>   Subscribe once to an event matching the default event handler signature. </summary>
             <example>
             To subscribe to an instance event:
             <code>
             UniqueEvent.SubscribeOnce(instance, nameof(instance.Click), myClickHandler);
             </code>
             To subscribe to a static event:
             <code>
             UniqueEvenet.SubscribeOnce(typeof(StaticClassType), nameof(StaticClassType.StaticEvent), myHandler);
             </code>
             </example>
            
             <param name="providerInstance"> The event provider or the type if the event is static. </param>
             <param name="eventName">        Name of the event. </param>
             <param name="subscriber">       The subscriber. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.UniqueEvent.SubscribeOnce``1(System.Object,System.String,System.EventHandler{``0})">
             <summary>   Subscribe once to an event matching a templated event handler signature. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="providerInstance"> The event provider or the type if the event is static. </param>
             <param name="eventName">        Name of the event. </param>
             <param name="subscriber">       The subscriber. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.AppVersion">
            <summary>   Contains helper methods to retrieve the applications version and build date. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppVersion.GetVersionString(System.Boolean,System.Reflection.Assembly)">
             <summary>
             Gets the application version and build date as a string in the form of &quot;1.2
             (17.3.2017)&quot; or &quot;1.2.4.8&quot; if the AssemblyInfo isn't set up for build dates.
             Note that you have to adjust your AssemblyInfo.cs and change
             <code>
             [assembly: AssemblyVersion(&quot;1.0.0.0&quot;)]
             </code>
             to
             <code>
             [assembly: AssemblyVersion(&quot;1.0.*&quot;)]
             </code>
             to have the build date automatically written into the application version info on each
             compile run.
             </summary>
            
             <param name="includeDate">  True to include, false to exclude the exact build date. </param>
             <param name="assembly">     The assembly to get the version string for or null to use the entry assembly. </param>
            
             <returns>   The application version and perhaps the build date as a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppVersion.GetCopyrightString(System.Reflection.Assembly)">
             <summary>
             Gets a copyright string like &quot;© Keysight Technologies 2017&quot; if the AssemblyInfo is
             set up for build dates. Note that you have to adjust your AssemblyInfo.cs and change
             <code>
             [assembly: AssemblyVersion(&quot;1.0.0.0&quot;)]
             </code>
             to
             <code>
             [assembly: AssemblyVersion(&quot;1.0.*&quot;)]
             </code>
             </summary>
            
             <param name="assembly"> The assembly to get the version string for or null to use the entry
                                     assembly. </param>
            
             <returns>   The copyright string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppVersion.GetCopyrightDate(System.Reflection.Assembly)">
            <summary>
            Gets the copyright date based on the application build date.
            </summary>
            <param name="assembly">The assembly to get the version string for or null to use the entry
                                     assembly.</param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppVersion.GetApplicationVersion(System.Reflection.Assembly)">
             <summary>   Gets application version of the executable initially launched. </summary>
            
             <param name="assembly"> The assembly to get the version string for or null to use the entry
                                     assembly. </param>
            
             <returns>   The application version. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppVersion.GetApplicationBuildDate(System.Reflection.Assembly)">
             <summary>
             Gets the application build date. Note that you have to adjust your AssemblyInfo.cs and change
             <code>
             [assembly: AssemblyVersion(&quot;1.0.0.0&quot;)]
             </code>
             to
             <code>
             [assembly: AssemblyVersion(&quot;1.0.*&quot;)]
             </code>
             to have the build date automatically written into the application version info on each
             compile run.
             </summary>
            
             <param name="assembly"> The assembly to get the version string for or null to use the entry
                                     assembly. </param>
            
             <returns>   The application build date. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppVersion.GetApplicationBuildDate(System.Version)">
             <summary>
             Gets the application build date from a version info that is supposed to contain that information.
             Note that you have to adjust your AssemblyInfo.cs and change
             <code>
             [assembly: AssemblyVersion(&quot;1.0.0.0&quot;)]
             </code>
             to
             <code>
             [assembly: AssemblyVersion(&quot;1.0.*&quot;)]
             </code>
             to have the build date automatically written into the application version info on each
             compile run.
             </summary>
            
             <param name="version">  The version. </param>
            
             <returns>   The application build date. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.AppVersion.GetLicenseCreationDate(System.Version)">
             <summary>   Gets license creation date for the new licensing scheme made
             by Nick Brantley to be compliant with project susenders. For example
              <code>
             [assembly: AssemblyVersion(&quot;2017.0727.*&quot;)]
             </code>
            
             </summary>
            
             <param name="version">  The version. </param>
            
             <returns>   The license creation date. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.WindowPlacement">
            <summary>
            Contains various functions that help the application with managing its window positions on
            screen in particular in those cases when the user switches the number of screens,
            resolution etc.
            <example>
            Use the GetPlacement and SetPlacement methods to gather and reapply the placement.
            </example>
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.WindowPlacement.RECT">
            <summary>   RECT structure required by WINDOWPLACEMENT structure. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.WindowPlacement.POINT">
            <summary>   POINT structure required by WINDOWPLACEMENT structure. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.WindowPlacement.WINDOWPLACEMENT">
            <summary>   WINDOWPLACEMENT stores the position, size, and state of a window. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.WindowPlacement.SetPlacement(System.Windows.Window,System.String)">
             <summary>
             Tries to place the window as stored in the xml string and takes screen changes into account.
             May throw exceptions in case the serialization data is corrupted.
             </summary>
            
             <param name="window">       The window. </param>
             <param name="placement">    The placement. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.WindowPlacement.GetPlacement(System.Windows.Window)">
             <summary>
             Returns the current window placement as serialized data that can be fed back into
             SetPlacement().
             </summary>
            
             <param name="window">   The window. </param>
            
             <returns>   The placement. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.WindowPlacement.SetPlacement(System.IntPtr,System.String)">
             <summary>
             Tries to place the window as stored in the xml string and takes screen changes into account.
             May throw exceptions in case the serialization data is corrupted.
             </summary>
            
             <param name="windowHandle"> Handle of the window. </param>
             <param name="placementXml"> The serialized placement data. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.WindowPlacement.GetPlacement(System.IntPtr)">
             <summary>   Returns the current window placement as serialized data that can be fed back into SetPlacement(). </summary>
            
             <param name="windowHandle"> Handle of the window. </param>
            
             <returns>   The placement. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Applications.UnhandledExceptions">
            <summary>   Class containing helper functions for catching exceptions. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.UnhandledExceptions.Catch(System.Object,System.Windows.Threading.DispatcherUnhandledExceptionEventArgs)">
             <summary>
             Catches an unhandled exception, writes the stack trace and all inner exceptions to a logfile
             (you can configure the Target in Logger.LogFileName) and informs the user to pass this on to
             the developer.
             </summary>
            
             <param name="sender">   Source of the event. </param>
             <param name="e">        Dispatcher unhandled exception event information. </param>
            
             <example>
             In a WPF application, you would assign this in your MainWindow constructor.
             <code>
                       this.Dispatcher.UnhandledException += Asf.Applications.UnhandledExceptions.Catch;
             </code>
             </example>
        </member>
        <member name="M:Keysight.Aes.Asf.Applications.UnhandledExceptions.GetExceptionStackTrace(System.Exception)">
             <summary>   Gets the stack trace of an exception as a string that can be logged. </summary>
            
             <param name="e">    The Exception to process. </param>
            
             <returns>   The exception stack trace. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.DataCollections.Hdf5Helper">
            <summary>
            Contains methods to save and load data using an HDF5 file.
            See http://sojourner.srs.is.keysight.com/org/esp/apps/hdf/doc/html/index.html    
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Hdf5Helper.CreateFileInMemory">
            <summary>   Creates an HDF5 file that is never written to a storage medium. </summary>
            
            <returns>   The associated HDF5 file identifier. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Hdf5Helper.ByteArrayToHdf5(System.Byte[])">
            <summary>   Opens an HDF5 file to make the data contained accessible. </summary>
            
            <param name="file">   Byte Array containing the HDF5 file. </param>
            
            <returns>   The associated HDF5 file identifier. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Hdf5Helper.Hdf5ToByteArray(System.Int64)">
            <summary>   Stores the HDF file in a properly sized byte array.
                        The file won't be accessible via the identifier afterwards. </summary>
                        
            <param name="fileID">   The identifier of the file. </param>
            
            <returns>   A byte array containing the HDF file. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Hdf5Helper.AddData(System.Int64,System.String,System.String,System.Boolean)">
            <summary>   Adds a string to the HDF5 file. </summary>
            
            <param name="locID">    Identifier of the file or group that shall contain the string. </param>
            <param name="name">     Name for the Dataset containing the string. </param>
            <param name="data">     String to add to the file. </param>
            <param name="keepOpen"> Determines whether the dataset is accessible after creation. </param>
            
            <returns>   The identifier of the dataset added to the HDF5 file or zero, depending on keepOpen. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Hdf5Helper.AddData(System.Int64,System.String,System.Array,System.Type,System.Boolean)">
            <summary>   Adds a generic array to the HDF5 file. A limited amount of datatypes is supported. </summary>
            
            <param name="locID">    Identifier of the file or group that shall contain the array. </param>
            <param name="name">     Name for the Dataset containing the array. </param>
            <param name="data">     Array to add to the file. </param>
            <param name="datatype"> The Type of objects in the array. </param>
            <param name="keepOpen"> Determines whether the dataset is accessible after creation. </param>
            
            <returns>   The identifier of the dataset added to the HDF5 file or zero, depending on keepOpen. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Hdf5Helper.AddData``1(System.Int64,System.String,System.Collections.Generic.List{``0},System.Type,System.Boolean)">
            <summary>   Adds a generic list to the HDF5 file. A limited amount of datatypes is supported. </summary>
            
            <param name="locID">    Identifier of the file or group that shall contain the string. </param>
            <param name="name">     Name for the dataset containing the string. </param>
            <param name="data">     List to add to the file. </param>
            <param name="dataType"> The Type of objects in the list. </param>
            <param name="keepOpen"> Determines whether the dataset is accessible after creation. </param>
            
            <returns>   The identifier of the dataset added to the HDF5 file. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Hdf5Helper.ReadDataString(System.Int64,System.String)">
            <summary>   Reads a dataset that contains a string. </summary>
            
            <param name="locID">  Identifier of the file or group containing the dataset. </param>
            <param name="name">   Name of the dataset. </param>
            
            <returns>   The string that was stored in the dataset. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Hdf5Helper.ReadDataArray(System.Int64,System.Type)">
            <summary>   Reads a dataset that contains an array. </summary>
            
            <param name="datasetID">  Identifier of the dataset. </param>
            <param name="datatype">   Datatype of the elements contained in the dataset. </param>
            
            <returns>   An array containing the data from the dataset. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Hdf5Helper.AddAttribute(System.Int64,System.String,System.String,System.Boolean)">
            <summary>   Adds a string to a an HDF5 object. </summary>
            
            <param name="locID">    HDF5 identifier of the object to which the string shall be attached. </param>
            <param name="name">     Name of the string. </param>
            <param name="content">  Content of the string. </param>
            <param name="keepOpen"> Determines whether the attribute is accessible after creation. </param>
            
            <returns>   The identifier of the attribute added to the HDF5 object. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Hdf5Helper.ReadAttribute(System.Int64,System.String,System.String@)">
            <summary>   Reads a string attached to an HDF5 object. </summary>
            
            <param name="locID">    Identifier of the object the string is attached to. </param>
            <param name="name">     Name of the attribute containing the string. </param>
            <param name="content">  Content of the string. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Hdf5Helper.GetNumberOfElementsInGroup(System.Int64)">
            <summary>   Get the number of HDF5 objects in a group. </summary>
            
            <param name="groupID">   Identifier of the group. </param>
            
            <returns>   The number of elements in the group. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Hdf5Helper.GetHdf5DataType(System.Type)">
            <summary>   Gets the HDF5 identifier of the corrosponding HDF5 datatype to a C# datatype. </summary>
            
            <param name="dataType">   The C# type to examine. </param>
            
            <returns>   The identifier of the HDF5 datatype used to store the C# datatype. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Hdf5Helper.GetIOType(System.Int64)">
            <summary>   Gets the corrosponding HDF5 identifier for IO to a datatype for creating. </summary>
            
            <param name="datatypeID">   Identifier of the datatype to examine. </param>
            
            <returns>   Identifier of the corrosponding IO datatype. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Hdf5Helper.PinMarshalableObject(System.Object,System.Runtime.InteropServices.GCHandle@)">
            <summary>   Pinnes an object to be passed to the Hdf5 libraries. </summary>
            
            <param name="data">     Object to pin. </param>
            <param name="handle">   Handle of the object must be freed after use. </param>
            
            <returns>   Pointer to the pinned object. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Hdf5Helper.WriteData(System.Int64,System.Int64,System.Object,System.Boolean)">
            <summary>   Writes data from a marshalable object to a dataset. </summary>
            
            <param name="datasetID">    Identifier of the dataset. </param>
            <param name="datatypeID">   Identifier of the IO datatype fitting to the datatype used for creating the dataset. </param>
            <param name="data">         Marshalable object containing the data. </param>
            <param name="keepOpen">     Determines whether the dataset is accessible after creation. </param>
            
            <returns>   The identifier of the dataset added to the HDF5 file or zero, depending on keepOpen. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.DataCollections.CollectionHelper">
            <summary>   Contains various methods to assist in evaluating collection contents. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.CollectionHelper.AreCountsEqual(System.Collections.IList[])">
             <summary>   Determines whether all the Lists contain the same number of elements. </summary>
            
             <param name="collections">  A variable-length parameters list containing collections. </param>
            
             <returns>   true if all element counts are equal or only one or no list are given, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.CollectionHelper.IsAnyNull(System.Object[])">
             <summary>   Determine if any of the elements is null. </summary>
            
             <param name="elements">   A variable-length parameters list containing things. </param>
            
             <returns>   true if any of the elements is null. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.DataCollections.DataTableExtensions">
            <summary>   Contains extension methods for System.Data.DataTable. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.DataTableExtensions.ToCsv(System.Data.DataTable,Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings)">
             <summary>   A DataTable extension method that converts this object to a CSV string. </summary>
            
             <param name="table">    The table to act on. </param>
             <param name="settings"> Options for controlling the operation. </param>
            
             <returns>   The given data converted to a string. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.DataCollections.ItemPropertyChangedEventArgs">
            <summary>
            Based on the PropertyChangedEventArgs, this class provides information about the property
            that has changed within an item as well as the ObservablePropertyChangedCollection that is
            holding the item.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.DataCollections.ItemPropertyChangedEventArgs.PropertyOwner">
             <summary>   Gets the item that owns the property. </summary>
            
             <value> The property owner. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.DataCollections.ItemPropertyChangedEventArgs.EventArgs">
             <summary>   The original event arguments for the changed property. </summary>
            
             <value> The event arguments. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.ItemPropertyChangedEventArgs.#ctor(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
             <summary>   Constructor. </summary>
            
             <param name="propertyOwner">    The property owner. </param>
             <param name="e">                Property changed event information. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.DataCollections.LimitedCollection`1">
             <summary>
             Collection of limited capacity. Items are stored in order of their addition. If the
             collection grows beyond the desired capacity, the oldest object is removed until capacity is
             met.
             </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
        </member>
        <member name="P:Keysight.Aes.Asf.DataCollections.LimitedCollection`1.MaxCapacity">
             <summary>   Gets or sets the maximum capacity. </summary>
            
             <value> The maximum capacity. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.LimitedCollection`1.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.LimitedCollection`1.#ctor(System.Int32)">
             <summary>   Constructor. </summary>
            
             <param name="capacity"> The capacity. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.LimitedCollection`1.InsertItem(System.Int32,`0)">
             <summary>
             Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at
             the specified index.
             </summary>
            
             <param name="index">    The zero-based index at which <paramref name="item" /> should be
                                     inserted. </param>
             <param name="item">     The object to insert. The value can be null for reference types. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.DataCollections.ObservablePropertyChangedCollection`1">
            <summary>
            An observable collection of items that each support the INotifyPropertyChanged event. The
            collection will subscribe to each individual PropertyChanged event and notify the consumer of
            any changes of any property of any item through the ItemPropertyChanged event.
            </summary>
        </member>
        <member name="E:Keysight.Aes.Asf.DataCollections.ObservablePropertyChangedCollection`1.ItemPropertyChanged">
            <summary>   Fired when any property of any item of the collection has changed. </summary>
        </member>
        <member name="E:Keysight.Aes.Asf.DataCollections.ObservablePropertyChangedCollection`1.AnyPropertyChanged">
            <summary>   Fired when any property of any item of the collection has changed (also during a notification inhibit). </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.ObservablePropertyChangedCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
             <summary>
             Raises the
             <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" />
             event with the provided arguments.
             </summary>
            
             <param name="e">    Arguments of the event being raised. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.ObservablePropertyChangedCollection`1.StartUpdateCumulation">
            <summary>
            Starts update cumulation for the properties (not for . Call this before doing multiple updates that shall not be broadcast
            via the CollectionChanged event. When done, Call EndUpdateCumulation() to have one update
            issued.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.ObservablePropertyChangedCollection`1.EndUpdateCumulation">
            <summary>   Ends update cumulation. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.ObservablePropertyChangedCollection`1.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.ObservablePropertyChangedCollection`1.ClearItems">
            <summary>   Removes all items from the collection. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.DataCollections.ComponentCollection">
            <summary>
            A component collection holds components (typically class instances) where only once instance
            per type exists. Note that this references the compile time type.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.ComponentCollection.Set(System.Object)">
             <summary>   Sets the given component for the specified type. </summary>
            
             <param name="component">    The component. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.ComponentCollection.Get``1">
             <summary>   Gets the component of the requested type. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
            
             <returns>   The component. Throws a KeyNotFoundException if the component is missing. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.ComponentCollection.Get(System.Type)">
             <summary>   Gets the component of the requested type. </summary>
            
             <param name="type"> The type. </param>
            
             <returns>   The component. Throws a KeyNotFoundException if the component is missing. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.ComponentCollection.HasComponent``1">
             <summary>   Query if a component of the given type is present. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
            
             <returns>   true if the component is present, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.ComponentCollection.HasComponent(System.Type)">
             <summary>   Query if a component of the given type is present. </summary>
            
             <param name="type"> The type. </param>
            
             <returns>   true if the component is present, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.ComponentCollection.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.ComponentCollection.#ctor(System.Collections.Generic.Dictionary{System.Type,System.Object})">
             <summary>   Constructor from a dictionary </summary>
            
             <param name="dict"> The dictionary. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.DataCollections.SettingsStorage">
            <summary>
            Keeps a component collection of settings classes that can be saved / loaded and accessed
            through type template methods.
            The ApplicationServices hold an instance of this by default (called GlobalSettings) which
            has pre-populated settings like the CsvExportSettings.
            If you want to make use of these, you need to assign the SettingsFolder and call LoadSettings()
            once. SaveSettings() is called automatically through the ApplicationExit event.(EXS will take
            care of that for you)
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.DataCollections.SettingsStorage.IsConfigured">
             <summary>   Gets a value indicating whether this object is configured. </summary>
            
             <value> true if this object is configured, false if not. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.DataCollections.SettingsStorage.SettingsFolder">
             <summary>
             Gets or sets the sub-pathname of the settings folder within the appdata space, e.g. "Company\\
             Product". This must be initially be set by the consumer.
             </summary>
            
             <value> The pathname of the settings folder, e.g. "Company\\Product". </value>
        </member>
        <member name="P:Keysight.Aes.Asf.DataCollections.SettingsStorage.SettingsFile">
             <summary>   Gets or sets the settings file name. </summary>
            
             <value> The settings file name. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.SettingsStorage.LoadSettings">
            <summary>   Loads the settings. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.SettingsStorage.SaveSettings(System.Boolean)">
             <summary>   Saves the settings. </summary>
            
             <param name="onlyIfConfigured"> true to do a save attempt only if the class instance was configured (i.e. a SettingsFolder was set). </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.SettingsStorage.GetSetting``1">
             <summary>   Gets the setting of a particular type. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
            
             <returns>   The setting. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.SettingsStorage.GetSetting(System.Type)">
             <summary>   Gets the setting of a particular type. </summary>
            
             <param name="settingsType"> The type. </param>
            
             <returns>   The setting. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.SettingsStorage.GetShallowCopy``1(System.Type,System.Boolean)">
             <summary>   Gets a shallow copy of a setting. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="attributeType">    Type of the attribute. </param>
             <param name="avoidAttribute">   true to avoid attribute. </param>
            
             <returns>   The shallow copy or null if no setting exists. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.SettingsStorage.SetSetting(System.Object)">
             <summary>   Sets a setting. </summary>
            
             <param name="setting">  The setting. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.SettingsStorage.ConfirmSetting``1">
             <summary>   Confirms that a setting exists and if not, creates a new instance. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
            
             <returns>   The setting that was stored. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.DataCollections.SettingsStorage.CreateSetting`1">
             <summary>   Creates a setting. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.SettingsStorage.ConfirmSetting``1(Keysight.Aes.Asf.DataCollections.SettingsStorage.CreateSetting{``0})">
             <summary>
             Confirms that a setting exists and if not, calls the provided delegate to creates a new
             instance.
             </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="creator">  The creator. </param>
            
             <returns>   The setting that was stored. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.SettingsStorage.ConfirmSetting(System.Type)">
             <summary>
             Confirms that a setting exists and if not, creates a new instance using the default constructor.
             Note that this uses the Activator which will throw a runtime exception if your type does not
             have a default constructor. In that case, use ConfirmSettings with the create action instead
             to provide your own construction code.
             </summary>
            
             <param name="settingsType"> The type. </param>
            
             <returns>   The setting that was stored. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.SettingsStorage.ConfirmSetting(System.Type,System.Func{System.Object})">
             <summary>
             Confirms that a setting exists and if not, creates a new instance using the provided
             function.
             </summary>
            
             <param name="settingsType"> The type. </param>
             <param name="creator">      The creator. </param>
            
             <returns>   The setting that was stored. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.SettingsStorage.HasSetting``1">
             <summary>   Query if a particular setting exists. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
            
             <returns>   true if the setting exists, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.SettingsStorage.HasSetting(System.Type)">
             <summary>   Query if a particular setting exists. </summary>
            
             <param name="settingsType"> The type. </param>
            
             <returns>   true if the setting exists, false if not. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.DataCollections.CollectorIgnoreAttribute">
            <summary>   Attribute to decorate all public properties that shall NOT be collected from a data class. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.DataCollections.Collector`1">
             <summary>
             A collector class will collect data that arrives in rows and will rearrange it to columns
             identified by name. Examples include data classes that hold data by properties. The
             properties need to be public instance members and need to be decorated with the
             CollectibleAttribute.
            
             It's also possible to just collect single values, in which case two columns will
             automatically be generated, one holding the values and one holding an increasing index
             starting at zero.
            
             The Collector can be strongly typed or, by using the generic object type for T, it can allow
             for different types per column. The data can then be retrieved via GetCastData to receive
             typed data.
            
             While adding data, it is not required that all columns maintain the same data count and the
             collector does not test for this. However particular extraction methods may require an
             identical count across all columns, e.g. ToDataTable() and will cause an exception if the
             requirement isn't met.
            
             When adding data, it is not required that all data within a column is of the same type unless
             the collector was instantiated in a strongly typed manner (e.g. Collector&lt;double&gt;).
             </summary>
            
             <typeparam name="T">    Generic type parameter to be used for the data elements. </typeparam>
        </member>
        <member name="F:Keysight.Aes.Asf.DataCollections.Collector`1.C_INDEX_COLUMN">
            <summary>   The name of an automatically generated index column if Add(IEnumerable) was used. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.DataCollections.Collector`1.C_VALUE_COLUMN">
            <summary>   The name of an automatically generated value column if Add(IEnumerable) was used. </summary>
        </member>
        <member name="E:Keysight.Aes.Asf.DataCollections.Collector`1.CollectionChanged">
            <summary>   Occurs when the collection changes. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.DataCollections.Collector`1.AddHandlerToCollectionChanged">
            <summary>   Adds the handler to the CollectionChanged event. This helps doing it in an initializer. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.Lock">
             <summary>
             Locks this collector so that no other thread can apply changes to the data until Unlock is
             called.
             </summary>
             <example>
             You must ensure that you call Unlock under any circumstances or else the collector will remain locked.
             Typically, you would do it like this:
             <code>
                         try
                        {
                            myCollector.Lock();
                            // Your code here...
            
                        }
                        finally()
                        {
                            myCollector.Unlock();
                        }
            
             </code>
             </example>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.Unlock">
            <summary>   Unlocks this collector. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.DataCollections.Collector`1.Count">
            <summary>   Gets the number of elements in the first column or zero if no columns exist </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.DataCollections.Collector`1.ColumnCount">
            <summary>   Gets the number of columns. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.Exists(System.String)">
             <summary>   Determine if 'key' exists. </summary>
            
             <param name="key">  The column name. </param>
            
             <returns>   true if the column exists, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.GetKeys">
             <summary>   Gets the keys which identify all columns in the collector. </summary>
            
             <returns>   The keys. </returns>
        </member>
        <member name="P:Keysight.Aes.Asf.DataCollections.Collector`1.SourceType">
             <summary>   Gets the type of the data source class that was last used with the Add(class) method. </summary>
            
             <value> The type of the data source class. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.StartUpdateCumulation">
            <summary>
            Starts update cumulation. Call this before doing multiple updates that shall not be broadcast
            via the CollectionChanged event. When done, Call EndUpdateCumulation() to have one update
            issued.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.EndUpdateCumulation">
            <summary>   Ends update cumulation. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.Clear">
            <summary>   Clears this object to its blank/initial state. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.Add(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double})">
             <summary>
             Adds all values and indices of the provided lists to automatically generated columns. The
             exact column names can be determined via the constants C_VALUE_COLUMN and C_INDEX_COLUMN.
             Since the indices and the values are of the same types, you may to create the Collector
             instance as Collector&gt;double&lt; to use this method.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when the two collections vary in size. </exception>
            
             <param name="indices">  The indices. </param>
             <param name="values">   The values to add. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.Add``1(``0)">
             <summary>
             Adds all public properties (except those marked as [CollectorIgnore]) from the provided class
             as individual columns named after the properties.
             Also stores the type information to derive the screen names from. Only the first passed in class
             type can be used as for screen name references
             </summary>
            
             <typeparam name="D">    Type of the class. </typeparam>
             <param name="dataClass">    The class instance to add the data from. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.AddRange(System.Collections.Generic.IEnumerable{System.Double})">
             <summary>
             Adds all values of the provided list to a value column and automatically generates or
             continues an index column. The exact column names can be determined via the constants
             C_VALUE_COLUMN and C_INDEX_COLUMN.
             Since the index and the values are of different types, you need to create the Collector
             instance as Collector&gt;object&lt; to use this method.
             </summary>
            
             <param name="values">   The values to add. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.AddRange(System.String,System.Collections.Generic.IEnumerable{System.Double})">
             <summary>   Adds all values of the provided list to a named column. If the column does not yet exist, it is created </summary>
            
             <param name="key">      The column name. </param>
             <param name="values">   The values to add. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.AddRange``1(System.Collections.Generic.IEnumerable{``0})">
             <summary>
             Adds all public properties (except those marked as [CollectorIgnore]) from the provided
             classes as individual columns named after the properties. Also stores the type information to
             derive the screen names from. Only the first passed in class type can be used as for screen
             name references.
             </summary>
            
             <typeparam name="D">    Type of the class. </typeparam>
             <param name="dataClasses">  The class instances to add the data from. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.GetCollectibleData``1(``0,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo})">
             <summary>
             Gets the data from the class that the collector would add to it's collection on a call to
             Add(dataClass).
             </summary>
            
             <typeparam name="D">    Type of the d. </typeparam>
             <param name="dataClass">        The class instance to add the data from. </param>
             <param name="propertyInfos">    The property infos or null to have them extracted automatically. </param>
            
             <returns>
             The collectible data as a dictionary with the property name as key and the according values.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.Add``1(System.Collections.Generic.Dictionary{System.String,``0})">
             <summary>
             Adds the data to the columns of the same names or adds new columns where applicable. No check
             is done on whether an already existing column contains the same type of data.
             </summary>
            
             <typeparam name="D">    Type of the data. </typeparam>
             <param name="data"> The data to add. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.Add``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Int32)">
             <summary>
             Adds all values of the provided list to a range of named columns, adding one value per column
             and using column names with a continuous numbering scheme. If a column does not yet exist, it
             is created. No check is done on whether an already existing column contains the same type of
             data.
             </summary>
            
             <typeparam name="D">    Type of the data. </typeparam>
             <param name="data">             The data to add. </param>
             <param name="columnPrefix">     The column prefix identical for all columns. </param>
             <param name="columnStartIndex"> The index of the first column. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.Add(System.String,System.Object)">
             <summary>   Adds one data element to a particular column. </summary>
            
             <param name="key">      The column name. </param>
             <param name="value">    The value. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.Add(System.String,`0)">
             <summary>   Adds one data element to a particular column. </summary>
            
             <param name="key">      The column name. </param>
             <param name="value">    The value. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.GetData(System.String,System.Int32)">
             <summary>
             Returns one particular entry from one column. If either the key or index do not exist, an
             exception is thrown.
             </summary>
            
             <param name="key">      The column name. </param>
             <param name="index">    Zero-based index of the entry to retrieve. </param>
            
             <returns>   The retrieved entry. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.GetFirst(System.String)">
             <summary>
             Returns the first entry from the column. If the key does not exist or the column has no
             entries, an exception is thrown.
             </summary>
            
             <param name="key">  The column name. </param>
            
             <returns>   The retrieved entry. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.GetLast(System.String)">
             <summary>
             Returns the last entry from the column. If the key does not exist or the column has no
             entries, an exception is thrown.
             </summary>
            
             <param name="key">  The column name. </param>
            
             <returns>   The retrieved entry. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.GetData(System.String)">
             <summary>   Returns the data from one column. </summary>
            
             <param name="key">  The column name. </param>
            
             <returns>   The data or null if the column name does not exist. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.GetCastData``1(System.String)">
             <summary>
             Returns the data from one column cast to a particular type. This is faster if the column was
             already stored as the provided type, otherwise a Convert attempt is made for each individual
             value. This is also used when the Collector was instantiated for T = object to add whole
             class instances with varying type properties so that the actual column types are known by the
             consumer.
             </summary>
            
             <typeparam name="C">    Type to cast the column's data to. </typeparam>
             <param name="key">  The column name. </param>
            
             <returns>
             The data elements cast to the required type or null if the column name does not exist.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.GetCastDataList``1(System.String)">
             <summary>
             Returns the data from one column cast to a particular type. This is faster if the column was
             already stored as the provided type, otherwise a Convert attempt is made for each individual
             value. This is also used when the Collector was instantiated for T = object to add whole
             class instances with varying type properties so that the actual column types are known by the
             consumer.
             </summary>
            
             <typeparam name="C">    Type to cast the column's data to. </typeparam>
             <param name="key">  The column name. </param>
            
             <returns>
             The data elements cast to the required type or null if the column name does not exist
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.GetScreenName(System.String)">
             <summary>
             Gets the screen name for a column. If data is passed in via properties of a class instance
             and the property is marked with a DisplayName attribute, the attribute's value is returned.
             Otherwise the key itself is returned.
             </summary>
            
             <param name="key">  The column name. </param>
            
             <returns>   The screen name. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.ToDataTable">
             <summary>   Returns a data table containing the collector's data. </summary>
            
             <returns>   A DataTable. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.Clone">
             <summary>
             Creates a new object that is a copy of the current instance. Does NOT create a deep copy of
             the collected objects.
             </summary>
            
             <returns>   A new object that is a copy of this instance. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.CloneFrom(Keysight.Aes.Asf.DataCollections.Collector{`0})">
             <summary>   Clones all data from a source to this instance. </summary>
            
             <param name="source">   Another instance to copy. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.CompareTo(System.Object)">
             <summary>
             Compares the current instance with another object of the same type and returns an integer
             that indicates whether the current instance precedes, follows, or occurs in the same position
             in the sort order as the other object.
             </summary>
            
             <param name="obj">  An object to compare with this instance. </param>
            
             <returns>
             A value that indicates the relative order of the objects being compared. The return value has
             these meanings: Value Meaning Less than zero This instance precedes <paramref name="obj" />
             in the sort order. Zero This instance occurs in the same position in the sort order as
             <paramref name="obj" />. Greater than zero This instance follows <paramref name="obj" /> in
             the sort order.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.DeriveScreenNames(System.Type)">
             <summary>
             Allows the consumer to make the column names accessible via GetScreenNames() without storing
             an actual class instance first.
             </summary>
            
             <param name="dataClassType">    Type of the data class. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.GetScreenNames(System.Type)">
             <summary>   Gets the screen names of all public properties that are not marked with the CollectorIgnoreAttribute. </summary>
            
             <param name="dataClassType">    Type of the data class. </param>
            
             <returns>   The property names and the according screen names as dictionary. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.ToXml">
             <summary>   Converts this object to an XML node. </summary>
            
             <returns>   This object as a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.FromXml(System.String)">
             <summary>   Initializes this object from the given XML string. </summary>
            
             <param name="xml">  The XML. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.ReadFromXml(System.String)">
             <summary>   Initializes a new Collector from the given from XML. This is only suitable for generic Collector&lt;object&gt;. </summary>
            
             <param name="xml">  The XML. </param>
            
             <returns>   A Collector&lt;object&gt; </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.ToCsv(Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings)">
             <summary>   Converts this object to a Csv section using the provided settings. </summary>
            
             <param name="settings"> Options for controlling the operation. If null, the application wide
                                     settings will be used. </param>
            
             <returns>   This object as a csv string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.ToHdf5(System.Int64)">
            <summary>   Converts this object to an HDF5 group containing datasets and attributes. </summary>
            
            <param name="fileID">   Identifier of the file or group that this objects data will be added to. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.FromHdf5(System.Int64)">
            <summary>   Initializes this object from the given HDF5 file. </summary>
            
            <param name="fileID">   Identifier of the file or group that contains the data of this object. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.DataCollections.Collector`1.ReadFromHdf5(System.Int64)">
             <summary>   Initializes a new Collector from the given from HDF5 file. This is only suitable for generic Collector&lt;object&gt;. </summary>
            
             <param name="fileID">  Identifier of the file or group that contains the data of this object. </param>
            
             <returns>   A Collector&lt;object&gt; </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Files.PluginLoader">
            <summary>
            The PluginLoader supports preloading of DLLs that implement certain types and finding those
            types within a loaded assembly.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Files.PluginLoader.PluginAssemblies">
             <summary>
             Gets the plugin assemblies that were found through calls to LoadPlugins().
             </summary>
            
             <value> The plugin assemblies. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.PluginLoader.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.PluginLoader.LoadPlugins(System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
             <summary>
             Loads the plugins found in a dictionary matching a filemask and providing certain types. This
             method may be called on multiple times, e.g. to scan multiple locations or file masks.
             </summary>
            
             <param name="directory">        Pathname of the directory to scan for plugins. If this is
                                             null, the entry assembly's location will be scanned. </param>
             <param name="fileMask">         The file mask for the assemblies to look at, by default this
                                             is "Keysight*.dll". </param>
             <param name="recursively">      true to recursively scan the directory. </param>
             <param name="namesAndTypes">    Pairs of names and base types. Each assembly will be examined
                                             whether it provides a type of that name and whether it could be
                                             cast to the given type. If this is null, any dll matching the
                                             filemask will be added to the found plugins. </param>
             <param name="includeAlso">      Other assemblies to include in the scan. E.g. the entry or
                                             executing assembly of the consumer can be passed in here. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.PluginLoader.GetTypeByName(System.String)">
             <summary>
             Gets the first type from the loaded assembly that matches a particular name.
             </summary>
            
             <param name="typeName"> Name of the type. </param>
            
             <returns>   The type or null if it wasn't found. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.PluginLoader.GetTypeByName(System.Reflection.Assembly,System.String,System.Type)">
             <summary>   Gets a type from an assembly by it's name and a type it shall be assignable to. </summary>
            
             <param name="dll">              The DLL. </param>
             <param name="typeName">         Name of the type. </param>
             <param name="assignableType">   The assignable Type. Use typeof(object) if you don't care. </param>
            
             <returns>   The named type. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Files.ISelfCsvExporter">
            <summary>   Interface for classes that can write out their own content to Csv. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.ISelfCsvExporter.ToCsv(Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings)">
             <summary>   Converts this object to a Csv section using the provided settings. </summary>
            
             <param name="settings"> Options for controlling the operation. If null, the application wide
                                     settings will be used. </param>
            
             <returns>   This object as a csv string. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Files.Copy">
            <summary>   Contains helper methods to copy directories. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.Copy.Directory(System.String,System.String,System.Boolean,System.Nullable{System.Boolean})">
             <summary>
             Recursivley copies a directory into another, either inlcuding the top level source directory
             or not. Any missing target directory will automatically be created.
             </summary>
            
             <param name="sourcePath">               Full pathname of the source directory. </param>
             <param name="targetPath">               Full pathname of the target directory. </param>
             <param name="copyTopLevelDirectory">    True to copy top level directory. </param>
             <param name="overwriteExisting">        True to overwrite already existing files, false to
                                                     leave existing files untouched, null to throw an
                                                     exception if a file already exist. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.Copy.Recursively(System.IO.DirectoryInfo,System.IO.DirectoryInfo,System.Nullable{System.Boolean})">
             <summary>
             Recursively copies the contents of the source directory into the target directory (which has
             to exist already).
             </summary>
            
             <param name="source">               Source for the. </param>
             <param name="target">               Target for the. </param>
             <param name="overwriteExisting">    True to overwrite already existing files, false to
                                                                                 leave existing files
                                                                                 untouched, null to throw an
                                                                                 exception if a file already
                                                                                 exist. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Files.CsvExport">
            <summary>   Contains helper functions to export data to CSV files. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.CsvExport.ExportToFile(System.Data.DataTable,Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings)">
             <summary>
             Prompts the user for a target file and then exports the datatable as csv to that file.
             </summary>
            
             <param name="data">     The data. </param>
             <param name="settings"> Options for controlling the operation. If null, the application wide settings will be used. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.CsvExport.ExportToFile(System.String,System.Data.DataTable,Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings)">
             <summary>   Exports the datatable as csv to that file. </summary>
            
             <param name="csvFile">  The CSV file. </param>
             <param name="data">     The data. </param>
             <param name="settings"> Options for controlling the operation. If null, the application wide
                                     settings will be used. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.CsvExport.ToCsvNumber(System.Object,Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings)">
             <summary>   Converts an object to a CSV number formatted according to the chosen settings. </summary>
            
             <param name="value">    The value. </param>
             <param name="settings"> Options for controlling the operation. If null, the application wide
                                     settings will be used. </param>
            
             <returns>   The given data converted to a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.CsvExport.ToCsvLine``1(System.Collections.Generic.IEnumerable{``0},Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings)">
             <summary>   Converts a list of objects to a CSV line. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="values">   The values. </param>
             <param name="settings"> Options for controlling the operation. If null, the application wide
                                     settings will be used. </param>
            
             <returns>   The given data converted to a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.CsvExport.GetGlobalSettings">
             <summary>   Gets the global settings for a csv export. </summary>
            
             <exception cref="T:System.ApplicationException"> Thrown when no settings exist. </exception>
            
             <returns>   The global settings. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.CsvExport.CsvHeader(System.String)">
             <summary>   Creates a header for a CSV file containing extra data. </summary>
            
             <param name="name"> The header name. </param>
            
             <returns>   A string that should identify the header. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.CsvExport.ToCsvMetaLine(System.String,System.Object,Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings)">
             <summary>   Converts this object to a CSV meta data line. </summary>
            
             <param name="name">     The object's name. </param>
             <param name="value">    The value. </param>
             <param name="settings"> Options for controlling the operation. If null, the application wide
                                     settings will be used. </param>
            
             <returns>   The given data converted to a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.CsvExport.ToCsvMetaLine``1(System.Collections.Generic.IEnumerable{``0},Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings)">
             <summary>
             Converts this object to a CSV meta data line. The result will be identical to a call to
             ToCsvLine() except for a leading separator char.
             </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="values">   The values. </param>
             <param name="settings"> Options for controlling the operation. If null, the application wide
                                     settings will be used. </param>
            
             <returns>   The given data converted to a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.CsvExport.ToCsvMetaLines(System.Object,Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings)">
             <summary>   Converts an object to multiple CSV lines each containing a public property by DisplayName and value. </summary>
            
             <param name="classInstance">  The content. </param>
             <param name="settings"> Options for controlling the operation. If null, the application wide
                                     settings will be used. </param>
            
             <returns>   The given data converted to a string. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Files.FileNameHelper">
            <summary>   Contains various methods to assist in evaluating file names. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.FileNameHelper.IsFileNameValid(System.String)">
             <summary>   Queries if a file name does only consist of characters that are accepted by the file system. </summary>
            
             <param name="fileName"> Filename of the file. </param>
            
             <returns>   true if the file name is valid, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.FileNameHelper.GetTempFile(System.String,System.String)">
             <summary>
             Gets a full path for a temporary file. There is no guarantee that the file can actually be
             written.
             </summary>
            
             <param name="name">     The name. If omitted, a random name will be generated. </param>
             <param name="suffix">   The suffix. If omitted, ".tmp" will be appended. </param>
            
             <returns>   The full path to the temporary file. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.FileNameHelper.GetTimeStampFile(System.String,System.String)">
             <summary>   Gets a filename from the current date and time. </summary>
            
             <param name="prefix">   The prefix. </param>
             <param name="suffix">   The suffix. You need to include the dot if you want one, e.g. ".tmp". </param>
            
             <returns>   The time stamped filename. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.FileNameHelper.MakeFileNameUnique(System.String)">
             <summary>   Makes file name unique by adding a number e.g. "_1" at the end of the files name. </summary>
            
             <param name="filename"> Filename of the file including the full path. </param>
            
             <returns>   The uniqe file name. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Files.MakeSure">
            <summary>   Contains helper methods to check for various conditions of files and folders. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Files.MakeSure.FoldersExist(System.String,System.String)">
             <summary>
             Checks if all folders within a given path exist and if not, creates each missing one.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="targetPath">   Full pathname to the starting point of the iteration. Can be left
                                         empty if folderNames contains a full absolute path. </param>
             <param name="folderNames">  Relative list of all folders to create within the targetPath. </param>
            
             <returns>   The full path to the last created folder. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate">
            <summary>A hp 289 hot plate Driver. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.RampScaleSetting">
            <summary>Values that represent ramp scale settings. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.RampScaleSetting.Minutes">
            <summary>Set the slope to minute. ex: for 100C° the slope will be 100°C/minute </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.RampScaleSetting.Hours">
            <summary>Set the slope to hours. ex: for 100C° the slope will be 100°C/hours </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.OffLineMode">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets a value indicating whether the off line mode./ </summary>
            
             <value>True if off line mode, false if not. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.DebugMode">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets a value indicating whether the debug mode is enable. </summary>
            
             <value> True if debug mode, false if not. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.Open(System.String,System.Int32,System.Boolean,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>Opens. </summary>
            
             <param name="visaAddress">The visa address.</param>
             <param name="timeoutSec"> The timeout security.</param>
             <param name="simulation"> (Optional) True to simulation.</param>
             <param name="debugMode">    (Optional)
                                         True to enable debug mode, false to disable it.</param>
            
             <returns>True if it succeeds, false if it fails. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.SetHotplate(System.Double,Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.RampScaleSetting,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets a hotplate. </summary>
            
             <param name="temperature">              The temperature. </param>
             <param name="rampScale">                The ramp scale setting. </param>
             <param name="rampScaleSettingValue">    The ramp scale setting value. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.IsInstrumentAllowed(System.String[],System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>    Query if the model number from the IDN reply matches any of the given model numbers. The
             comparison is case sensitive. Optionally, wildcards can be used, e.g "344*A" for all DMMs or
             "3446?A" for a few very particular models. In Demo mode, assume that the instrument is correct </summary>
            
             <remarks>   Gumoreau, 11/21/2017. </remarks>
            
             <param name="modelNumbers">     The model numbers. </param>
             <param name="allowWildcards">   (Optional) True to allow, false to deny wildcards. </param>
            
             <returns>   True if instrument allowed, false if not. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.Close">
            -------------------------------------------------------------------------------------------------
             <summary>Closes this object. </summary>
            
             <returns>True if it succeeds, false if it fails. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.IDN">
            -------------------------------------------------------------------------------------------------
             <summary>Gets the idn. </summary>
            
             <returns>A string. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.CustomQuery(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Custom query. </summary>
            
             <param name="command">The command.</param>
            
             <returns>A string. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.SendCustomCommand(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Sends a command. </summary>
            
             <param name="command">The command.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.ChangeAddress(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>Change address. </summary>
            
             <param name="addressNumber">The address number.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.SetTemperatureRemote(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>Sets temperature remote. </summary>
            
             <param name="tempCelcius">The temporary in degrees celsius.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.SetRampSetting(Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.RampScaleSetting,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>Sets ramp setting. </summary>
            
             <param name="settings">Options for controlling the operation.</param>
             <param name="rate">    The rate.</param>
            
             <returns>A string with the query for the Temperature rate. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.ReadProbeTemperature">
            -------------------------------------------------------------------------------------------------
             <summary>Gets temperature remote. </summary>
            
             <returns>The temperature of the hotplate. In case of Offline Mode the value is 23. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.EnableHeating(System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>Enables the heating. </summary>
            
             <param name="onOff">True to enable, false to disable the heating.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.QueryHeatingMode">
            -------------------------------------------------------------------------------------------------
             <summary>Queries heating mode. </summary>
            
             <returns>The heating mode. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.WaitForOPC">
            <summary>Wait for opc. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.SendScpiCommand(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sends a scpi command. </summary>
            
             <param name="command">  The command. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.SendScpiQuery(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sends a scpi query. </summary>
            
             <param name="command">  The command. </param>
            
             <returns>   A string. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A">
            <summary>A 5080 a. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.IdnModelNumber">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the idn model number./ </summary>
            
             <value> The idn model number. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.LastCommandSent">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the last command sent. </summary>
            
             <value> The last command sent. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.LatestError">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the latest error. </summary>
            
             <value> The latest error. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.ErrorStack">
            <summary>   Stack of errors. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DebugMode">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets a value indicating whether the debug mode. </summary>
            
             <value>True if debug mode, false if not. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A._ENA">
            <summary>The B1505a. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.Spara">
            <summary>Values that represent spara traces. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.Spara.S11">
            <summary>S11 option. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.Spara.S12">
            <summary>S12 option. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.Spara.S21">
            <summary>S21 option. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.Spara.S22">
            <summary>S22 option. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.S2PFormat">
            <summary>   Values that represent s2p formats. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.S2PFormat.MA">
            <summary>   Linear Magnitude / degrees </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.S2PFormat.DB">
            <summary>   Log Magnitude / degrees </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.S2PFormat.RI">
            <summary>   Real / Imaginary </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.S2PFormat.AUTO">
            <summary>   data is output in currently selected trace format. If other than LogMag, LinMag, or Real/Imag, then output is in Real/Imag. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplayFormat">
            <summary>   Values that represent display formats. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplayFormat.MLINear">
            <summary>Linear magnitude. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplayFormat.MLOGarithmic">
            <summary>Logarithmic magnitude</summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplayFormat.PHASe">
            <summary>Phase. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplayFormat.UPHase">
            <summary>Unwrapped phase. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplayFormat.IMAGinary">
            <summary>Imaginary part (Im). </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplayFormat.REAL">
            <summary>Real part (Re)</summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplayFormat.POLar">
            <summary>(Re, Im) </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplayFormat.SMITh">
            <summary>Smith. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplayFormat.SADMittance">
            <summary>Smith Admittance </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplayFormat.SWR">
            <summary>Standing Wave Ratio </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplayFormat.GDELay">
            <summary>Group Delay </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.Open(System.String,System.Int32,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>   Opens. </summary>
            
             <param name="visaAddress">  The visa address. </param>
             <param name="timeoutSec">   The timeout security. </param>
             <param name="debugMode">    (Optional) True to enable debug mode, false to disable it. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.Close">
            <summary>Closes this object. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.ResetErrorStack">
            <summary>   Resets the error stack. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.IsInstrumentAllowed(System.String[],System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>    Query if the model number from the IDN reply matches any of the given model numbers. The
             comparison is case sensitive. Optionally, wildcards can be used, e.g "344*A" for all DMMs or
             "3446?A" for a few very particular models. In Demo mode, assume that the instrument is correct </summary>
            
             <remarks>   Gumoreau, 11/21/2017. </remarks>
            
             <param name="modelNumbers">     The model numbers. </param>
             <param name="allowWildcards">   (Optional) True to allow, false to deny wildcards. </param>
            
             <returns>   True if instrument allowed, false if not. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.CustomCommand(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Custom command. </summary>
            
             <param name="command">The command.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.CustomQuery(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Custom query. </summary>
            
             <param name="command">The command.</param>
            
             <returns>A string. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.WaitForOPC">
            <summary>Wait for opc. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SendScpiCommand(System.String,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sends a scpi command. </summary>
            
             <param name="command">          The command. </param>
             <param name="iSErrorLogged">    (Optional) True if s error logged. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SendScpiQuery(System.String,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sends a scpi query. </summary>
            
             <param name="command">          The command. </param>
             <param name="iSErrorLogged">    (Optional) True if s error logged. </param>
            
             <returns>   A string. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.ErrorCheck(System.String,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>   Error check. </summary>
            
             <param name="query">            The query. </param>
             <param name="iSErrorLogged">    (Optional) True if s error logged. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.ScpiBinaryQuery(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>   Scpi binary query. </summary>
            
             <param name="command">  The command. </param>
            
             <returns>   A byte[]. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.FetchDataFromENA(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>   Fetches data from ena. </summary>
            
             <param name="filePath"> Full pathname of the file. </param>
            
             <returns>   An array of byte. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.PowerLevel(System.Int32,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>Power level./ </summary>
            
             <param name="channel">The channel.</param>
             <param name="power">  The power.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.QueryStartFreq">
            -------------------------------------------------------------------------------------------------
             <summary>   Queries start frequency. </summary>
            
             <returns>   The start frequency. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.QueryStopFreq">
            -------------------------------------------------------------------------------------------------
             <summary>   Queries stop frequency. </summary>
            
             <returns>   The stop frequency. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.GetSParaTraceDbHz(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>Gets s para trace. </summary>
            
             <param name="pointNumber">The point number.</param>
            
             <returns>The s para trace. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.RST">
            <summary>Resets this object. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.ConvertBoolToOnOff(System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>Convert bool to on off. </summary>
            
             <param name="OnOff">True to enable, false to disable.</param>
            
             <returns>The string converted ON or OFF. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.LaunchCalWizard">
            <summary>Open the CAL Wizard. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SelectDisplayFormat(Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplayFormat)">
            -------------------------------------------------------------------------------------------------
             <summary>   Select display format. </summary>
            
             <param name="format">   Describes the format to use. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SetupRetreiveDataHelper(System.Int32,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Helper method that setup retreive data. </summary>
            
             <param name="channel">          The channel. </param>
             <param name="sweepPoint">       The sweep point. </param>
             <param name="averageNumber">    The average number. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SetSweepPoint(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>Sets sweep point. </summary>
            
             <param name="sweepPoint">The sweep point.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.EnableAndSetupAverage(System.Int32,System.Int32,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>   Enables the and setup average. </summary>
            
             <param name="count">    Number of. </param>
             <param name="channel">  The channel. </param>
             <param name="enable">   (Optional) True to enable, false to disable. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SaveS2PFileToFolder(System.String,System.String,Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.S2PFormat)">
            -------------------------------------------------------------------------------------------------
             <summary>   Saves the s 2 p file to folder. </summary>
            
             <param name="name">         The name. </param>
             <param name="folderPath">   Full pathname of the folder file. </param>
             <param name="format">       Describes the format to use. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SNPFormat(Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.S2PFormat)">
            -------------------------------------------------------------------------------------------------
             <summary>   Snp format. </summary>
            
             <param name="format">   Describes the format to use. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SetDataFormatToReal">
            <summary>Sets data format to real. </summary>ex
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.FetchData(System.Int32,System.Int32)">
            <summary>Fetch data. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SetCenterFreqMHz(System.Int32,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>Sets center frequency m Hz. </summary>
            
             <param name="channel">The channel.</param>
             <param name="freq">   The frequency.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SetStartFreqMHz(System.Int32,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets start frequency KHz. </summary>
            
             <param name="channel">  The channel. </param>
             <param name="freq">     The frequency. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SetStopFreqMHz(System.Int32,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets stop frequency m Hz. </summary>
            
             <param name="channel">  The channel. </param>
             <param name="freq">     The frequency. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SetSpanMHz(System.Int32,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>Sets span m Hz. </summary>
            
             <param name="channel">The channel.</param>
             <param name="span">   The span.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SetBandwidthKhz(System.Int32,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>Sets bandwidth kHz. </summary>
            
             <param name="channel">The channel.</param>
             <param name="BWID">   The bwid.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.CreateSparameterTrace(System.Int32,Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplayFormat,System.Boolean,System.Boolean)">
            <summary>
            Create all the Sparameter Trace
            </summary>
            <param name="channelNumber"></param>
            <param name="overideS11"></param>
            <param name="iSErrorLogged"></param>
            <param name="format"></param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.AutoScallAll">
            <summary>Automatic scall. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SelectSparaTrace(Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.Spara)">
            -------------------------------------------------------------------------------------------------
             <summary>Select spara trace. </summary>
            
             <param name="trace">The trace.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.FetchSNPData(System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Fetches snp data. </summary>
            
             <param name="channel">      The channel. </param>
             <param name="portNumber">   The port number. </param>
            
             <returns>   The snp data. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.GetAndExctractSNP(System.Int32,Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.Spara,System.Int32,Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.S2PFormat)">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets and excract the SNP . </summary>
            
             <param name="channel">      The channel. </param>
             <param name="spara">        The spara. </param>
             <param name="numberPoint">  Number of points. </param>
            
             <returns>   The and exctract snp. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.GetYparaCapacitanceTrace(System.Int32,System.Int32,Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.S2PFormat)">
            <summary>
            Get the Ypara Capacitance Trace
            </summary>
            <param name="channel"></param>
            <param name="numberPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SetSweepType(Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SweepType)">
            <summary>
            Change the SweepType
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.MarkerState(System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>Marker state. </summary>
            
             <param name="OnOFF">True to disable, false to enable the on.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.Rlevel(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>Rlevels. </summary>
            
             <param name="level">The level.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplaySparaHelper(System.Int32,Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.DisplayFormat,System.Boolean,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>   Helper method that display spara. </summary>
            
             <param name="channel">              The channel. </param>
             <param name="iSMarkerStateEnable">  (Optional) True if s marker state enable. </param>
             <param name="iSErrorLogged">        (Optional) True if s error logged. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080A.SetupChannelHelper(System.Int32,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>   Helper method that setup channel. </summary>
            
             <param name="channel">      The channel. </param>
             <param name="startFreq">    The start frequency. </param>
             <param name="stopFreq">     The stop frequency. </param>
             <param name="bwid">         The bwid. </param>
             <param name="level">        The level. </param>
             <param name="reset">        (Optional) True to reset. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080AError">
            <summary>   A 5080 an error. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080AError.#ctor(System.String,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>   Constructor. </summary>
            
             <param name="errorMessage">     A message describing the error. </param>
             <param name="lastCommandSent">  The last command sent. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080AError.ErrorMessage">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets a message describing the error. </summary>
            
             <value> A message describing the error. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.E5080AError.LastCommandSent">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the last command sent. </summary>
            
             <value> The last command sent. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SNP">
            <summary>   A snp./ </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SNP.Frequency">
            <summary>The frequency. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SNP.Real">
            <summary>The real. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SNP.Imaginary">
            <summary>The imaginary. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SNPReader">
            <summary>   A snp reader. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SNPReader.SNPReaderHelper(System.String,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Helper method that snp reader. </summary>
            
             <param name="input">        The input string given by the instrument. </param>
             <param name="pointNumber">  The point number. </param>
            
             <returns>   A SNPobject with three array : Frequency, Imaginary and real part . </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaTrace">
            <summary>A spara trace. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaTrace.S11">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the 11. </summary>
            
             <value>The s 11. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaTrace.S21">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the 21./ </summary>
            
             <value>The s 21. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaTrace.S12">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the 12. </summary>
            
             <value>The s 12. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaTrace.S22">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the 22. </summary>
            
             <value>The s 22. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaTrace.Freq">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the frequency. </summary>
            
             <value>The frequency. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaTrace.PointNumber">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the point number. </summary>
            
             <value>The point number. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaYparaCapConverter">
            <summary>A Sparameter to Yparameter converter. You can also find  Cgs,Cgd,Cds,Ciss,Coss,Crss after using the SparaToYparaHelper(). </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaYparaCapConverter.S11">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the 11. </summary>
            
             <value>The s 11. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaYparaCapConverter.S22">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the 22. </summary>
            
             <value>The s 22. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaYparaCapConverter.S21">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the 21. </summary>
            
             <value>The s 21. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaYparaCapConverter.S12">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the 12. </summary>
            
             <value>The s 12. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaYparaCapConverter.Delta">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the delta. </summary>
            
             <value>The delta. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaYparaCapConverter.outputResult">
            <summary>   The output result. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaYparaCapConverter.RealImaginaryToScalarLinearGain(System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>Real imaginary to scalar linear gain. </summary>
            
             <param name="real">     The real.</param>
             <param name="imaginary">The imaginary.</param>
            
             <returns>A double. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaYparaCapConverter.OnePointSparaToYparaHelper(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>Helper method that convert Spara to Ypara and Cgs,Cgd,Cds,Ciss,Coss,Crss. </summary>
            
             <param name="frequency">   The frequency.</param>
             <param name="realS11">     The first real s11.</param>
             <param name="imaginaryS11">The first imaginary s11.</param>
             <param name="realS21">     The first real s21.</param>
             <param name="imaginaryS21">The first imaginary s21.</param>
             <param name="realS12">     The second real s12.</param>
             <param name="imaginaryS12">The second imaginary s12.</param>
             <param name="realS22">     The second real s22.</param>
             <param name="imaginaryS22">The second imaginary s22.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaYparaCapConverter.SparaToYparaTraceHelper(Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SNP,Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SNP,Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SNP,Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SNP)">
            <summary>
            Convert Spara trace to Ypara trace
            </summary>
            <param name="S11"></param>
            <param name="S12"></param>
            <param name="S21"></param>
            <param name="S22"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaYparaCapConverter.SparaToYpara">
            <summary>Spara to ypara. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.SparaYparaCapConverter.YparaSparaToCapa">
            <summary>Ypara spara to capa. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitancePoint">
            <summary>   A ypara capacitance. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitancePoint.Frequency">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the frequency. </summary>
            
             <value> The frequency. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitancePoint.Y11">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the 11. </summary>
            
             <value>The y coordinate 11. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitancePoint.Y22">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the 22. </summary>
            
             <value>The y coordinate 22. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitancePoint.Y21">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the 21. </summary>
            
             <value>The y coordinate 21. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitancePoint.Y12">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the 12. </summary>
            
             <value>The y coordinate 12. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitancePoint.Cgs">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the cgs. </summary>
            
             <value>The cgs. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitancePoint.Cgd">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the cgd. </summary>
            
             <value>The cgd. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitancePoint.Cds">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the cds. </summary>
            
             <value>The cds. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitancePoint.Ciss">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the ciss. </summary>
            
             <value>The ciss. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitancePoint.Coss">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the coss. </summary>
            
             <value>The coss. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitancePoint.Crss">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the crss. </summary>
            
             <value>The crss. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitanceTrace.Freq">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the frequency. </summary>
            
             <value>The frequency. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitanceTrace.Cgs">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the cgs. </summary>
            
             <value>The cgs. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitanceTrace.Cgd">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the cgd. </summary>
            
             <value>The cgd. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitanceTrace.Cds">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the cds. </summary>
            
             <value>The cds. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitanceTrace.Ciss">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the ciss. </summary>
            
             <value>The ciss. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitanceTrace.Coss">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the coss. </summary>
            
             <value>The coss. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.NetworkAnalyzer.YparaCapacitanceTrace.Crss">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the crss. </summary>
            
             <value>The crss. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A">
            <summary>A1505A Driver used to close and open workspace and setup test. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A._debugMode">
            <summary>True to enable debug mode, false to disable it. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.DebugMode">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets a value indicating whether the debug mode. </summary>
            
             <value>True if debug mode, false if not. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.CurrentTestName">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the current test name. </summary>
            
             <value> The name of the current test. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.latestPropertyNameSend">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the latest property send. </summary>
            
             <value> The latest property send. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.latestPropertyValueSend">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the latest property value send. </summary>
            
             <value> The latest property value send. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.latestError">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the latest error. </summary>
            
             <value> The latest error. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.ErrorStack">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets a stack of errors. </summary>
            
             <value> A stack of errors. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.IdnModelNumber">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the idn model number./ </summary>
            
             <value> The idn model number. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A._B1505A">
            <summary>The B1505a. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.SMUConfiguration">
            <summary>Select the IV or CV mode</summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.SMUConfiguration.IV">
            <summary>Select the IV mode configuration for SMU</summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.SMUConfiguration.CV">
            <summary>Select the CV mode configuration for SMU</summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.SMUConfiguration.GateDiode">
            <summary>   An enum constant representing the gate diode option. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.Thermocouple">
            <summary>Select the Thermal sensor</summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.Thermocouple.CH1">
            <summary>Select the sensor on the channel 1</summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.Thermocouple.CH2">
            <summary>Select the sensor on the channel 1</summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.Open(System.String,System.Int32,System.Boolean,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>   Opens. </summary>
            
             <param name="visaAddress">      The visa address. </param>
             <param name="timeoutSec">       The timeout security. </param>
             <param name="debugMode">        (Optional) True to enable debug mode, false to disable it. </param>
             <param name="resetStackError">  (Optional) True to reset stack error. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.Close">
            <summary>Closes this object. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.CustomCommand(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Custom command. </summary>
            
             <param name="command">The command.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.CustomQuery(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Custom query. </summary>
            
             <param name="command">The command.</param>
            
             <returns>A string. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.ResetErrorStack">
            <summary>   Resets the error stack. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.ResetLastParameterSentError(System.Boolean,System.Boolean,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets the reset last parameter sent. used in case you are looking ofr an error not link to any parameter (ex: run) </summary>
            
             <value> . </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.IsInstrumentAllowed(System.String[],System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>    Query if the model number from the IDN reply matches any of the given model numbers. The
             comparison is case sensitive. Optionally, wildcards can be used, e.g "344*A" for all DMMs or
             "3446?A" for a few very particular models. In Demo mode, assume that the instrument is correct </summary>
            
             <remarks>   Gumoreau, 11/21/2017. </remarks>
            
             <param name="modelNumbers">     The model numbers. </param>
             <param name="allowWildcards">   (Optional) True to allow, false to deny wildcards. </param>
            
             <returns>   True if instrument allowed, false if not. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.RetreiveTemperatureSensor(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Retreive temperature for a sensor. </summary>
            
             <param name="channel">  The channel. </param>
            
             <returns>   A double with the Temperature. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.DiagUnit">
            -------------------------------------------------------------------------------------------------
             <summary>Query the SMU present in the different slots. </summary>
            
             <returns>A List of string with the slots. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.ClearDataBuffer">
            <summary>Clears the data buffer. This command will generate a VISA timeout on purpose. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.SetTimeOutmS(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>Sets timeout in ms./ </summary>
            
             <param name="time">The time.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.QueryAvailableSMUChoice">
            -------------------------------------------------------------------------------------------------
             <summary>Queries available SMU choice for the User. </summary>
            
             <returns>The available smu choice. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.EraseOriginalData">
            <summary>   Erase original data. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.ConvertTemperatureFromSensorOne(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary> Convert temperature from sensor one. needs to be used with the "temperature Sensor 1" application. </summary>
            
             <param name="data"> The data. </param>
            
             <returns>   The temperature converted from sensor one. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.SelectWorkSpace(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Select work space. </summary>
            
             <param name="workspaceName">Name of the workspace.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.WaitTemperature(System.Double,Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.Thermocouple,System.Double,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>Wait temperature./ </summary>
            
             <param name="temperature">The temperature.</param>
             <param name="channel">    The channel.</param>
             <param name="radius">     The radius. °C </param>
             <param name="timeout">    The timeout (sec).</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.CloseWorkspace">
            <summary>Closes the workspace. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.QueryWorkSpaceName">
            -------------------------------------------------------------------------------------------------
             <summary>   Queries work space name. </summary>
            
             <returns>   The work space name. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.SelectApplication(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Select application. </summary>
            
             <param name="applicationName">Name of the application.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.SetupParameter(System.String,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Sets up the parameter. </summary>
            
             <param name="parameterName">Name of the parameter.</param>
             <param name="value">        The value.</param>
            ----------------------------------------- --------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.RunTest(System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>   Executes the test operation. </summary>
            
             <param name="opc">  True to opc. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.OpenGroupAndSelectTest(System.String,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Tests open group and select. </summary>
            
             <param name="groupeName">Name of the groupe.</param>
             <param name="testName">  Name of the test.</param>
            ----------------------------------------------------0---------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.SelectIVtoCVHelper(Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.SMUConfiguration)">
            -------------------------------------------------------------------------------------------------
             <summary>Helper method that select IV or CV mode and configure the SMU. </summary>
            
             <param name="mode">The mode.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.FetchResults">
            -------------------------------------------------------------------------------------------------
             <summary>Fetches the results. </summary>
            
             <returns>The results. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.WaitForOPC">
            <summary>Wait for opc. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.SendScpiCommand(System.String)">
             <summary>   Sends a scpi command. </summary>
            
             <param name="command">  The command. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.SendScpiQuery(System.String)">
             <summary>   Sends a scpi query. </summary>
            
             <param name="command">  The command. </param>
            
             <returns>   The answer of the query. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B150xError">
            <summary>   A 150x error. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B150xError.Testname">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the testname. </summary>
            
             <value> The testname. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B150xError.PropertiyName">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the name of the propertiy. </summary>
            
             <value> The name of the propertiy. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B150xError.ErrorValue">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the value./ </summary>
            
             <value> The value. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B150xError.ErrorMessage">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets a message describing the error. </summary>
            
             <value> A message describing the error. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B150xError.#ctor(System.String,System.String,System.String,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>   Constructor./ </summary>
            
             <param name="testName">     The testname. </param>
             <param name="propertyName"> Name of the property. </param>
             <param name="errorMessage"> A message describing the error. </param>
             <param name="errorValue">   The value. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.SMU.B2902A">
            <summary>This is a B2902A driver. Use the two helper to configure the source and make one measurement. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.SMU.B2902A._B2902A">
            <summary>The B1505a. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.SMU.B2902A.SourceMode">
            <summary>Values that represent source modes. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.SMU.B2902A.SourceMode.Volts">
            <summary>Source is set to volt. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.SMU.B2902A.SourceMode.Amps">
            <summary>Source is set to Amps. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.SMU.B2902A.MeasurementMode">
            <summary>Values that represent measurement modes./ </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.SMU.B2902A.MeasurementMode.Volts">
            <summary>Measurement is set to volt. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.SMU.B2902A.MeasurementMode.Amps">
            <summary>Measurement is set to Amps. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.SMU.B2902A.MeasurementMode.Resistance">
            <summary>Measurement is set to Resistance. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.SMU.B2902A.ChannelNumber">
            <summary>   Values that represent channel numbers. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.SMU.B2902A.ChannelNumber.Channel1">
            <summary>   True to enable off line mode, false to disable it. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.SMU.B2902A.ChannelNumber.Channel2">
            <summary>   True to enable off line mode, false to disable it. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.SMU.B2902A.OutputMode">
            <summary>   Values that represent output modes. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.SMU.B2902A.LastMeasurementMode">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the last measurement mode. </summary>
            
             <value> The last measurement mode. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.SMU.B2902A.LastSourceMode">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the last source mode. </summary>
            
             <value> The last source mode. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.SMU.B2902A.LastChannelNumber">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the last channel number. </summary>
            
             <value> The last channel number. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.SMU.B2902A.LastCommandSent">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the last command sent. </summary>
            
             <value> The last command sent. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.SMU.B2902A._debugMode">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the off line mode./ </summary>
            
             <value>The off line mode. </value>
            -------------------------------------------------------------------------------------------------
            <summary>True to enable debug mode, false to disable it. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.SMU.B2902A.ErrorStack">
            <summary>   Stack of errors. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.SMU.B2902A.DebugMode">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets a value indicating whether the debug mode. </summary>
            
             <value>True if debug mode, false if not. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.SMU.B2902A.LatestError">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the latest error. </summary>
            
             <value> The latest error. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.Open(System.String,System.Int32,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>   Opens. </summary>
            
             <param name="visaAddress">  The visa address. </param>
             <param name="timeoutSec">   The timeout security. </param>
             <param name="debugMode">    (Optional) True to enable debug mode, false to disable it. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.ResetErrorStack">
            <summary>   Resets the error stack. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.IsInstrumentAllowed(System.String[],System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>    Query if the model number from the IDN reply matches any of the given model numbers. The
             comparison is case sensitive. Optionally, wildcards can be used, e.g "344*A" for all DMMs or
             "3446?A" for a few very particular models. In Demo mode, assume that the instrument is correct </summary>
            
             <remarks>   Gumoreau, 11/21/2017. </remarks>
            
             <param name="modelNumbers">     The model numbers. </param>
             <param name="allowWildcards">   (Optional) True to allow, false to deny wildcards. </param>
            
             <returns>   True if instrument allowed, false if not. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.Close">
            <summary>Closes this object. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.CustomCommand(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Custom command. </summary>
            
             <param name="command">The command.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.CustomQuery(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Custom query. </summary>
            
             <param name="command">The command.</param>
            
             <returns>A string. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.RST">
            <summary>Resets this object. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.WaitForOPC">
            <summary>Wait for opc. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.SetSourceMode(Keysight.Aes.Asf.Instruments.SMU.B2902A.SourceMode,Keysight.Aes.Asf.Instruments.SMU.B2902A.ChannelNumber)">
            -------------------------------------------------------------------------------------------------
             <summary>Sets source mode./ </summary>
            
             <param name="mode">   The mode.</param>
             <param name="channel">The channel.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.OutPutMode(Keysight.Aes.Asf.Instruments.SMU.B2902A.OutputMode,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Out put mode. </summary>
            
             <param name="mode">     The mode. </param>
             <param name="channel">  The channel. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.EnableOutput(System.Boolean,Keysight.Aes.Asf.Instruments.SMU.B2902A.ChannelNumber)">
            -------------------------------------------------------------------------------------------------
             <summary>Enables the output./ </summary>
            
             <param name="onOff">  True to enable, false to disable.</param>
             <param name="channel">The channel.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.SetOutputValue(Keysight.Aes.Asf.Instruments.SMU.B2902A.SourceMode,Keysight.Aes.Asf.Instruments.SMU.B2902A.ChannelNumber,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>Sets output value. </summary>
            
             <param name="mode">   The mode.</param>
             <param name="channel">The channel.</param>
             <param name="value">  The value.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.SetComplianceLimit(Keysight.Aes.Asf.Instruments.SMU.B2902A.SourceMode,Keysight.Aes.Asf.Instruments.SMU.B2902A.ChannelNumber,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>Sets compliance limit. </summary>
            
             <param name="mode">           The mode.</param>
             <param name="channel">        The channel.</param>
             <param name="complianceValue">The compliance value.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.SetNPLC(Keysight.Aes.Asf.Instruments.SMU.B2902A.MeasurementMode,Keysight.Aes.Asf.Instruments.SMU.B2902A.ChannelNumber,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>Sets a nplc. </summary>
            
             <param name="mode">           The mode.</param>
             <param name="channel">        The channel.</param>
             <param name="complianceValue">The compliance value.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.SetMeasurementMode(Keysight.Aes.Asf.Instruments.SMU.B2902A.MeasurementMode,Keysight.Aes.Asf.Instruments.SMU.B2902A.ChannelNumber)">
            -------------------------------------------------------------------------------------------------
             <summary>Sets measurement mode. </summary>
            
             <param name="mode">   The mode.</param>
             <param name="channel">The channel.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.OnePointMeasurement(Keysight.Aes.Asf.Instruments.SMU.B2902A.MeasurementMode,Keysight.Aes.Asf.Instruments.SMU.B2902A.ChannelNumber)">
            -------------------------------------------------------------------------------------------------
             <summary>One point measurement. </summary>
            
             <param name="mode">         The mode.</param>
             <param name="channel">The channel number.</param>
            
             <returns>A double. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.SetMeasurementRange(Keysight.Aes.Asf.Instruments.SMU.B2902A.MeasurementMode,Keysight.Aes.Asf.Instruments.SMU.B2902A.ChannelNumber,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>Sets measurement range./ </summary>
            
             <param name="mode">   The mode.</param>
             <param name="channel">The channel.</param>
             <param name="OnOFF">  True to disable, false to enable the on.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.ConvertBoolToOnOff(System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>Convert bool to on off. </summary>
            
             <param name="OnOff">True to enable, false to disable.</param>
            
             <returns>The string converted ON or OFF. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.SourceConfigHelper(Keysight.Aes.Asf.Instruments.SMU.B2902A.SourceMode,Keysight.Aes.Asf.Instruments.SMU.B2902A.ChannelNumber,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>Helper method that configure the source. </summary>
            
             <param name="mode">   The mode.</param>
             <param name="channel">The channel.</param>
             <param name="value">  The value.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B2902A.OneMeasurementConfigHelper(Keysight.Aes.Asf.Instruments.SMU.B2902A.MeasurementMode,Keysight.Aes.Asf.Instruments.SMU.B2902A.ChannelNumber,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>Helper method that configure one measurement. </summary>
            
             <param name="mode">           The mode.</param>
             <param name="channel">        The channel.</param>
             <param name="NPLC">           The nplc.</param>
             <param name="complianceLimit">The compliance limit.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.SMU.B290xxError">
            <summary>   A B290xx error class. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SMU.B290xxError.#ctor(Keysight.Aes.Asf.Instruments.SMU.B2902A.MeasurementMode,Keysight.Aes.Asf.Instruments.SMU.B2902A.SourceMode,Keysight.Aes.Asf.Instruments.SMU.B2902A.ChannelNumber,System.String,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>   Constructor. </summary>
            
             <param name="measurementMode">  The measurement mode. </param>
             <param name="sourceMode">       The source mode. </param>
             <param name="channelNumber">    The channel number. </param>
             <param name="errorMessage">     A message describing the error. </param>
             <param name="lastCommandSent">  The last command sent. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.SMU.B290xxError.MeasurementMode">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the measurement mode. </summary>
            
             <value> The measurement mode. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.SMU.B290xxError.SourceMode">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets source mode. </summary>
            
             <value> The source mode. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.SMU.B290xxError.ChannelNumber">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the channel number. </summary>
            
             <value> The channel number. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.SMU.B290xxError.ErrorMessage">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets a message describing the error. </summary>
            
             <value> A message describing the error. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.SMU.B290xxError.LastCommandSent">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the last command sent. </summary>
            
             <value> The last command sent. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.VisaExceptionCodes">
            <summary>   Values that represent visa exception codes. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.VisaExceptionCodes.ConnectionLost">
            <summary>   An enum constant representing the connection lost option. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.VisaExceptionCodes.ResponseTimeout">
            <summary>   An enum constant representing the response timeout option. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.VisaException">
            <summary>   (Serializable) exception for signalling errors when using the VisaInstrument class. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaException.Code">
             <summary>   Gets or sets the error code. </summary>
            
             <value> The code. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaException.#ctor(Keysight.Aes.Asf.Instruments.VisaExceptionCodes)">
             <summary>   Constructor. </summary>
            
             <param name="code"> The code. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaException.#ctor(Keysight.Aes.Asf.Instruments.VisaExceptionCodes,System.String)">
             <summary>   Constructor. </summary>
            
             <param name="code">     The code. </param>
             <param name="message">  The message. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaException.#ctor(Keysight.Aes.Asf.Instruments.VisaExceptionCodes,System.String,System.Exception)">
             <summary>   Constructor. </summary>
            
             <param name="code">     The code. </param>
             <param name="message">  The message. </param>
             <param name="inner">    The inner. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaException.#ctor(Keysight.Aes.Asf.Instruments.VisaExceptionCodes,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>   Specialised constructor for use only by derived class. </summary>
            
             <param name="code">     The code. </param>
             <param name="info">     The information. </param>
             <param name="context">  The context. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.InstrumentSearch">
             <summary> This class is design to look for every instrument available for connection. use DiscoverInstrument() to broadcast on the port 111 and get all the instrument answers.
                       Please find a description of the main functions :
            
                       _DiscoverInstrument() is used to refresh the broadcast, and get a dictionary of all the "*IDN?"/Ip address of every instrument available.
            
                       _RetreiveMatchingIPVisaAddress(string instrumentName) is used to retrieve a list of IP Visa address that are matching you request.
            
                       _RetrieveMatchingHostNameVisaAddress(string instrumentName) is used to retrieve a list of HostName Visa address that are matching you request.
            
                       _RetrieveMatchingHostNameLocalVisaAddress(string instrumentName) is used to retrieve a list of local HostName Visa address that are matching you request.
            
             </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.InstrumentSearch.C_INSTRUMENT_TIMEOUT_MS">
            <summary>the query instrument timeout in ms. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.InstrumentSearch.C_BROADCAST_TIMEOUT_MS">
            <summary>the broadcast timeout in ms. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.InstrumentSearch.InstrumentVisaAddress">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the instrument visa address. </summary>
            
             <value>The instrument visa address. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.InstrumentSearch.DiscoverInstrument(System.Boolean,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary> Discover instrument while broadcasting on the '255.255.255.255' address. Is used as a
             refresh. can also broadcast on every adapter address present on the computer by setting
             BroadcastAdapterLocalAddress to true. </summary>
            
             <param name="broadcastAdapterLocalAddress"> (Optional) Enable the broadcast on all the
                                                         adapter local address (Lan and Wifi)</param>
             <param name="lookForVisa">                 (Optional) True to look for visa.</param>
            
             <returns>A Dictionary with the instrument IDN and IP address found ; </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.InstrumentSearch.GetBroadcastAddress(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>create the broadcast address. </summary>
            
             <param name="address">The address.</param>
            
             <returns>The broadcast address. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.InstrumentSearch.QueryANetworkAddress(System.Net.IPAddress)">
            -------------------------------------------------------------------------------------------------
             <summary> Broadcast a special packet through UDP on port 111, any responding IP address will be checked for VISA capability. </summary>
            
             <param name="ip">The IP address of the local machine.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.InstrumentSearch.RetrieveMatchingHostNameVisaAddress(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Create a list of Hostname Visa Address that match the instrument request. The Hostname are built according to the default instrument Hostname.
                      EX : TCPIP0::K-PA2201A-00158::inst0::INSTR
                      'K' stand for Keysight, 'PA2201A' is the instrument name , '00158' is the last 5 digit of the Serial Number.
                      if you are in a local network without DHCP, please use RetrieveMatchingHostNameLocal() instead.
            
                         </summary>
            
             <param name="instrumentType">type of the instrument.</param>
            
             <returns>A List of Hostname Visa address that match the instrument name specified </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.InstrumentSearch.RetrieveMatchingHostNameLocalVisaAddress(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Create a list of Hostname Visa Address that match the instrument request. The Hostname are built according to the default instrument Hostname.
                      EX : TCPIP0::K-PA2201A-00158::inst0::INSTR
                      'K' stand for Keysight, 'PA2201A' is the instrument name , '00158' is the last 5 digit of the Serial Number.
                      if you are in a network with DHCP, please use RetrieveMatchingHostName() instead.
            
                         </summary>
            
             <param name="instrumentName">type of the instrument you are looking for ex:"PA2201A" .</param>
            
             <returns>A List of Hostname local Visa address that match the instrument name specified </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.InstrumentSearch.RetreiveMatchingIPVisaAddress(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Create a list of IP Visa address that match the instrument request </summary>
            
             <param name="instrumentName">type of the instrument you are looking for. ex:"PA2201A"</param>
            
             <returns>A List of IP Visa address that match the instrument name specified; </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.InstrumentSearch.SearchMatchingInstrument(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Searches in the DiscoveredList some instrument that are matching the instrumentName. </summary>
            
             <param name="instrumentName">    type of the instrument you are looking for ex:"PA2201A". </param>
            
            
             <returns>The found matching instrument. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.InstrumentSearch.BuildHostName(System.Collections.Generic.List{System.String},System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary> Convert the list of all matched instrument visa address to a list of Hostname visa
             address. </summary>
            
             <param name="matchingInstrument">The instrument visa address.</param>
             <param name="local">             True to local.</param>
            
             <returns>A list of maching instrument hostname. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.InstrumentSearch.HostNameAddressBuilder(System.String,System.String,System.String,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>Build an hostname Visa Address. </summary>
            
             <param name="instrument">  The instrument.</param>
             <param name="serialNumber">The serial number.</param>
             <param name="keysight">    The keysight.</param>
             <param name="local">       (Optional) True to local.</param>
            
             <returns>A string. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.InstrumentSearch.AddToValidAddress(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Adds to the valid address if there is a response to the Query *IDN. </summary>
            
             <param name="visaAddress">The visa address of the instrument.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.Dmm.Dmm344xx">
            <summary>   A VisaInstrument wrapper for the DMM 344xx series. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.Dmm.Dmm344xx.Instrument">
             <summary>   Gets or sets the instrument. </summary>
            
             <value> The instrument. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.Dmm.Dmm344xx.AvailableMeasurements">
             <summary>   Gets the type of measurements that the instrument provides. </summary>
            
             <value> The available measurements. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.Dmm.Dmm344xx.SensorType">
             <summary>   Gets or sets the connected sensor type. </summary>
            
             <value> The type of the sensor. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.Dmm.Dmm344xx.SensorWiring">
             <summary>   Gets or sets the sensor wiring. </summary>
            
             <value> The sensor wiring. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.Dmm.Dmm344xx.#ctor">
            <summary>   Default constructor. Before using the class, you need to call UseVisaInstrument  </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.Dmm.Dmm344xx.#ctor(Keysight.Aes.Asf.Instruments.VisaInstrument)">
             <summary>
             Constructor to use an existing VisaInstrument. To avoid exceptions and save performance, you
             can use the default constructor and call UseVisaInstrument() instead.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when the instrument can not be used for this
                                                     class type. </exception>
            
             <param name="instrument">   The instrument. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.Dmm.Dmm344xx.UseVisaInstrument(Keysight.Aes.Asf.Instruments.VisaInstrument,System.String)">
             <summary>
             Attempts to initialize the instrument wrapper from the given visa instrument.
             </summary>
            
             <param name="instrument">       The instrument. </param>
             <param name="mandatoryModel">   The mandatory model number if the covering class may accept
                                             multiple. </param>
            
             <returns>   true if it succeeds, false if the instrument is not valid. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.Dmm.Dmm344xx.SelectFunction(Keysight.Aes.Asf.Instruments.MeasurementTypes)">
             <summary>   Switches the instrument to the selected measurement type. </summary>
            
             <param name="type"> The type of measurement to perform. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.Dmm.Dmm344xx.Readout(Keysight.Aes.Asf.Instruments.MeasurementTypes)">
             <summary>   Performs a readout of the given type. </summary>
            
             <param name="type"> The type of measurement to perform. </param>
            
             <returns>   A double representing the measured value. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.Dmm.Dmm344xx.ReadTemperature">
             <summary>
             Reads the temperature. A typical implementation may just forward that to it's own
             Readout(MeasurementTypes.Temperature) method.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <returns>   The temperature in degrees Celsius. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.Dmm.Dmm3458A">
            <summary>   A VisaInstrument wrapper for a 3458A. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.Dmm.Dmm3458A.Instrument">
             <summary>   Gets or sets the instrument. </summary>
            
             <value> The instrument. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.Dmm.Dmm3458A.AvailableMeasurements">
             <summary>   Gets the type of measurements that the instrument provides. </summary>
            
             <value> The available measurements. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.Dmm.Dmm3458A.SensorType">
             <summary>   Gets or sets the connected sensor type. </summary>
            
             <value> The type of the sensor. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.Dmm.Dmm3458A.SensorWiring">
             <summary>   Gets or sets the sensor wiring. </summary>
            
             <value> The sensor wiring. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.Dmm.Dmm3458A.#ctor">
            <summary>   Default constructor. Before using the class, you need to call UseVisaInstrument  </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.Dmm.Dmm3458A.#ctor(Keysight.Aes.Asf.Instruments.VisaInstrument)">
             <summary>
             Constructor to use an existing VisaInstrument. To avoid exceptions and save performance, you
             can use the default constructor and call UseVisaInstrument() instead.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when the instrument can not be used for this
                                                     class type. </exception>
            
             <param name="instrument">   The instrument. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.Dmm.Dmm3458A.UseVisaInstrument(Keysight.Aes.Asf.Instruments.VisaInstrument,System.String)">
             <summary>
             Attempts to initialize the instrument wrapper from the given visa instrument.
             </summary>
            
             <param name="instrument">           The instrument. </param>
             <param name="mandatoryModelNumber"> An optional mandatory model number if the covering class 
                                                 accepts multiple. </param>
            
             <returns>   true if it succeeds, false if the instrument is not valid. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.Dmm.Dmm3458A.SelectNplc(System.Int32)">
             <summary>   Select the number of power line cycles per reading. </summary>
            
             <param name="nplc"> The number of cycles. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.Dmm.Dmm3458A.SelectDigits(System.Int32)">
             <summary>   Select the number of (plus half a) digits in the reading. </summary>
            
             <param name="ndig"> The number of digits (3-8). </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.Dmm.Dmm3458A.SelectFunction(Keysight.Aes.Asf.Instruments.MeasurementTypes)">
             <summary>   Switches the instrument to the selected measurement type. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="type"> The type of measurement to perform. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.Dmm.Dmm3458A.Readout(Keysight.Aes.Asf.Instruments.MeasurementTypes)">
             <summary>   Performs a readout of the given type. </summary>
            
             <param name="type"> The type of measurement to perform. </param>
            
             <returns>   A double representing the measured value. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.Dmm.Dmm3458A.ReadTemperature">
             <summary>
             Reads the temperature. A typical implementation may just forward that to it's own
             Readout(MeasurementTypes.Temperature) method.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <returns>   The temperature in degrees Celsius. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.InstrumentSearchHelper">
            <summary> This class is a Helper using the InstrumentSearch class. see InstrumentSearchHelp.Search() for more info///
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.InstrumentSearchHelper.Search(System.String,System.Boolean,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary> This method is design to look for every instrument available for connection.
             <para />It will first broadcast the network with the IP address 255.255.255.255, then query
             the IDN.
             <para />It will also try to connection with the default USB instrument "UsbInstrument1" and look in the configured Visa Address (with Connection Expert for example).
             <para />With this IDN, it will create the standard hostname Visa Address for this
             instrument
             <para />  EX : TCPIP0::K-PA2201A-00158::inst0::INSTR
             <para /> 'K' stand for Keysight, 'PA2201A' is the instrument name , '00158' is the last 5
             digit of the Serial Number.
             <para /> you will receive a string list of matching instrument hostname.
             <para /> You can set tryConnection to true to test every Address at the end before retrieving
             the result. it takes of course more time. </summary>
            
             <param name="instrumentType">Type of the insutrment.</param>
             <param name="refresh"> (Optional) True to refresh the connection.</param>
             <param name="tryConnection"> (Optional) True to try connection.</param>
            
             <returns>A list of matching instrument hostname. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.InstrumentSearchHelper.TryConnection(System.Collections.Generic.List{System.String})">
            -------------------------------------------------------------------------------------------------
             <summary>Try the connection and add the address to the list if there is something answering the IDN query command. </summary>
            
             <param name="matchingInstrument">The matching instrument List.</param>
            
             <returns>The verified list </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.InstrumentSearchHelper.connection(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Try one connection and query the IDN, return -1 if the connection is not available. used to try if we need to use the .local at the end of the hostname </summary>
            
             <param name="address">The address.</param>
            
             <returns>A string. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.InstrumentSearchHelper.ChangeToLocal(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Change the hostname to local. This solutions is faster than using the retreiveHostnameLocalVisaAddress() </summary>
            
             <param name="address">The address.</param>
            
             <returns>A string. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.ITemperatureProvider">
            <summary>
            Typically implemented by instruments that can read temperature directly or where the class
            implementation can convert e.g. from resistance to temperature.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.ITemperatureProvider.SensorType">
            <summary>   Sets the connected sensor type. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.ITemperatureProvider.SensorWiring">
            <summary>   Sets the sensor wiring. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.ITemperatureProvider.ReadTemperature">
             <summary>
             Reads the temperature. A typical implementation may just forward that to it's own
             Readout(MeasurementTypes.Temperature) method.
             </summary>
            
             <returns>   The temperature in degrees Celsius. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.IVisaFactory">
            <summary>
            Interface to attempt to create instrument instances based on a certain Visa connection. If
            the actual instrument is unknown, all IVisaFactory providers can be iterated to see which
            one(s) return true. This saves us from performance issues if we would instead put the visa
            instrument into the constructor and would have to throw an exception on an instrument
            missmatch.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.IVisaFactory.UseVisaInstrument(Keysight.Aes.Asf.Instruments.VisaInstrument,System.String)">
             <summary>   Attempts to initialize the instrument wrapper from the given visa instrument. </summary>
            
             <param name="instrument">           The instrument. </param>
             <param name="mandatoryModelNumber"> An optional mandatory model number if the covering class 
                                                 accepts multiple. </param>
            
             <returns>   true if it succeeds, false if the instrument is not valid. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.MeasurementTypes">
            <summary>   The measurements that an instrument can provide. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.PredefinedScpiCommands">
            <summary>   Provides predefined scpi commands for taking various measurements. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.PredefinedScpiCommands.MeasurementCommands">
            <summary>   The measurement commands used by most instruments for certain types of measurements. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.PredefinedScpiCommands.GetMeasurementQueryString(Keysight.Aes.Asf.Instruments.MeasurementTypes)">
             <summary>   Gets a SCPI measurement query string based on the MeasurementCommands dictionary. </summary>
            
             <param name="type"> The type of readout. </param>
            
             <returns>   The measurement query string, e.g. "MEAS:VOLT:DC?". </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.SmuModels">
            <summary>   Contains VisaInstrument extension methods to identify various SMU models and their properties. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SmuModels.IsTitan(Keysight.Aes.Asf.Instruments.VisaInstrument,System.Boolean)">
             <summary>   Query if 'instrument' is a Titan. </summary>
            
             <returns>   true if the instrument belongs to the Titan family, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SmuModels.IsOlympus(Keysight.Aes.Asf.Instruments.VisaInstrument)">
             <summary>   Query if the instrument is an Olympus mainframe with modules. </summary>
            
             <returns>   true if the instrument belongs to the Olympus family, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SmuModels.HasOcvReading(Keysight.Aes.Asf.Instruments.VisaInstrument,System.String)">
             <summary>
             Query if the instrument supports reading of the voltage on the outputs while the output is
             switched off.
             </summary>
            
             <param name="instrument">   The instrument to act on. </param>
             <param name="channelModel"> The channel model if the mainframe is equipped with modules or
                                         null otherwise. </param>
            
             <returns>   true if ocv reading, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SmuModels.HasVoltagePriority(Keysight.Aes.Asf.Instruments.VisaInstrument,System.String)">
             <summary>   Query if the instrument supports voltage priority. </summary>
            
             <param name="instrument">   The instrument to act on. </param>
             <param name="channelModel"> The channel model if the mainframe is equipped with modules or
                                         null otherwise. </param>
            
             <returns>   true if voltage priority is available, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SmuModels.HasCurrentPriority(Keysight.Aes.Asf.Instruments.VisaInstrument,System.String)">
             <summary>   Query if the instrument supports current priority. </summary>
            
             <param name="instrument">   The instrument to act on. </param>
             <param name="channelModel"> The channel model if the mainframe is equipped with modules or
                                         null otherwise. </param>
            
             <returns>   true if current priority is available, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.SmuModels.IsSmuModule(System.String)">
             <summary>   Query if 'channelModel' is a smu module. </summary>
            
             <param name="channelModel"> The channel model that the mainframe is equipped with, e.g. 'N6781A'</param>
            
             <returns>   true if smu module, false if not. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.VisaFactory">
            <summary>   A factory to create instrument wrappers from generic VisaInstruments. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaFactory.FromVisaInstrument``1(Keysight.Aes.Asf.Instruments.VisaInstrument,System.String)">
             <summary>
             Attempts to creates a particular instrument wrapper from a visa instrument.
             </summary>
            
             <typeparam name="T">    The wrapping instrument type (has to implement IVisaFactory). </typeparam>
             <param name="instrument">           The visa instrument to use. </param>
             <param name="mandatoryModelNumber"> The mandatory model number. </param>
            
             <returns>   A class instance of the wrapper or null if the visa instrument does not match the wrapper. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.VisaInstrument">
             <summary>
             This is a part of the ScpiInstrument.cs from the TAP engine and the parser from Scpi.cs with
             a few extensions.
            
             This excerpt does not presume a valid Scpi instrument and does not automatically attempt to
             talk to it. It can thus be used to talk to a 3458A or an older R2D2 instrument as well.
            
             For example the IdnString property is only filled in once it's actually evaluated.
             </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.VisaInstrument.formatter">
            <summary>
            Used to send/receive formatted strings to/from the instrument.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.VisaAddress">
            <summary>
            The VISA address of the instrument that this class represents a connection to.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.IsConnected">
            <summary>   Indicates whether this object is connected. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.AutoConnect">
             <summary>
             Gets or sets a value indicating whether the instance will automatically connect on a call to
             ScpiQuery() or ScpiCommand() if Open() wasn't called before.
             </summary>
            
             <value> true if automatic connect, false if not. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.IsDoingQueryOpc">
             <summary>   Gets or sets a value indicating whether the *OPC? request is performed after every ScpiCommand (not after a Query since this returns with the result anyways). </summary>
            
             <value> true to query opc, false if not. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.QueryOpcTimeoutSec">
             <summary>   Gets or sets the query opc timeout. </summary>
            
             <value> The query opc timeout in seconds. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.QueryOpcIntervallMs">
             <summary>   Gets or sets the query opc intervall in milliseconds. This is used on WaitForOper</summary>
            
             <value> The query opc intervall in milliseconds. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.IsDoingErrorCheck">
             <summary>
             Gets or sets a value indicating whether this object is doing an error check after every ScipCommand (not after a Query);
             </summary>
            
             <value> true if this object is doing error check, false if not. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.IdnString">
             <summary>
             Gets the instrument identity string as returned by the SCPI command "*IDN?", hence a proper
             Scpi instrument has to be connected. If the instrument was not yet opened, it will be opened.
             If the IdnString was retrieved successfully before, the (potentially obsolete) result will be
             returned.
             You may set the IdnString manually if you connect to a non-SCPI instrument like the 3458A.
             </summary>
            
             <value> The idn string. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.IdnComponents">
             <summary>
             Gets the four individual ID components as returned by the "*IDN?" command. If the IDN could
             not be queried, null is returned. If the instrument sends a reply, an array with exactly 4
             entries will always be returned. If the instrument however does return less than 4 components,
             the missing entries are set to null.
             </summary>
            
             <value> The idn components. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.IdnManufacturer">
             <summary>   Gets the manufacturer part from the IDN components. </summary>
            
             <value> The manufacturer or null if the IDN query failed. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.IdnModelNumber">
             <summary>   Gets the model number part from the IDN components. </summary>
            
             <value> The model number or null if the IDN query failed. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.IdnSerialNumber">
             <summary>   Gets the serial number part from the IDN components. </summary>
            
             <value> The serial number or null if the IDN query failed. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.IdnSoftwareVersion">
             <summary>   Gets the software version part from the IDN components. </summary>
            
             <value> The software version or null if the IDN query failed. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.Instruments.VisaInstrument.KnownManufacturers">
            <summary>   A list of known manufacturers in an *IDN? response. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.IsKnownManufacturer">
             <summary>   Gets a value indicating whether the manufacturer returned in the IDN query is among the known ones. </summary>
            
             <value> true if the manufacturer is known, false if not. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.IsModelNumber(System.String[],System.Boolean)">
             <summary>
             Query if the model number from the IDN reply matches any of the given model numbers. The
             comparison is case sensitive. Optionally, wildcards can be used, e.g "344*A" for all DMMs or
             "3446?A" for a few very particular models.
             </summary>
            
             <param name="modelNumbers">     The model numbers. </param>
             <param name="allowWildcards">   true to allow "?" and "*" wildcards in the model numbers. </param>
            
             <returns>
             true if the actual model number matches any of the given strings, false if not.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.IsSoftwareVersion(System.String,System.Boolean)">
             <summary>
             Query if the instrument version is (at least) a certain revision. For each fragment of the
             version, the value will be compared if both cues render as integers, otherwise the
             alphabetical order will be compared.
             </summary>
            
             <param name="versionCue">   The version cue, for example "D.01.02". </param>
             <param name="orLater">      true to also accept later versions. </param>
            
             <returns>   true if the instrument software version is equal or higher, false if not. </returns>
            
             ### <exception cref="T:System.ArgumentException">    Thrown when the passed in cue has more fragments
                                                             than the instrument version info. </exception>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.IoTimeout">
            <summary>
            The timeout used by the underlying VISA driver when communicating with the instrument [ms].
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <param name="visaAddress">  The VISA address of the instrument that this class represents a
                                         connection to. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.#ctor(System.String,System.String[],System.Boolean)">
             <summary>
             This constructor will connect to the instrument, do an IDN query and check if it's any of the
             known manufacturers and if it matches any of the provided model numbers.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when the Visa address is empty, the instrument
                                                     manufacturer is unknown or the wrong model was found. </exception>
            
             <param name="visaAddress">      The VISA address of the instrument that this class represents
                                             a connection to. </param>
             <param name="modelNumbers">     The model numbers. </param>
             <param name="allowWildcards">   true to allow "?" and "*" wildcards in the modelNumbers. </param>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.UseTerminationCharacter">
             <summary>
             Forces the (non) usage of a termination character. Otherwise leaves it to the default
             implementation.
             </summary>
            
             <value> The use termination character. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.VisaInstrument.TerminationCharacter">
             <summary>   Gets or sets the termination character. </summary>
            
             <value> The termination character. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.Open(System.Boolean,System.String)">
             <summary>
             Opens the connection to the Instrument. Assumes Visa Address property is specified.
             </summary>
            
             <exception cref="T:System.IO.IOException">  Thrown when an IO failure occurred. </exception>
            
             <param name="forceOpen">    true to force the open sequence. When set to false, Open() will
                                         return immediately if the instance thinks it is already connected. </param>
             <param name="customOptionString">    Custom Option string</param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.Close">
            <summary>
            Closes the connection to the instrument. Assumes connection is open.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.DeviceClear">
            <summary>
            Implemented the device clear 488 functionality
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.SetTerminationCharacter(Ivi.Visa.Interop.IMessage)">
            <summary>
            Called by InstrumentBase.Open() before the newly opened connection is used for anything.
            Allows specializations of InstrumentBase to customize connection parameters such as
            TerminationCharacter.
            </summary>
            <param name="inst"></param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.ScpiCommand(System.String,System.Double,System.Boolean)">
             <summary>
             Sends a SCPI command to the instrument and adds the value as a parameter to the command using
             SCPI formatting.
             </summary>
            
             <param name="command">                          The command to send. </param>
             <param name="value">                            The value. </param>
             <param name="overrideApplicationHaltServices">  true to ignore Stop and Shutdown requests set
                                                             in the ApplicationServices. By default,
                                                             exceptions are thrown if anything is set to
                                                             true there. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.ScpiCommand(System.String,System.Int32,System.Boolean)">
             <summary>
             Sends a SCPI command to the instrument and adds the value as a parameter to the command using
             SCPI formatting.
             </summary>
            
             <param name="command">                          The command to send. </param>
             <param name="value">                            The value. </param>
             <param name="overrideApplicationHaltServices">  true to ignore Stop and Shutdown requests set
                                                             in the ApplicationServices. By default,
                                                             exceptions are thrown if anything is set to
                                                             true there. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.ScpiCommand(System.String,System.Boolean,System.Boolean)">
             <summary>
             Sends a SCPI command to the instrument and adds the value as a parameter to the command using
             SCPI formatting.
             </summary>
            
             <param name="command">                          The command to send. </param>
             <param name="value">                            The value. </param>
             <param name="overrideApplicationHaltServices">  true to ignore Stop and Shutdown requests set
                                                             in the ApplicationServices. By default,
                                                             exceptions are thrown if anything is set to
                                                             true there. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.ScpiCommand(System.String,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
             <summary>   Sends a SCPI command to the instrument. </summary>
            
             <remarks>   Non-blocking. </remarks>
            
             <exception cref="T:System.IO.IOException">      Thrown when an IO failure occurred. </exception>
             <exception cref="T:Keysight.Aes.Asf.Instruments.VisaException">    Thrown when a Visa error condition occurs. </exception>
            
             <param name="command">                          The command to send. </param>
             <param name="overrideApplicationHaltServices">  (Optional) true to ignore Stop and Shutdown
                                                             requests set in the ApplicationServices. By
                                                             default, exceptions are thrown if anything is
                                                             set to true there. </param>
             <param name="queryOpc">                         (Optional) If not null, overrides the
                                                             instrument's QueryOpc setting. </param>
             <param name="queryOpcTimeoutSec">               (Optional) If not null, overrides the opc
                                                             timeout setting. </param>
             <param name="checkErrors">                      (Optional) If not null, overrides the
                                                             instrument's CheckError setting. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.ScpiBinaryCommand(System.String,System.Byte[],System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
             <summary>   Sends a SCPI command with binary data to the instrument. </summary>
            
             <remarks>   Non-blocking. </remarks>
            
             <exception cref="T:System.IO.IOException">  Thrown when an IO failure occurred. </exception>
            
             <param name="command">                          The command to send. </param>
             <param name="value">                            The binary data to send. </param>
             <param name="overrideApplicationHaltServices">  true to ignore Stop and Shutdown requests set
                                                             in the ApplicationServices. By default,
                                                             exceptions are thrown if anything is set to
                                                             true there. </param>
             <param name="queryOpc">                         If not null, overrides the instrument's
                                                             QueryOpc setting. </param>
             <param name="queryOpcTimeoutSec">               If not null, overrides the opc timeout setting. </param>
             <param name="checkErrors">                      If not null, overrides the instrument's
                                                             CheckError setting. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.ScpiQuery(System.String,System.Boolean)">
             <summary>   Sends a SCPI query to the instrument and waits for a response. </summary>
            
             <exception cref="T:System.IO.IOException">                  Thrown when an IO failure occurred. </exception>
             <exception cref="T:System.TimeoutException">             Thrown when a Timeout error condition occurs. </exception>
            
             <param name="query">                        The SCPI query to send. </param>
             <param name="overrideApplicationHaltServices">  true to ignore Stop and Shutdown requests set in
                                                         the ApplicationServices. By default, exceptions
                                                         are thrown if anything is set to true there. </param>
            
             <returns>   The response from the instrument. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.ScpiBinaryQuery(System.String,System.Boolean)">
             <summary>   Sends a SCPI query for binary data to the instrument and waits for a response.
             </summary>
            
             <exception cref="T:System.IO.IOException">                  Thrown when an IO failure occurred. </exception>
             <exception cref="T:System.TimeoutException">             Thrown when a Timeout error condition occurs. </exception>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="query">                        The SCPI query to send. </param>
             <param name="overrideApplicationHaltServices">  true to ignore Stop and Shutdown requests set in
                                                         the ApplicationServices. By default, exceptions
                                                         are thrown if anything is set to true there. </param>
            
             <returns>   The response from the instrument. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.HandleVisaException(System.String,System.Exception)">
             <summary>
             Converts known Exceptions from the IOLibs into visa exceptions and throws them. For other
             exceptions, they will just be logged and rethrown.
             </summary>
            
             <exception cref="T:Keysight.Aes.Asf.Instruments.VisaException">    Thrown when a Visa error condition occurs. </exception>
            
             <param name="command">  The command to send. </param>
             <param name="ex">       The ex. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.WaitOperationComplete(System.Int32)">
             <summary>
             Queries the instrument's "operation complete" state and returns true if the operation has
             completed within the alloted timeout.
             </summary>
            
             <param name="timeoutSeconds">   The timeout in seconds. Set to zero for indefinite timeout. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.WaitForStatus(System.Int32,System.Boolean,System.Int32,System.Int32)">
             <summary>   Waits for one, several or any of a set of statusbits to come true. </summary>
            
             <param name="statusMask">       The status mask to wait for. </param>
             <param name="anyBit">           true to wait for any bit. </param>
             <param name="timeoutSeconds">   The timeout in seconds. Set to zero for indefinite timeout. </param>
             <param name="intervalMillisec"> The interval to wait between instrument requests in millisec. </param>
            
             <returns>   true if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.GetError(System.String@)">
             <summary>   Gets the error number and text. </summary>
            
             <param name="errorText">    [out] The error text. </param>
            
             <returns>   The error number. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.ScpiQuery``1(System.String,System.Boolean)">
             <summary>
             As ScpiQuery except it will try to parse the returned string to T. See <see cref="M:Keysight.Aes.Asf.Instruments.VisaInstrument.Parse(System.String,System.Type)"/>
             for details on parsing.
             </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="query">                        The SCPI query to send. </param>
             <param name="overrideApplicationHaltServices">  true to ignore Stop and Shutdown requests set in
                                                         the ApplicationServices. By default, exceptions
                                                         are thrown if anything is set to true there. </param>
            
             <returns>   The response from the instrument converted to the requested type. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.ScpiRead(System.Boolean)">
             <summary>
             Reads the response to any previously sent ScpiCommand. Typically, you would use ScpiQuery
             instead, but in some generic scenarios you may want to split the actions.
             </summary>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.ScpiRead``1(System.Boolean)">
             <summary>
             As ScpiRead except it will try to parse the returned string to T. See <see cref="M:Keysight.Aes.Asf.Instruments.VisaInstrument.Parse(System.String,System.Type)"/>
             for details on parsing.
             </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="overrideApplicationHaltServices">  true to ignore Stop and Shutdown requests set in
                                                         the ApplicationServices. By default, exceptions
                                                         are thrown if anything is set to true there. </param>
            
             <returns>   The response from the instrument converted to the requested type. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.ReadSTB">
             <summary>   Reads the status byte from the instrument. </summary>
            
             <returns>   The status byte. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.Parse(System.String,System.Type)">
            <summary>
            Parses the result of a SCPI query back to T. Special parsing for bools and arrays. bools supports 1/0 and ON/OFF formats.
            </summary>
            <param name="scpiString"></param>
            <param name="T"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.Parse``1(System.String)">
            <summary>
            Parses the result of a SCPI query back to T. Special parsing for enums, bools and arrays. bools supports 1/0 and ON/OFF formats.
            If Enums are tagged with ScpiAttribute ScpiString will be used instead of ToString'ed version.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="scpiString"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.VisaInstrument.SplitScpiArray(System.String,System.Boolean)">
            <summary>
            Splits a string into a list of valid separated SCPI response data strings. Needed because String.Split(resp, ',') is not tolerant to " characters.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Instruments.IMeasurementProvider">
            <summary>
            Typically implemented by a digital multimeter, but also suitable for a power supply that may
            provide a readout.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Instruments.IMeasurementProvider.AvailableMeasurements">
            <summary>   Gets the type of measurements that the instrument provides. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.IMeasurementProvider.SelectFunction(Keysight.Aes.Asf.Instruments.MeasurementTypes)">
             <summary>   Switches the instrument to the selected measurement type. </summary>
            
             <param name="type"> The type of measurement to perform. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Instruments.IMeasurementProvider.Readout(Keysight.Aes.Asf.Instruments.MeasurementTypes)">
             <summary>   Performs a readout of the given type. </summary>
            
             <param name="type"> The type of measurement to perform. </param>
            
             <returns>   A double representing the measured value. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Licensing.LicenseHelper">
            <summary>   A license helper. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Licensing.LicenseHelper.CheckLicense(System.String,System.Version)">
             <summary>
             Checks wheter a feature ID is licensed in any way (Local Trial, KLM, Eesof).
             </summary>
            
             <exception cref="T:Keysight.Aes.Asf.Licensing.MissingLicenseException">  Thrown when a Missing License error condition
                                                         occurs. </exception>
            
             <param name="featureId">        Identifier for the feature. </param>
             <param name="assemblyVersion">  (Optional) The assembly version. If set to null, the calling
                                             assembly's version will be used. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Licensing.LicenseHelper.IsFeatureLicensed(System.String,System.Version)">
             <summary>   Determines if a licensable feature with name featureName is licensed. </summary>
            
             <param name="featureName">      Name of the feature. </param>
             <param name="assemblyVersion">  (Optional) The assembly version. If set to null, the calling
                                             assembly's version will be used. </param>
            
             <returns>   True if the feature is licensed, false otherwise. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Licensing.LicenseHelper.ActivateTrialLicense(System.String,Keysight.Aes.Licensing.TrialLicenseLength)">
             <summary>
             Activates the trial license described by featureName. If the trial can not be activated, an
             exception is thrown.
             </summary>
            
             <param name="featureName">          Name of the feature. </param>
             <param name="trialLicenseLength">   Length of the trial license in days. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Licensing.LicenseHelper.GetFeatureLicense(System.String,System.Version)">
             <summary>
             Calls the actual license manager to determine whether a valid license exists.
             </summary>
            
             <param name="featureName">      Name of the feature. </param>
             <param name="assemblyVersion">  The assembly version to check the license for. Make sure this
                                             follow the Major=Year, Minor=MMDD style, e.g. 2017.0530. </param>
            
             <returns>   The feature license. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Licensing.LicenseHelper.IsTrialAvailable(System.String)">
            <summary>
            Indicates if a trial for feature with name featureName is available.
            </summary>
            <param name="featureName">Name of the feature</param>
            <returns>True if a trial is available, false otherwise.</returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Licensing.MissingLicenseException">
            <summary>   (Serializable) exception for signalling missing license errors. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Licensing.MissingLicenseException.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Licensing.MissingLicenseException.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <param name="message">  The message. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Licensing.MissingLicenseException.#ctor(System.String,System.Exception)">
             <summary>   Constructor. </summary>
            
             <param name="message">  The message. </param>
             <param name="inner">    The inner. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Licensing.MissingLicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>   Specialised constructor for use only by derived class. </summary>
            
             <param name="info">     The information. </param>
             <param name="context">  The context. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Maths.Interpolation">
            <summary>   Provides various methods to interpolate on data points. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.Interpolation.Lerp(System.Double,System.Double[0:,0:])">
             <summary>
             Takes an index and a table that projects an index onto a value. The two closest index entries
             are used to perform a linear interpolation. If the index is outside the bounds of the table,
             the border value will be returned.
             </summary>
            
             <param name="index">        The index to search for. </param>
             <param name="indexToValue"> The table. </param>
            
             <returns>   The interpolated value. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.Interpolation.Lerp(System.Double,System.Double,System.Double)">
             <summary>
             Linearly interpolates between two values.
             For a fraction of 0, value A is returned, for a fraction of 1, value B is returned.
             For a fraction between 0 and 1, a linearly interpolated value between A and B is returned.
             For a fraction outside the [0 1] interval, an appropriately interpolated value is returned
             that would also sit on the line crossing A and B.
             </summary>
            
             <param name="valueA">   The value a. </param>
             <param name="valueB">   The value b. </param>
             <param name="fraction"> The fraction. </param>
            
             <returns>   The interpolated value. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Maths.PolyCurveFit">
            <summary>
            This class was taken from the Truss code base.  The location for this code base is
            $/MPO/Core/trunk/software/src/ModularCore/DspLib/Dsp.cs
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.PolyCurveFit.PolyFit(System.Double[],System.Double[],System.Int32,System.Int32,System.Double[])">
            <summary>
            Fits a polynomial to a set of real data.
            </summary>
            <param name="data">The array of real data to be fit.</param>
            <param name="dataX">The value of the independent variable</param>
            <param name="terms">The number of terms in the polynomial used to fit the data.</param>
            <param name="p0">The power of the independent variable in the first, lowest power, term.</param>
            <param name="weight">A weighting function for the squared deviation of each data sample.</param>
            <returns>The polynomial coefficients, starting at the lowest power, p0.</returns>
            <remarks>The weight parameter is optional. Set it to null to achieve a uniform weighting of each data sample. The 
            length of weight should match the data array. If it does not, extra values are ignored. Missing values are assumed
            to have a weight of zero.</remarks>
        </member>
        <member name="T:Keysight.Aes.Asf.Maths.Aggregate">
            <summary>
            Provides various methods to extract or reduce sets of data. Extraction is done by building
            groups of data, for example to reduce a set of 100 entries to a set of 5, the set is grouped
            into 5 groups, each containing 20 numbers. From each group, a final number is derived by
            choosing one of various available of the following methods. For non-matching subset dividers,
            error diffusion is applied. I.e. if a subset of size 6 is requested from a set of 26, the
            derived groups are of the sizes 4,5,4,4,5,4 (instead of accumulating the error in the last
            group which would lead to group sizes 4,4,4,4,4,6).
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Maths.Aggregate.AggregateMethods">
            <summary>
            Specifies the various ways in which a subset of data can be extracted from a superset.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Maths.Aggregate.AggregateMethods.First">
            <summary>
            Returns the first number of a group
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Maths.Aggregate.AggregateMethods.Average">
            <summary>
            Returns the average of a group
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Maths.Aggregate.AggregateMethods.RMS">
            <summary>
            Returns the root mean square of a group
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Maths.Aggregate.AggregateMethods.MinimumPeak">
            <summary>
            Returns the minimum value of the group. Keep in mind that this may be a negative number.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Maths.Aggregate.AggregateMethods.MaximumPeak">
            <summary>
            Returns the maximum value of the group. Keep in mind that this may be a negative number 
            if the whole group is negative and that the absolute value will then be the smallest 
            of the group.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Maths.Aggregate.AggregateMethods.MinMaxPeak">
            <summary>
            Returns the value that's the furthest apart from zero but includes the sign.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Maths.Aggregate.AggregateMethods.AbsPeak">
            <summary>
            Returns the value that's the furthest apart from zero without the sign.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.Aggregate.Extract(System.Collections.Generic.IList{System.Double},Keysight.Aes.Asf.Maths.Aggregate.AggregateMethods,System.Int32)">
             <summary>
             Returns a subset of a certain size from the provided data, using the specified method. If the
             requested amount of data is larger than the provided amount, only the provided data is
             returned. If the provided data is null, null is returned.
             </summary>
            
             <param name="dataSet">  The source data. </param>
             <param name="method">   The extraction method. </param>
             <param name="count">    The number of samples to extract. </param>
            
             <returns>   The data excerpt. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.Aggregate.ExtractGroup(System.Collections.Generic.IList{System.Double},Keysight.Aes.Asf.Maths.Aggregate.AggregateMethods,System.Double@,System.Double)">
             <summary>
             Returns the excerpt value from a group using the requested method and applying error
             diffusion to the number of grouped samples.
             </summary>
            
             <param name="dataSet">          The source data. </param>
             <param name="method">           The extraction method. </param>
             <param name="samplesTaken">     [in,out] The number of samples taken. </param>
             <param name="groupSampleCount"> Required size of the group. </param>
            
             <returns>   The final value that represents the group data. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.Aggregate.ExtractGroup(System.Collections.Generic.IList{System.Double},Keysight.Aes.Asf.Maths.Aggregate.AggregateMethods,System.Int32,System.Int32)">
             <summary>
             Returns the excerpt value from a group using the requested method.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="dataSet">      The source data. </param>
             <param name="method">       The extraction method. </param>
             <param name="startIndex">   The index of the first sample to process. </param>
             <param name="endIndex">     The index of the last sample to process. </param>
            
             <returns>   The final value that represents the group data. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Maths.LittleEndian">
            <summary>
            A binary converter to convert various .NET types to and from little endian.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Maths.MathHelper">
            <summary>   Contains mathematical helper functions. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.MathHelper.Clamp``1(``0,``0,``0)">
             <summary>   Makes sure the given value is within min and max. If the value is outside and max is smaller than min, max is returned. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="value">    The value. </param>
             <param name="min">      The minimum. </param>
             <param name="max">      The maximum. </param>
            
             <returns>   Min, Max or Value </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.MathHelper.GetMinMax(System.Collections.Generic.IEnumerable{System.Int32},System.Int32@,System.Int32@)">
             <summary>   Finds the minimum and the maximum in the given set of values. </summary>
            
             <param name="values">   The values. </param>
             <param name="min">      [out] The minimum. </param>
             <param name="max">      [out] The maximum. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.MathHelper.GetMinMax(System.Collections.Generic.List{System.Double},System.Double@,System.Double@,System.Int32,System.Int32)">
             <summary>   Finds the minimum and the maximum in the given set of values. The actual search range can be limited. </summary>
            
             <param name="values">       The values. </param>
             <param name="min">          [out] The minimum. </param>
             <param name="max">          [out] The maximum. </param>
             <param name="startIndex">   The start index or zero to start at the beginning. </param>
             <param name="endIndex">     The end index or -1 to search all the way to the end. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.MathHelper.GetMinMax(System.Collections.Generic.IEnumerable{System.Collections.Generic.List{System.Double}},System.Double@,System.Double@,System.Int32,System.Int32)">
             <summary>   Finds the minimum and the maximum in the given set of values. </summary>
            
             <param name="valueLists">   The values. </param>
             <param name="min">          [out] The minimum. </param>
             <param name="max">          [out] The maximum. </param>
             <param name="startIndex">   The start index or zero to start at the beginning. </param>
             <param name="endIndex">     The end index or -1 to search all the way to the end. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.MathHelper.GetIndexOfClosestEntry(System.Collections.Generic.IEnumerable{System.Double},System.Double)">
             <summary>   Gets the index of the entry with the value closest to the reference. </summary>
            
             <param name="values">       The values. </param>
             <param name="reference">    The reference. </param>
            
             <returns>   The index of the closest entry or -1 if values does not contain any entries. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.MathHelper.GCD(System.Int64,System.Int64)">
            <summary>
            find Greatest Common Divisor (GCD) of 2 integers
            using Euclid algorithm; ignore sign
            </summary>
            <param name="Value1">Int64</param>
            <param name="Value2">Int64</param>
            <returns>Int64: GCD, positive</returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.MathHelper.LCM(System.Int64,System.Int64)">
            <summary>
            Find Least Common Multiple of 2 integers
            using math formula: LCM(a,b)= a*(b/GCD(a,b));
            </summary>
            <param name="Value1">Int64</param>
            <param name="Value2">Int64</param>
            <returns>Int64</returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.MathHelper.DegreesToRadians(System.Double)">
             <summary>   Converts a degree value to a radians value. </summary>
            
             <param name="degrees">  The value in degrees. </param>
            
             <returns>   The value in radians. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.MathHelper.RadiansToDegrees(System.Double)">
             <summary>   Converts a radians value to a degrees value. </summary>
            
             <param name="radians">  The value in radians. </param>
            
             <returns>   The value in degrees. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Maths.MathHelper.RoundToSignificantDigits(System.Double,System.Int32)">
             <summary>   Rounds to n significant digits. </summary>
            
             <param name="number">        The number to process. </param>
             <param name="digits">   The number of significant digits to round to. </param>
            
             <returns>   A double. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.Commands.Core.AsyncRelayCommand`1">
            <summary>
                This command uses delegates for the execution logic, which is executed asynchronously
            </summary>
            <typeparam name="TParam">Type of the command parameter</typeparam>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.Commands.Core.CommandBase`1">
            <summary>
            This is the base class of ALL commands.
            </summary>
            <typeparam name="TParam">Type of the command parameter</typeparam>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.Commands.Core.CommandBase`1.Identifier">
            <summary>
            Gets the command identifier that is used for the "View" as classification
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Commands.Core.CommandBase`1.RaiseCanExecuteChanged">
            <summary>
            Makes the CommandManager requesting the CanExecute method again.
            NOTE: This is not needed in most use-cases.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Commands.Core.CommandBase`1.CanExecuteCore(`0)">
            <summary>
            Override this method to set the logic whether the command can be executed or not.
            Default behavior: Command is always executable.
            </summary>
            <returns>True if the the command can be executed</returns>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Commands.Core.CommandBase`1.ExecuteCore(`0)">
            <summary>
            Override this method to set the execution logic of the command.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Commands.Core.CommandBase`1.BeforeExecutionCore(`0)">
            <summary>
            This method is executed BEFORE the "real" command logic is executed.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Commands.Core.CommandBase`1.AfterExecutionCore(`0)">
            <summary>
            This method is executed AFTER the "real" command logic is executed.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.Commands.Core.CommandFactory">
            <summary>
                This factory is used to create commands
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.Commands.Core.IIdentifiedCommand">
            <summary>
            Expanded command interface that is the one-and-only to be used
            DO NOT IMPLEMENT THE ICOMMAND OR THIS INTERFACE!
            USE THE COMMANDFACTORY INSTEAD.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.Commands.Core.RelayCommand`1">
            <summary>
                This command uses delegates for the execution logic
            </summary>
            <typeparam name="TParam">Type of the command parameter</typeparam>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.Converters.EnumSelectionToTrueConverter">
             <summary>
             Returns true if an enum value holds one out of a list of possible values. The converter only
             works in one direction.
             </summary>
             <example>
             In your resources, you define the valid entries by listing them as child nodes of the converter:
             <code>
             &lt;converters:EnumSelectionToTrueConverter x:Key=&quot;IsLogoPresent&quot;&gt;
                 &lt;x:Static Member = &quot; exs:ExpertSolutionPresentationModes.SingleApplication }&quot;/&gt;
                 &lt;x:Static Member = &quot; exs:ExpertSolutionPresentationModes.LoadedMeasurement}&quot;/&gt;
             &lt;/converters:EnumSelectionToTrueConverter&gt;
            
             &lt;converters:EnumSelectionToTrueConverter x:Key=&quot;IsLoadIconPresent&quot;&gt;
                 &lt;x:Static Member = &quot; exs:ExpertSolutionPresentationModes.SingleApplication}&quot;/&gt;
                 &lt;x:Static Member = &quot; exs:ExpertSolutionPresentationModes.MultiApplication}&quot;/&gt;
             &lt;/converters:EnumSelectionToTrueConverter&gt;
             </code>
             </example>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.EnumSelectionToTrueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value. </summary>
            
             <param name="value">        The value produced by the binding source. </param>
             <param name="targetType">   The type of the binding target property. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.EnumSelectionToTrueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value. </summary>
            
             <param name="value">        The value that is produced by the binding target. </param>
             <param name="targetType">   The type to convert to. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.Converters.ListToStringConverter">
            <summary>
            converts a string containing values seperated by a delimiter to a list of numbers
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.ListToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert list of numeric values to string seperated by a delimeter passed in as the parameter
            </summary>
            <param name="value">        The value produced by the binding source. </param>
            <param name="targetType">   The type of the binding target property. </param>
            <param name="parameter">    The delimiter seperating the values in the string. </param>
            <param name="culture">      The culture to use in the converter. </param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.ListToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert string with values seperated by a delimeter list of numeric values.  The delimeter passed in as the parameter
            </summary>
            <param name="value">        The value produced by the binding source. </param>
            <param name="targetType">   The type of the binding target property. </param>
            <param name="parameter">    The delimiter seperating the values in the string. </param>
            <param name="culture">      The culture to use in the converter. </param>
            <returns></returns>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.Converters.ValueConverterGroup">
            <summary>   Allows chaining of multiple converters by listing them as a resource definition. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.ValueConverterGroup.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value. </summary>
            
             <param name="value">        The value produced by the binding source. </param>
             <param name="targetType">   The type of the binding target property. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.ValueConverterGroup.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value. </summary>
            
             <param name="value">        The value that is produced by the binding target. </param>
             <param name="targetType">   The type to convert to. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.Converters.BooleanToBrushConverter">
             <summary>   Returns a Brush depending on the state of a boolean. </summary>
             <example>
             To use in your XAML, you configure the converter in the resources:
             <code>
                 xmlns:asfConv="clr-namespace:Keysight.Aes.Asf.MVVM.Converters;assembly=Keysight.Aes.Asf"
                 
                 // In your object's resources:
                 &lt;asfConv:BooleanToBrushConverter x:Key=&quot;BoolToBrush&quot; TrueBrush=&quot;Orange&quot; FalseBrush=&quot;Gray&quot;/&gt;
                 
                 // In you object's attributes:
                 Fill=&quot;{Binding Path=IsDefault, Converter={StaticResource BoolToBrush}}&quot;
            
             </code>
             </example>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.Converters.BooleanToBrushConverter.TrueBrush">
             <summary>   Gets or sets the true brush. </summary>
            
             <value> The true brush. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.Converters.BooleanToBrushConverter.FalseBrush">
             <summary>   Gets or sets the false brush. </summary>
            
             <value> The false brush. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.BooleanToBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value. </summary>
            
             <param name="value">        The value produced by the binding source. </param>
             <param name="targetType">   The type of the binding target property. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.BooleanToBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value. </summary>
            
             <param name="value">        The value that is produced by the binding target. </param>
             <param name="targetType">   The type to convert to. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.Converters.BrushOpacityConverter">
            <summary>   A brush opacity converter.
            <example>
            Define one in your resources for each opacity value you want to use.
            <code>
             xmlns:conv="clr-namespace:ASF.MVVM.Converters;assembly=Keysight.Aes.Asf"
             
               &lt;UserControl.Resources&gt;
                   &lt;conv:BrushOpacityConverter x:Key=&quot;OpacityConverter&quot; Opacity=&quot;0.6&quot;/&gt;
               &lt;/UserControl.Resources&gt;
            </code>
            Use with a named or resource defined brush like
            <code>
               &lt;Setter Property=&quot;Background&quot; Value=&quot;{Binding Source={StaticResource BackgroundProxy}, Path=Data, Converter={StaticResource OpacityConverter}}&quot;/&gt;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.Converters.BrushOpacityConverter.Opacity">
             <summary>   Gets or sets the opacity that shall be applied to the Brush. </summary>
            
             <value> The opacity. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.BrushOpacityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="value">        The value produced by the binding source. </param>
             <param name="targetType">   The type of the binding target property. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.BrushOpacityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value. </summary>
            
             <param name="value">        The value that is produced by the binding target. </param>
             <param name="targetType">   The type to convert to. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.Converters.NormalizedToPercentConverter">
            <summary>   Converts a normalized value of 0...1 to a percentage of 0...100 to . </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.NormalizedToPercentConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value from normalized to percentage . </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="value">        The value produced by the binding source. </param>
             <param name="targetType">   The type of the binding target property. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.NormalizedToPercentConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value from percentage back to normalized</summary>
            
             <param name="value">        The value that is produced by the binding target. </param>
             <param name="targetType">   The type to convert to. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.Converters.NullToVisibiltyConverter">
            <summary>
            A null to visibilty converter. Usefull if you want to hide controls depending on the
            DataContext being set or not.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.NullToVisibiltyConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value. </summary>
            
             <param name="value">        The value produced by the binding source. </param>
             <param name="targetType">   The type of the binding target property. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.NullToVisibiltyConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value. </summary>
            
             <param name="value">        The value that is produced by the binding target. </param>
             <param name="targetType">   The type to convert to. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.Converters.MapItem">
            <summary>   A map item that defines what target object is assigned to a certain source object. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.Converters.MapItem.Source">
            <summary>   Gets or sets the Source for the mapping. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.Converters.MapItem.Target">
            <summary>   Gets or sets the Target for the mapping. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.Converters.ObjectToObjectConverter">
             <summary>
             A generic object to object converter.
             </summary>
            
             <example>
             This example shows how to map the entries of an enum to brushes in a ResourceDictionary.
             The example enum is of Type 'DataProcessorTypes' found in namespace 'vm'.
             The following namespace declarations need to be made, e.g. in the UserControl XAML header.
             The "vm" would point to your particular viewmodel namespace (or can be omitted if that's the
             same as the view).
             <code>
                xmlns:vm="clr-namespace:ExpUI.WhiteboardItems.ViewModels"
                xmlns:asf="clr-namespace:Keysight.Aes.Asf.MVVM.Converters"
             </code>
            
             This part goes to the resource section, e.g. of your UserControl or you could put this
             in a ResourceDictionary as well.
             <code>
               &lt;asf:ObjectToObjectConverter x:Key=&quot;ProcessorTypeToBrightConverter&quot;&gt;
                   &lt;asf:ObjectToObjectConverter.MapItems&gt;
                       &lt;asf:MapItem Source = &quot;{x:Static vm:DataProcessorTypes.DataSource}&quot; Target=&quot;{StaticResource DataSourceBrightBack}&quot;/&gt;
                       &lt;asf:MapItem Source = &quot;{x:Static vm:DataProcessorTypes.DataProcessor}&quot; Target=&quot;{StaticResource DataProcessorBrightBack}&quot;/&gt;
                       &lt;asf:MapItem Source = &quot;{x:Static vm:DataProcessorTypes.DataTarget}&quot; Target=&quot;{StaticResource DataTargetBrightBack}&quot;/&gt;
                   &lt;/asf:ObjectToObjectConverter.MapItems&gt;
               &lt;/asf:ObjectToObjectConverter&gt;
             </code>
             </example>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.Converters.ObjectToObjectConverter.MapItems">
            <summary>   Gets the mapped items. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.ObjectToObjectConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value. </summary>
            
             <param name="value">        The value produced by the binding source. </param>
             <param name="targetType">   The type of the binding target property. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.ObjectToObjectConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value. </summary>
            
             <param name="value">        The value that is produced by the binding target. </param>
             <param name="targetType">   The type to convert to. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.Converters.PercentToNormalizedConverter">
            <summary>   Converts a percentage of 0...100 to a normalized value of 0...1. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.PercentToNormalizedConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="value">        The value produced by the binding source. </param>
             <param name="targetType">   The type of the binding target property. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.Converters.PercentToNormalizedConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>   Converts a value. </summary>
            
             <param name="value">        The value that is produced by the binding target. </param>
             <param name="targetType">   The type to convert to. </param>
             <param name="parameter">    The converter parameter to use. </param>
             <param name="culture">      The culture to use in the converter. </param>
            
             <returns>
             A converted value. If the method returns null, the valid null value is used.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.ThreadHelper">
            <summary>
                This is a helper class for thread related methods
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.ThreadHelper.DeferExecution(System.Action)">
            <summary>
                Deferres an action, i.e. it is executed after the "normal" program flow is finished
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.ThreadHelper.InvokeInMainThread(System.Action,System.Boolean)">
            <summary>
                Executes the given action in the main thread
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.View.CommandKeyBinding">
            <summary>
                This class can be used as a replacement of the KeyBinding. It gets the KeyGesture from the CommandViewInfoMapper.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.View.CommandViewInfo">
            <summary>
                This class stores the view information for a command (group/identifier)
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.View.CommandViewInfoMapper">
            <summary>
                This class maps the command identifiers to the corresponding CommandViewInfo
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.MVVM.View.CommandViewInfoMapper.map">
            <remarks>
                The map is not locked/synchronized because the items are only added at start-up.
                After that the map is used read-only.
            </remarks>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.View.CommandViewInfoMapper.RegisteredInformation">
            <summary>
                Gets the list of all view information that are currently registered
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.View.CommandViewInfoMapper.Reset">
            <summary>
                Resets the mapper (only used for tests)
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.View.Converters.CommandDisplayNameConverter">
            <summary>
            Converts the command identifier to its display name
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.View.Converters.CommandPathDataConverter">
            <summary>
            Converts the command identifier to its Path data
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.View.Converters.CommandKeyGestureConverter">
            <summary>
            Converts the command identifier to its short-cut
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.View.Converters.CommandToolTipConverter">
            <summary>
            Converts the command identifier to its tooltip
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.View.Converters.ValueConverterBase`2">
            <summary>
                This class is the base class of all (single) value converters
            </summary>
            <typeparam name="TSource">Type of the property on the ViewModel site</typeparam>
            <typeparam name="TTarget">Type of the property on the View (XAML) site</typeparam>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.View.ICommandViewInfoProvider">
            <summary>
            This interface must be implemented by a module to provide the command view information.
            It will be loaded via MEF2.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.ViewModels.AutoCsvExportSettings">
            <summary>   A ViewModel for the automatic CSV export. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.AutoCsvExportSettings.CsvExportSettings">
             <summary>   Gets or sets the csv export settings. Set to null to use the ApplicationServices.GlobalSettings </summary>
            
             <value> The csv export settings. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.AutoCsvExportSettings.IsExportEnabled">
             <summary>   Gets or sets a value indicating whether the automatic CSV export is switched on or off. </summary>
            
             <value> true if automatic CSV export is enabled, false if not. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.AutoCsvExportSettings.IsSilentlyLoggingExceptions">
             <summary>
             Gets or sets a value indicating whether this object is silently logging exceptions on calls
             to AutoCsvExport or whether they are (after logging) thrown again.
             </summary>
            
             <value> true if this object is silently logging exceptions, false if not. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.AutoCsvExportSettings.AutoCsvExportPath">
             <summary>   Gets or sets the full pathname for any CSV export file that will be created in the future. </summary>
            
             <value> The full pathname of the automatic CSV export file. </value>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings">
            <summary>
            Holds all settings that configure a CSV export. There is an according user control available
            that binds to this class in Asf.UI.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings.SeparatorChar">
             <summary>   Gets or sets the separator character. </summary>
            
             <value> The separator character. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings.IsWritingMetaData">
             <summary>
             Gets or sets a value indicating whether meta data is written at the top of any CSV file
             </summary>
            
             <value> true if this object is writing a meta data header, false if not. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings.IsWritingColumnHeaders">
             <summary>
             Gets or sets a value indicating whether column headers are written at the top of the actual data
             </summary>
            
             <value> true if this object is writing column headers, false if not. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings.IsUsingNeutralFormat">
             <summary>
             Gets or sets a value indicating whether this object is using neutral formatting schemes for
             numbers or the locale settings. This mostly affects the decimal delimiter.
             </summary>
            
             <value> true if this object is using neutral format, false if not. </value>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.ViewModels.PlotSourceViewModel">
            <summary>
            A ViewModel for the storage and selection of plot data using properties to define what data
            to use from the source. The source is a Collector stored and managed somewhere up the hierarchy
            in a wrapping or derived ViewModel so that it can be shared among plots.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.ViewModels.PlotSourceViewModel.#ctor(Keysight.Aes.Asf.DataCollections.Collector{System.Object})">
            <summary>   Default constructor. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PlotSourceViewModel.PlotIndex">
            <summary>   Gets or sets the name of the collector's column holding the X data. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PlotSourceViewModel.PlotColumns">
            <summary>   Gets or sets the collector's plot columns names of all graphs to plot from the Collector. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PlotSourceViewModel.PlotLegends">
            <summary>   Gets or sets the plot legends for the visible plots. This automatically updates when the PlotColumns are set. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PlotSourceViewModel.HasDisplayContent">
            <summary>
            This is true if any columns are set to display, otherwise false
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PlotSourceViewModel.SharedSource">
            <summary>   Gets or sets the shared data source. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.ViewModels.PanZoomViewModel">
            <summary>
            A ViewModel for to shared normalized pan and zoom values across plots. You can for example
            use this to sync two plots that are overlayed but use individual Y axis or to sync individual
            plots that share the X axis and the zoom settings etc.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PanZoomViewModel.IsLockedVertically">
             <summary>
             Limits the zoom and pan operation to the horizontal axis only while the vertical axis
             is locked at zero zoom and pan.
             </summary>
            
             <value> true if this object is horizontal only, false if not. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PanZoomViewModel.HZoomScale">
            <summary>   Gets or sets the horizontal zoom scale. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PanZoomViewModel.VZoomScale">
            <summary>   Gets or sets the vertical zoom scale. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PanZoomViewModel.HPanScale">
            <summary>   Gets or sets the horizontal pan scale. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PanZoomViewModel.VPanScale">
            <summary>   Gets or sets the vertical pan scale. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PanZoomViewModel.ZoomInCommand">
            <summary>   Zooms in by a fixed ratio. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PanZoomViewModel.ZoomOutCommand">
            <summary>   Zooms out by a fixed ratio. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PanZoomViewModel.ZoomResetCommand">
            <summary>   Resets the zoom to zero. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PanZoomViewModel.IsZoomAnimated">
            <summary>   Gets or sets a value indicating whether the zoom commands will animate the actual zoom change. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PanZoomViewModel.ZoomTotalAnimationTime">
            <summary>   Gets or sets the zoom total animation time. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PanZoomViewModel.ZoomAnimationInterval">
            <summary>   Gets or sets the zoom animation interval time. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PanZoomViewModel.ZoomIncrement">
            <summary>   Gets or sets the zoom increment for one call to the ZoomIn or ZoomOut command. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.ViewModels.PlotDataViewModel">
            <summary>   A ViewModel that allows to share one Collector data source among multiple PlotSourceViewModels. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PlotDataViewModel.PlotSourceVMs">
            <summary>   Gets or sets the PlotSourceViewModels. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.ViewModels.PlotDataViewModel.#ctor(System.Int32)">
             <summary>   Constructor. </summary>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            
             <param name="count">    Number of individual PlotSourceViewModels to create. This corresponds
                                     to the number of individual plots you want to derive from the common data
                                     source. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.ViewModels.PlotDataViewModel.#ctor(System.Int32,Keysight.Aes.Asf.DataCollections.Collector{System.Object})">
             <summary>   Constructor. </summary>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            
             <param name="count">        Number of individual PlotSourceViewModels to create. This
                                         corresponds to the number of individual plots you want to derive
                                         from the common data source. </param>
             <param name="sharedData"> The shared data source. </param>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PlotDataViewModel.SharedData">
            <summary>   Gets or sets the Collector holding the plot data. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.ViewModels.PlotDataViewModel.SharedIndex">
            <summary>   Gets or sets the name of the collector's column holding the X data. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.AutoPropertyChanged">
            <summary>
            A simple base class to provide automatic OnPropertyChanged calls by settings fields and
            without having to use string literals for the individual properties.
            </summary>
            <example>
            Usage within your derived class:
            <code>
            private int _myProperty;
            public int MyProperty
            {
                 get { return _myProperty; }
                 set { SetField(ref _myProperty, value); }
            }
            </code>
            </example>
        </member>
        <member name="E:Keysight.Aes.Asf.MVVM.AutoPropertyChanged.PropertyChanged">
            <summary>   Occurs when a property value changes. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.AutoPropertyChanged.OnPropertyChanged(System.String)">
             <summary>   Executes the property changed action. </summary>
            
             <param name="propertyName"> Name of the property. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.AutoPropertyChanged.SetField``1(``0@,``0,System.String)">
             <summary>   Sets a field. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="field">        [in,out] The field. </param>
             <param name="value">        The value. </param>
             <param name="propertyName"> Name of the property. Not necessary when called from within the property's setter function. </param>
            
             <returns>   true if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.AutoPropertyChanged.SetProperty(System.String,System.Object)">
             <summary>
             Generically sets a property by name. There is no type checking or similar involved, so the
             according exceptions may come flying your way.
             </summary>
            
             <param name="propertyName"> Name of the property. </param>
             <param name="value">        The value to set the property to. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.AutoPropertyChanged.GetProperty(System.String)">
             <summary>   Generically gets a property value. </summary>
            
             <param name="propertyName"> Name of the property. </param>
            
             <returns>   The value of the property. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.BindingProxy">
            <summary>   A binding proxy allows you to indirectly bind the Source of a Binding to a Dynamic Resource. </summary>
            <example>
            Declare the proxy in your resources, using your DynamicResource as Data.
            <code>
                &lt;UserControl.Resources&gt;
                   &lt;asf:BindingProxy x:Key=&quot;BackgroundProxy&quot; Data=&quot;{DynamicResource MyDynamicBackgroundResource}&quot;/&gt;
               &lt;/UserControl.Resources&gt;
            </code>
            You can then assign your Proxy to the Source of a Binding
            <code>
                &lt;Setter Property=&quot;Background&quot; Value=&quot;{Binding Source={StaticResource BackgroundProxy}, Path=Data, Converter={StaticResource OpacityConverter}}&quot;/&gt;
            </code>
            </example>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.BindingProxy.CreateInstanceCore">
             <summary>
             When implemented in a derived class, creates a new instance of the
             <see cref="T:System.Windows.Freezable" /> derived class.
             </summary>
            
             <returns>   The new instance. </returns>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.BindingProxy.Data">
             <summary>   Gets or sets the data which can be a dynamic resource. </summary>
            
             <value> The data. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.MVVM.BindingProxy.DataProperty">
            <summary>   The data property. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.CommandHandler">
             <summary>   A helper class for commands that do not change their executable state. </summary>
             <example>
             Example usage to expose a "ExecuteCommand" from within the ViewModel.
             <code>
                private ICommand _executeCommand;
            
                public ICommand ExecuteCommand
                {
                    get { return _executeCommand ?? (_executeCommand = new CommandHandler(() => Execute(), true)); }
                }
                
                private void Execute()
                {
                    /// Put the actual code to execute here
                }
                
                private void ChangeAvailability()
                {
                    /// You can use the following property to announce a change in command availability:
                    
                    ExecuteCommand.CanExecuteState = false;
                }
            
             </code>
             </example>
        </member>
        <member name="P:Keysight.Aes.Asf.MVVM.CommandHandler.CanExecuteState">
             <summary>   Gets or sets a value indicating whether the command can execute. </summary>
            
             <value> true if we can execute state, false if not. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.CommandHandler.#ctor(System.Action)">
             <summary>   Constructor for a command that is available by default. </summary>
            
             <param name="action">   The action to perform. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.CommandHandler.#ctor(System.Action,System.Boolean)">
             <summary>   Constructor for a command with selectable default availability. </summary>
            
             <param name="action">       The action to perform. </param>
             <param name="canExecute">   true if the command is available. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.CommandHandler.CanExecute(System.Object)">
             <summary>
             Defines the method that determines whether the command can execute in its current state.
             </summary>
            
             <param name="parameter">    Data used by the command.  If the command does not require data
                                         to be passed, this object can be set to null. </param>
            
             <returns>   true if this command can be executed; otherwise, false. </returns>
        </member>
        <member name="E:Keysight.Aes.Asf.MVVM.CommandHandler.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.CommandHandler.Execute(System.Object)">
             <summary>   Defines the method to be called when the command is invoked. </summary>
            
             <param name="parameter">    Data used by the command.  If the command does not require data
                                         to be passed, this object can be set to null. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.RelayCommand`1">
             <summary>   The MVVM default RelayCommand implementation that wraps command methods that take one parameter. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.RelayCommand`1.#ctor(System.Action{`0})">
            <summary>
            Creates a new command.
            </summary>
            <param name="execute">Delegate to execute when Execute is called on the command.  This can be null to just hook up a CanExecute delegate.</param>
            <remarks><seealso cref="M:Keysight.Aes.Asf.MVVM.RelayCommand`1.CanExecute(System.Object)"/> will always return true.</remarks>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.RelayCommand`1.#ctor(System.Action{`0},System.Predicate{`0})">
            <summary>
            Creates a new command.
            </summary>
            <param name="execute">The execution logic.</param>
            <param name="canExecute">The execution status logic.</param>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.RelayCommand`1.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="E:Keysight.Aes.Asf.MVVM.RelayCommand`1.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.RelayCommand`1.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to <see langword="null" />.</param>
        </member>
        <member name="T:Keysight.Aes.Asf.MVVM.VisualTreeUtil">
            <summary>   Utility functions for the visual tree. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.VisualTreeUtil.GetVisualParent``1(System.Windows.DependencyObject)">
             <summary>
             Iterates up the visual tree of an element until it finds a parent object of the given type.
             You can also use this on a HitTest result, since this will return individual elements when you may
             want to get the containing user control.
             </summary>
             <example>
             Here, a UserControl called DataConnector is wanted, contained in other UserControls within a Canvas
             </example>
             <code>
                 HitTestResult result = VisualTreeHelper.HitTest(WhiteboardArea, point);
                 DataConnector connector = VisualTreeUtil.GetVisualParent&lt;DataConnector&gt;(result.VisualHit);
             </code>
            
             <typeparam name="T">    A DependencyObject type. </typeparam>
             <param name="element">  The element from which to start the upwards search. </param>
            
             <returns>   The visual control of the requested type or null. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.VisualTreeUtil.GetDataContextParent``1(System.Windows.DependencyObject)">
             <summary>
             Iterates up the visual tree of an element until it finds a parent object that has a
             DataContext of the given type. You can also use this on a HitTest result, since this will
             return individual elements when you may want to get the containing user control.
             </summary>
            
             <typeparam name="T">    The type of the required DataContext. </typeparam>
             <param name="element">  The element from which to start the upwards search. </param>
            
             <returns>   The visual control holding a DataContext of the requested type or null. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.VisualTreeUtil.HitTest``1(System.Windows.Media.Visual,System.Windows.Point)">
             <summary>
             Determines if the item that has been hit is of a particular type or is contained (at any
             hierarchy level) within a parent object of that type.
             </summary>
            
             <typeparam name="T">    A DependencyObject type. </typeparam>
             <param name="reference">    The HitTest reference. </param>
             <param name="p">            The Point to process. </param>
            
             <returns>   The visual control of the requested type or null. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.VisualTreeUtil.FindVisualChildByName``1(System.Windows.DependencyObject,System.String)">
             <summary>   Searches for the first visual child by name. </summary>
            
             <typeparam name="T">    A DependencyObject type. </typeparam>
             <param name="parent">   The parent. </param>
             <param name="name">     The name. </param>
            
             <returns>   The found visual child by name. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.MVVM.VisualTreeUtil.FindVisualChildren``1(System.Windows.DependencyObject)">
             <summary>   Finds all the visual children of a particular type in this control. </summary>
            
             <typeparam name="T">    A DependencyObject type. </typeparam>
             <param name="parent">   The parent. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process the visual childrens in this
             collection.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Network.TcpTransceiver">
            <summary>   A class for transceiving and receiving data over a TCP/IP connection. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Network.TcpTransceiver.IpAddress">
             <summary>   Gets or sets the IP address. </summary>
            
             <value> The destination IP address. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Network.TcpTransceiver.Port">
             <summary>   Gets or sets the port. </summary>
            
             <value> The destination port. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Network.TcpTransceiver.TimedOut">
             <summary>   Gets or sets a value indicating whether the communication timed out. </summary>
            
             <value> true if communication timed out, false if not. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.TcpTransceiver.#ctor(System.Net.IPAddress,System.Int32)">
             <summary>   Constructor. </summary>
            
             <param name="ipAddress">    The destination IP address. </param>
             <param name="port">         The destination port. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.TcpTransceiver.#ctor(System.String,System.Int32)">
             <summary>   Constructor. </summary>
            
             <param name="ipAddress">    The destination IP address. </param>
             <param name="port">         The destination port. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.TcpTransceiver.Send(System.Byte[],System.Boolean)">
             <summary>   Send data via TCP/IP. </summary>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            
             <param name="message">          The message. </param>
             <param name="autoReconnect">    (Optional) true to automatically reconnect if a SocketException occurrs during the initial send attempt. </param>
        </member>
        <member name="F:Keysight.Aes.Asf.Network.TcpTransceiver.ReceiveInjection">
            <summary>   These function hooks allow a test to inject the necessary methods. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Network.TcpTransceiver.AvailableInjection">
            <summary>   The available injection. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.TcpTransceiver.Receive(System.Int32,System.Int32,System.Byte[])">
             <summary>   Receives data via TCP/IP. If a byteCount or delimiter is entered, the function returns if either of the criteria is met </summary>
            
             <param name="timeoutMs">    The timeout in milliseconds. </param>
             <param name="byteCount">    (Optional) number of bytes to receive. </param>
             <param name="delimiter">    (Optional) the delimiter to which data is received. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="P:Keysight.Aes.Asf.Network.TcpTransceiver.AvailableBytes">
             <summary>   Gets the available bytes. </summary>
            
             <value> The available bytes. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.TcpTransceiver.Connect">
            <summary>
            Connects the TCP socket. If the socket is already connected, it will be disconnected first
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.TcpTransceiver.Disconnect">
             <summary>
             Disconnects the TCP socket
             </summary>
            
             <exception cref="T:System.Net.Sockets.SocketException">  Thrown when a Socket error condition occurs. </exception>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.TcpTransceiver.Dispose">
            <summary>
            Disconnects the TCP socket
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Network.BTP.BtpConnection">
            <summary>
            The Block Transfer Protocol sends and receives complete blocks of binary data by simply
            adding a size information upfront. This allows you to send deterministic data junks across a
            TCP connection without worrying about packets being split up on the network. The 32 unsigned
            integer size information is transferred as a 4 byte little endian value.
            </summary>
            <example>
            See Keysight.Aes.Asf.IntegrationTests for a usage example
            </example>
        </member>
        <member name="F:Keysight.Aes.Asf.Network.BTP.BtpConnection.C_BTP_PORT">
            <summary>   The default BTP port. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Network.BTP.BtpConnection.C_LENGTH_INFO_SIZE">
            <summary>
            The number of bytes that is used to send the size of the actual data packet.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Network.BTP.BtpConnection.ReceiveProgressEvent">
            <summary>   The receive progress event. Occurs every time new data is received upon a call to Receive(). </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Network.BTP.BtpConnection.SendProgressEvent">
            <summary>   The send progress event. Occurs every time data was handed over to the TCP/IP stack upon a call to Send(). </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Network.BTP.BtpConnection._connection">
            <summary>   The base connection. For a client, this is the connection to the server. For a server, this is the listen socket. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Network.BTP.BtpConnection.Connection">
             <summary>   Gets the connection information. </summary>
            
             <value> The connection information. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.BTP.BtpConnection.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.BTP.BtpConnection.#ctor(System.Net.Sockets.Socket)">
             <summary>   Constructor for an existing socket. </summary>
            
             <param name="connection">   The base connection. For a client, this is the connection to the
                                         server. For a server, this is the listen socket. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.BTP.BtpConnection.Connect(System.Net.IPAddress,System.Int32)">
             <summary>   Connects to a peer. </summary>
            
             <exception cref="T:System.InvalidOperationException">    Thrown when this class instance already has
                                                             (or had) a connection established. BtpConnection
                                                             instances are not reusable. </exception>
            
             <param name="address">  The remote address. </param>
             <param name="port">     The remote port (defaults to the BTP port). </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.BTP.BtpConnection.Disconnect">
            <summary>   Disconnects from the peer. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.BTP.BtpConnection.Send(System.Byte[])">
             <summary>   Send one packet. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when the data is null or of size 0. </exception>
            
             <param name="data"> The data to send. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.BTP.BtpConnection.SendBytes(System.Byte[])">
             <summary>   Sends all the bytes, calling the socket's Send method as many times as neccessary. </summary>
            
             <param name="data"> The data to send. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.BTP.BtpConnection.Receive(System.Net.Sockets.Socket)">
             <summary>   Receives one packet. If the remote connection is closed meanwhile, an exception will be thrown. </summary>
            
             <param name="recvSocket">   The receive socket. If null, the class instance socket will be
                                         used. For a server, you need to pass in the socket you got handed
                                         over on the NewConnectionAvailable() event. </param>
            
             <returns>   A byte[] array containing exactly one packet. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.BTP.BtpConnection.ReceiveBytes(System.Int32,System.Net.Sockets.Socket)">
             <summary>   Receives the requested amount of bytes. </summary>
            
             <param name="size">         The size. </param>
             <param name="recvSocket">   The receive socket. If null, the class instance socket will be
                                         used. For a server, you need to pass in the socket you got handed
                                         over on the NewConnectionAvailable() event. </param>
            
             <returns>   A byte[] array containing exactly one packet. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.BTP.BtpConnection.LengthToBuffer(System.UInt32)">
             <summary>   Returns a buffer with the encoded length information for a packet. </summary>
            
             <param name="lenghtInfo">   The length of the packet to transmit. </param>
            
             <returns>   An array of bytes. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.BTP.BtpConnection.LengthFromBuffer(System.Byte[])">
             <summary>   Decodes the length information from a buffer. </summary>
            
             <param name="sizeBuffer">   The received length data. </param>
            
             <returns>   The length information. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Network.BTP.BtpEventArgs">
            <summary>   Additional information for btp events. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Network.BTP.BtpEventArgs.ByteCountToTransmit">
            <summary>   The total byte count to send or receive. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Network.BTP.BtpEventArgs.ByteCountTransmitted">
            <summary>   The total byte count of already sent or received bytes. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.BTP.BtpEventArgs.#ctor(System.Int32,System.Int32)">
             <summary>   Constructor. </summary>
            
             <param name="toTransmit">   total bytes to transmit. </param>
             <param name="transmitted">  total bytes already transmitted. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Network.BTP.BtpServer">
            <summary>   A server implementing the block transfer protocol. </summary>
        </member>
        <member name="E:Keysight.Aes.Asf.Network.BTP.BtpServer.NewConnectionAvailable">
             <summary>
             This event fires whenever a new client connects to the server. Note that you need to return
             from the event, so you have to create a thread for any permanent client handling.
             </summary>
            <example>
             This code shows an example from the solution service that accepts a connection and
             handles it in a separate thread.
            <code>
            private void OnConnectionAvailable(object sender, BtpConnection connection)
             {
            	Thread thread = new Thread(new ParameterizedThreadStart(ProcessClientConnection));
                    thread.Start(connection);
             }
            
                private void ProcessClientConnection(object btpConnection)
                {
                    BtpConnection connection = btpConnection as BtpConnection;
                    if (connection == null)
                    {
                        ApplicationServices.LogError(&quot; Client connection must be a BtpConnection, not &lt; &quot; +btpConnection.GetType().ToString() + &quot; &gt; &quot;);
                        return;
                    }
            
                    string remoteEndPoint = (connection.Connection.RemoteEndPoint is IPEndPoint) ?
                        ((IPEndPoint)connection.Connection.RemoteEndPoint).Address.ToString()
                        :
                        connection.Connection.RemoteEndPoint.GetType().ToString();
            
                    ApplicationServices.LogInfo(&quot; Client connected from &quot; +remoteEndPoint);
            
                    bool stateOk = true;
            
                    do
                    {
                        try
                        {
                            byte[] packet = connection.Receive();
            
                            ServiceRequest request = Serializer.FromBytes &lt; ServiceRequest &gt; (packet);
                            if (request.Version &gt; ServiceRequest.C_VERSION)
            				ApplicationServices.LogWarn(&quot; Local protocol version is &quot; +ServiceRequest.C_VERSION + &quot;, client is &quot; +request.Version);
            
                            DispatchRequest(connection, request);
                        }
                        catch (Exception ex)
                        {
                            ApplicationServices.LogEx(&quot; Receive &quot;, ex, includeStackTrace: false);
                            connection.Connection?.Close();
                            connection.Connection?.Dispose();
                            stateOk = false;
                        }
                    } while (stateOk);
            
                    ApplicationServices.LogInfo(&quot; Closed Connection from &quot; +remoteEndPoint);
                }</code>
            </example>
        </member>
        <member name="E:Keysight.Aes.Asf.Network.BTP.BtpServer.NewExceptionAvailable">
            <summary>   The event fires when an exception occurred during an asynchronous event. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.BTP.BtpServer.#ctor(System.Int32,System.Int32)">
             <summary>   Constructor with optional port number. </summary>
            
             <param name="port">     (Optional) The port (defaults to the BTP Port). Set to 0 to have the
                                     OS assign any available port number. </param>
             <param name="backlog">  (Optional) The maximum number of incoming connections to listen for, simultaneously. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Network.NetHelper">
            <summary>   Contains various helper methods to assist in using a Socket. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.NetHelper.IsConnected(System.Net.Sockets.Socket)">
             <summary>   Query if a TCP socket is still connected to it's peer. </summary>
            
             <param name="sock">   The socket to test. </param>
            
             <returns>   true if connected, false if not. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Network.Telnet.TelnetHelper">
            <summary>   The telnet helper class can be used for automated browsing and configuration of telnet menus.
            It was originally created to configure the BUS parameters for serial device servers. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Network.Telnet.TelnetHelper.IpAddress">
             <summary>   The IP Address of the remote telnet server. </summary>
            
             <value> The IP address in the format a.b.c.d. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Network.Telnet.TelnetHelper.Port">
             <summary>   The port that is used for telnet by the remote server. </summary>
            
             <value> The telnet port. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Network.Telnet.TelnetHelper.TimeoutMs">
             <summary>   The timeout to wait for a response by the server. </summary>
            
             <value> The timeout in milliseconds. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.Network.Telnet.TelnetHelper.DefaultTelnetPort">
            <summary>   The default telnet port. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Network.Telnet.TelnetHelper.DefaultTimeoutMs">
            <summary>   The default timeout in milliseconds. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.Telnet.TelnetHelper.#ctor(System.String,System.Int32,System.Int32)">
             <summary>   Constructor. </summary>
            
             <param name="ipAddress">    The IP address in the format a.b.c.d. </param>
             <param name="telnetPort">   (Optional) the telnet port in case it varies from the default telnet port 23. </param>
             <param name="timeoutMs">    (Optional) The timeout in milliseconds. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.Telnet.TelnetHelper.NavigateToSubMenu(System.String,System.String)">
             <summary>
             Navigate to sub menu by entering an inputtext and confirming the following sub menu text. Note: All strings are converted to ASCII before sending. Also CR and LF are appended to the input.
             </summary>
            
             <param name="inputText">        The input text that is entered for navigation. </param>
             <param name="verificationText"> The response to the inputText by the telnet server must
                                             contain this text. If it is set to null, no verification is performed. </param>
            
             <returns>   Returns true, if the response to the inputText contains the verificationText or if the verificationText was null. Else it returns false. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.Telnet.TelnetHelper.SendInput(System.String)">
             <summary>   Sends an input text as ASCII to the remote telnet server. CR and LF are appended to the input message. </summary>
            
             <param name="input">    The input text. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.Telnet.TelnetHelper.SendRawInput(System.Byte[])">
             <summary>   Sends a raw byte input to the remote telnet server. The bytes are sent as is. </summary>
            
             <param name="inputRaw"> The intput bytes. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.Telnet.TelnetHelper.ReceiveText">
             <summary>   Receive text from the remote telnet server. </summary>
            
             <returns>   The text received. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Network.Telnet.TelnetHelper.Dispose">
            <summary>
            Closes the TCP connection to the remote telnet server.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Reflection.AssemblyHelper">
            <summary>   Contains various methods to gather informations about an assembly. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.AssemblyHelper.IsManagedAssembly(System.String)">
             <summary>   Query if 'fileName' is a managed assembly. </summary>
            
             <param name="fileName"> Filename of the file. </param>
            
             <returns>   true if it is a managed assembly, false if not. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Reflection.CopyExtension">
            <summary>
            This code is taken from https://github.com/Burtsev-Alexey/net-object-deep-copy and is
            published under MIT license.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.CopyExtension.IsPrimitive(System.Type)">
             <summary>   A Type extension method that query if 'type' is a primitive. </summary>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   true if primitive, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.CopyExtension.Copy(System.Object)">
             <summary>   Performs a deep copy of the given originalObject. </summary>
            
             <param name="originalObject">   The originalObject to act on. </param>
            
             <returns>   An Object. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.CopyExtension.Copy``1(``0)">
             <summary>   Performs a deep copy of the given originalObject. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="original"> The original to act on. </param>
            
             <returns>   An Object. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Reflection.ReferenceEqualityComparer">
            <summary>   A reference equality comparer. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.ReferenceEqualityComparer.Equals(System.Object,System.Object)">
             <summary>
             When overridden in a derived class, determines whether two objects of type
             <paramref name="T" /> are equal.
             </summary>
            
             <param name="x">    The first object to compare. </param>
             <param name="y">    The second object to compare. </param>
            
             <returns>   true if the specified objects are equal; otherwise, false. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.ReferenceEqualityComparer.GetHashCode(System.Object)">
             <summary>
             When overridden in a derived class, serves as a hash function for the specified object for
             hashing algorithms and data structures, such as a hash table.
             </summary>
            
             <param name="obj">  The object for which to get a hash code. </param>
            
             <returns>   A hash code for the specified object. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Reflection.ArrayExtensions">
            <summary>   Contains array extension methods. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.ArrayExtensions.ForEach(System.Array,System.Action{System.Array,System.Int32[]})">
             <summary>
             An Array extension method that applies an operation to all items in this collection.
             </summary>
            
             <param name="array">    The array to act on. </param>
             <param name="action">   The action. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Reflection.AttributeHelper">
            <summary>   Contains various reflection based methods to help with attribute operations. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Reflection.AttributeHelper.C_NULL_TEXT">
            <summary>   The default text that is used when converting null objects to string. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.AttributeHelper.GetDescription(System.Reflection.MemberInfo)">
             <summary>   Gets the member description if a DescriptionAttribute is attached. </summary>
            
             <param name="memberInfo">   Information describing the member. </param>
            
             <returns>   The member description or null if no attribute is attached. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.AttributeHelper.GetDisplayName(System.Reflection.MemberInfo)">
             <summary>   Gets the member display name if a DisplayNameAttribute is attached. </summary>
            
             <param name="memberInfo">   Information describing the member. </param>
            
             <returns>   The member display name or null if no attribute is attached. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.AttributeHelper.GetScreenName(System.Type,System.String)">
             <summary>
             Gets the member's screen name which is either the DisplayName if an attribute is attached or
             the member's name itself.
             </summary>
            
             <param name="classType">    Type of the class that holds the property to get the information for. </param>
             <param name="propertyName"> Name of the property. </param>
            
             <returns>   The member display name or null if no attribute is attached. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.AttributeHelper.GetScreenName(System.Reflection.MemberInfo)">
             <summary>
             Gets the member's screen name which is either the DisplayName if an attribute is attached or
             the member's name itself.
             </summary>
            
             <param name="memberInfo"> Information describing the member. </param>
            
             <returns>   The member screen name. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.AttributeHelper.GetCategory(System.Reflection.MemberInfo)">
             <summary>   Gets the category of the member or null if the attribute is not present. </summary>
            
             <param name="memberInfo">   Information describing the member. </param>
            
             <returns>   The category. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.AttributeHelper.GetIsCollapsedCategory(System.Reflection.MemberInfo)">
             <summary>   Gets the category of the member or null if the attribute is not present. </summary>
            
             <param name="memberInfo">   Information describing the member. </param>
            
             <returns>   The category. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.AttributeHelper.IsBrowsable(System.Reflection.MemberInfo)">
             <summary>
             If the member has a BrowsableAttribute attached which is set to false, false is returned.
             In any other case, true is returned.
             </summary>
            
             <param name="memberInfo"> Information describing the member. </param>
            
             <returns>   true if the member is browsable, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.AttributeHelper.GetAttribute``1(System.Type,System.Boolean)">
             <summary>   Gets the first attribute from a type. </summary>
            
             <typeparam name="T">    Type of the attribute to look for. </typeparam>
             <param name="attributedType">   Type to look at. </param>
             <param name="searchInherited">  true to search the inheritance chain. </param>
            
             <returns>   The (first) attribute or null if nothing is found. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.AttributeHelper.GetAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
             <summary>   Gets the first attribute from a MemberInfo. </summary>
            
             <typeparam name="T">    Type of the attribute to look for. </typeparam>
             <param name="memberInfo">       Information describing the member. </param>
             <param name="searchInherited">  true to search the inheritance chain. </param>
            
             <returns>   The (first) attribute or null if nothing is found. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.AttributeHelper.ObjectToString(System.Object,System.String)">
             <summary>
             Calls the regular .NET ToString() method unless the object is an enum entry, in which case a
             description attribute is preferred.
             For a null object, the nullText will be returned (which defaults to C_NULL_TEXT)
             </summary>
            
             <param name="value">    The value. </param>
             <param name="nullText"> The null text. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Reflection.EnumHelper">
            <summary>   Contains various reflection based methods to help with enum operations </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.EnumHelper.GetScreenNames(System.Type)">
             <summary>
             Gets all entries of an enum either by their value name or by their DisplayName if such an
             attribute is attached. Will omitt entries that have a Browsable(false) attribute attached.
             </summary>
            
             <param name="enumType"> Type of the enum. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process the enum entries in this collection.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.EnumHelper.GetValuesAndScreenNames(System.Type)">
             <summary>   Gets the values and screen names of the browsable enum entries so that they can be used in conjunction with the EnumToCollectionConverter from the MVVM tools. </summary>
            
             <param name="enumType"> Type of the enum. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process the values and screen names in this
             collection.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.EnumHelper.GetAllScreenNames(System.Type)">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets all screen names in this collection. </summary>
            
             <param name="enumType"> Type of the enum. </param>
            
             <returns>
                 A list of all Enum Screen Names
             </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.EnumHelper.GetValuesAndDescriptions(System.Type)">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets values and descriptions of an Enum. </summary>
            
             <param name="enumType"> Type of the enum. </param>
            
             <returns>   An array of object. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.EnumHelper.GetDescription(System.Enum)">
            -------------------------------------------------------------------------------------------------
             <summary>   An Enum extension method that gets a description. </summary>
            
             <param name="value">    The value to act on. </param>
            
             <returns>   The description. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.EnumHelper.GetName(System.Type,System.Object)">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets a name. </summary>
            
             <param name="enumType"> Type of the enum. </param>
             <param name="value">    The value to act on. </param>
            
             <returns>   The name. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Reflection.MethodHelper">
            <summary>   Contains various helper methods to assist with analyzing method related class properties. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.MethodHelper.IsOverridden(System.Type,System.String)">
             <summary>   Query if a method is overridden in a derived type. </summary>
             <example>
             Typically, you would use nameof() to identify the method
             <code>
             bool isOverridden = ASF.Reflection.Methods.IsOverridden(typeof(MyDerivedClass), nameof(myClass.MyVirtualMethod));
             </code>
             </example>
            
             <param name="derivedType">  Type of the derived class. </param>
             <param name="methodName">   Name of the method. </param>
            
             <returns>   true if overridden, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.MethodHelper.GetTemplatedInvoker(System.Type,System.Type,System.String,System.Reflection.BindingFlags,System.Type[])">
             <summary>
             Gets a templated factory. Use this to get an invokable reference to a templated method when
             you only have a dynamic type at runtime.
             </summary>
            
             <param name="classType">            Type of the class that holds the method to invoke. </param>
             <param name="templateType">         Type for the template. </param>
             <param name="methodName">           Name of the method. </param>
             <param name="bindingAttr">          The binding attribute. </param>
             <param name="callingParameters">    If there are various implementations of the method, you may specify the parameter types it takes. </param>
            
             <returns>   The templated factory. </returns>
            
             <example>
             If the class MyClass has a method int MyMethod&gt;T&lt;(int a, int b) then you can call it
             for a dynamicType known at runtime like so:
             <code>
                 MethodInfo factory = GetTemplatedFactory(typeof(MyClass), dynamicType, nameof(MyClass.MyMethod));
                 int argument1 = 1, argument2 = 2;
                 int result = (int)factory.Invoke(myClassInstance, new object[] { argument1, argument2 });
             </code>
             </example>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.MethodHelper.GetTemplatedInvoker(System.Type,System.Type[],System.String,System.Reflection.BindingFlags,System.Type[])">
             <summary>
             Gets a templated factory. Use this to get an invokable reference to a templated method when
             you only have the dynamic types at runtime.
             </summary>
            
             <param name="classType">            Type of the class that holds the method to invoke. </param>
             <param name="templateTypes">        All Types for the template. </param>
             <param name="methodName">           Name of the method. </param>
             <param name="bindingAttr">          The binding attribute. </param>
             <param name="callingParameters">    If there are various implementations of the method, you may specify the parameter types it takes. </param>
            
             <returns>   The templated factory. </returns>
            
             <example>
             If the class MyClass has a method int MyMethod&gt;T&lt;(int a, int b) then you can call it
             for a dynamicType known at runtime like so:
             <code>
                 MethodInfo factory = GetTemplatedFactory(typeof(MyClass), dynamicType, nameof(MyClass.MyMethod));
                 int argument1 = 1, argument2 = 2;
                 int result = (int)factory.Invoke(myClassInstance, new object[] { argument1, argument2 });
             </code>
             </example>
        </member>
        <member name="T:Keysight.Aes.Asf.Reflection.IgnoreOnCompareAttribute">
            <summary>   Attribute to ignore a property on compare. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Reflection.Comparer">
            <summary>   Allows for the generic comparison of all public properties in individual class instances. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Reflection.Comparer.C_ARE_EQUAL">
            <summary>   The value returned by a comparison function in case the first operand equals the second. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Reflection.Comparer.C_ARE_NOT_EQUAL">
            <summary>   The value returned by a comparison function in case the first operand differs from the second. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.Comparer.CompareProperties``1(``0,``0)">
             <summary>
             Compares the public properties of two class instances. If a property type implements the
             IComparable interface, it is used and for uneven values, the result of the comparer is
             returned.
             </summary>
            
             <typeparam name="T">    Generic type parameter, must be a class. </typeparam>
             <param name="classA">   The first class instance. </param>
             <param name="classB">   The second class instance. </param>
            
             <returns>
             C_ARE_EQUAL if all properties are equal or both class references are null
             C_ARE_NOT_EQUAL if one class is null while the other is not
             C_ARE_NOT_EQUAL if a property is encountered that differs between A and B and does not implement IComparable
             Otherwise the IComparable.Compare() result for the first non matching pair of properties
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.Comparer.Compare(System.Object,System.Object)">
             <summary>   Compares two objects. </summary>
            
             <param name="obA">          Object to be compared. </param>
             <param name="obB">          Object to be compared. </param>
            
             <returns>
             C_ARE_EQUAL if both objects are null C_ARE_NOT_EQUAL if the objects are of different types or
             one is null while the other is not C_ARE_NOT_EQUAL if the type does not implement IComparable
             and the objects are considered not equal by the equality operator ("==")
             Otherwise the result of the IComparable implementation.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Reflection.PropertyHelper">
            <summary>   Contains various reflection based methods to help with property operations. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.GetPropertyInfo(System.Type,System.String)">
             <summary>
             Gets the MemberInfo for a particular property. Null is returned if the property does
             not exist.
             </summary>
            
             <param name="classType">    Type of the class. </param>
             <param name="propertyName"> Name of the property. </param>
            
             <returns>   The property information or null if it does not exist. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.GetPropertyValue(System.Object,System.String)">
             <summary>
             Gets the value of a property known by name. Null is returned if either the property does not
             exist or its value is actually null. To distinguish between these cases, you can use Exists().
             </summary>
            
             <param name="classInstance">    The class instance. </param>
             <param name="propertyName">     Name of the property. </param>
            
             <returns>   The property value or null if the property does not exist. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.Exists(System.Object,System.String)">
             <summary>   Determine if a property of a particular name exists within a class instance. </summary>
            
             <param name="classInstance">    The class instance. </param>
             <param name="propertyName">     Name of the property. </param>
            
             <returns>   true if the property exists. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.Exists(System.Type,System.String)">
             <summary>
             Determine if a property of a particular name exists within a class type.
             </summary>
            
             <param name="classType">    Type of the class. </param>
             <param name="propertyName"> Name of the property. </param>
            
             <returns>   true if the property exists. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.GetPropertiesWithout(System.Object,System.Type,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo})">
             <summary>
             Gets the public, instance member properties by name and value. Note that for every property
             of value null you will lose the type information. To avoid this, use the
             GetPropertiesAndTypes() method.
             </summary>
            
             <param name="classInstance">            The class instance. </param>
             <param name="unwantedAttributeType">    Type of the attribute that the properties must NOT be
                                                     marked with or null for all properties. </param>
             <param name="propertyInfos">            The property infos or null to make the method extract them itself. </param>
            
             <returns>   The properties. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.GetProperties(System.Object,System.Type,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo})">
             <summary>
             Gets the public, instance member properties by name and value. Note that for every property
             of value null you will lose the type information. To avoid this, use the
             GetPropertiesAndTypes() method.
             </summary>
            
             <param name="classInstance">    The class instance. </param>
             <param name="attributeType">    Type of the attribute that the properties must be marked with
                                             or null for all properties. </param>
             <param name="propertyInfos">    The property infos or null to make the method extract them
                                             itself. </param>
            
             <returns>   The properties. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.GetPropertyValues``1(System.Collections.Generic.IEnumerable{``0},System.Reflection.PropertyInfo)">
             <summary>
             Gets the values of a particular property of a range instances of a particular class type. So
             if you have a list of classes holding PropA, PropB and PropC, you can retrieve a list of all
             PropA values.
             </summary>
            
             <typeparam name="D">    Type of the class. </typeparam>
             <param name="dataClasses">  The data classes. </param>
             <param name="info">         The property information of the property value to retrieve. </param>
            
             <returns>   The property values. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.GetPropertiesAndTypes(System.Object,System.Type)">
             <summary>   Gets the public, instance member properties by name, type and value. </summary>
            
             <param name="classInstance">    The class instance. </param>
             <param name="attributeType">    Type of the attribute that the properties must be marked with
                                             or null for all properties. </param>
            
             <returns>   The properties with their types. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.GetPropertyInfosAndTypes(System.Object,System.Type)">
             <summary>   Gets the public, instance member properties by info, type and value. </summary>
            
             <param name="classInstance">    The class instance. </param>
             <param name="attributeType">    Type of the attribute that the properties must be marked with
                                             or null for all properties. </param>
            
             <returns>   The properties with their types. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.SetProperties(System.Object,System.Collections.Generic.Dictionary{System.String,System.Object},System.Type,System.Boolean)">
             <summary>
             Sets the properties in the class instance that match by name and type. Non present properties
             or non-matching types and non-writable properties are ignored. Optionally, only those
             properties marked with a certain attribute are considered.
             </summary>
            
             <param name="classInstance">    The class instance. </param>
             <param name="properties">       The properties. </param>
             <param name="attributeType">    Type of the attribute that the properties must be marked with
                                             or null to use all properties. </param>
             <param name="avoidAttribute">   true to set only those properties that do not feature the
                                             attribute. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.CopyMatchingProperties(System.Object,System.Object,System.Type,System.Boolean)">
             <summary>
             Copies the properties that match in name and type from a class of one type to a class of
             another type that may be the same or different from the source class.
             </summary>
            
             <param name="source">           The class instance to read the public properties from. </param>
             <param name="dest">             The class instance to set the public properties within. </param>
             <param name="attributeType">    Type of the attribute that the properties must be marked with
                                             or null for all properties. </param>
             <param name="avoidAttribute">   true to return only those properties that do not feature the
                                             attribute. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.CloneProperties(System.Object,System.Type,System.Boolean)">
             <summary>
             Clones a class by creating a new instance of the same type and copying the public properties.
             This will only provide a shallow copy, so reference type properties will point to the same instance.
             </summary>
            
             <param name="source">           The class instance to read the public properties from. </param>
             <param name="attributeType">    Type of the attribute that the properties must be marked with
                                             or null for all properties. </param>
             <param name="avoidAttribute">   true to return only those properties that do not feature the
                                             attribute. </param>
            
             <returns>   The clone. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.GetPropertyInfos(System.Object,System.Type,System.Boolean)">
             <summary>
             Gets the public, instance member property infos for a class instance. Optionally, only those
             properties marked with a certain attribute will be returned.
             </summary>
            
             <param name="classInstance">    The class instance. </param>
             <param name="attributeType">    Type of the attribute that the properties must (not) be marked
                                             with. </param>
             <param name="avoidAttribute">   true to return only those properties that do not feature the
                                             attribute. </param>
            
             <returns>   An array of property information. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.GetPropertyInfos(System.Type,System.Type,System.Boolean)">
             <summary>
             Gets the public, instance member property infos for a class type. Optionally, only those
             properties marked with a certain attribute will be returned.
             </summary>
            
             <param name="classType">        Type of the class. </param>
             <param name="attributeType">    Type of the attribute that the properties must (not) be marked
                                             with. </param>
             <param name="avoidAttribute">   true to return only those properties that do not feature the
                                             attribute. </param>
            
             <returns>   An array of property information. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.MakeSureIsClass(System.Type)">
             <summary>   Makes sure the type of the object is a class type. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when the type is a primitive. </exception>
            
             <param name="classType">    Type of the class. </param>
            
             <returns>   On success, the type of the class is returned. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.CopyProperties``1(``0,System.Type,System.Boolean)">
             <summary>
             Copies the public properties of the input class into a new instance of the same type.
             </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="classInstance">    The input class. </param>
             <param name="attributeType">    Type of the attribute that the properties must be marked with
                                             or null for all properties. </param>
             <param name="avoidAttribute">   true to return only those properties that do not feature the
                                             attribute. </param>
            
             <returns>
             A new instance of the same type as the passed in class instance with the public properties
             set to the same values.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.CopyProperties``1(``0,``0,System.Type,System.Boolean)">
             <summary>   Copies the public properties of the source class to the destination class. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="source">           The class instance to read the public properties from. </param>
             <param name="dest">             The class instance to set the public properties within. </param>
             <param name="attributeType">    Type of the attribute that the properties must be marked with
                                             or null for all properties. </param>
             <param name="avoidAttribute">   true to return only those properties that do not feature the
                                             attribute. </param>
            
             <returns>   The destination class. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.GetPropertyAttributes``1(System.Type)">
             <summary>   Gets all attributes for the public instance properties of a class type. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="classType">    Type of the class. </param>
            
             <returns>
             An enumerator holding the attribute instances
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.GetPropertyDescriptions(System.Type)">
             <summary>   Gets the member descriptions of all public instance member properties that have an Description attribute attached. </summary>
            
             <param name="classType">    Type of the class. </param>
            
             <returns>
             An enumerator holding the descriptions of all properties
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.BuildUntypedSetter``1(System.Reflection.PropertyInfo)">
             <summary>
             Builds an untyped setter that, when used repeatedly, is much faster than the reflection
             SetValue() accessor. The setter delegate is built for a particular Type and PropertyInfo
             within and can then be used on any instace.
             </summary>
            
             <typeparam name="T">    The class type holding the property. </typeparam>
             <param name="propertyInfo"> The targetedproperty. </param>
            
             <returns>   An Action&lt;T,object&gt; </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertyHelper.BuildUntypedGetter``1(System.Reflection.PropertyInfo)">
             <summary>
             Builds an untyped getter that, when used repeatedly, is much faster than the reflection
             GetValue() accessor. The getter delegate is built for a particular Type and PropertyInfo
             within and can then be used on any instace.
             </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="propertyInfo"> The targetedproperty. </param>
            
             <returns>   A Func&lt;T,object&gt; </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Reflection.PropertySerializer">
            <summary>
            Contains helper methods to serialize property values to and from strings. Note that this will
            only work with a limited set ot .NET types, in particular the primitives and those that
            support IConvertible or IFormattable.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertySerializer.GetSettingsFrom(System.Object,System.Type)">
             <summary>
             Retrieves all (or only those marked with an attribute) public instance properties from the
             object as a complete string with each line in ini-format.
             </summary>
            
             <param name="classInstance">    The class instance to read the properties from. </param>
             <param name="attributeType">    Type of the attribute that the properties must be marked with
                                             or null for all public instance properties. </param>
            
             <returns>   The settings from. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertySerializer.GetConfigFrom(System.Object,System.Type)">
             <summary>
             Retrieves all (or only those marked with an attribute) public instance properties from the
             object as config file instance.
             </summary>
            
             <param name="classInstance">    The class instance to read the properties from. </param>
             <param name="attributeType">    Type of the attribute that the properties must be marked with
                                             or null for all public instance properties. </param>
            
             <returns>   The configuration. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertySerializer.SetSettingsTo(System.Object,System.String,System.Type)">
             <summary>
             Tries to apply the settings in ini-Format to the public instance properties of the object,
             optionally limited to only those properties that are marked with a certain attribute.
             </summary>
            
             <param name="classInstance">    The class instance to read the properties from. </param>
             <param name="settings">         The settings as a multi-line string in INI-format (Key=Value). </param>
             <param name="attributeType">    Type of the attribute that the properties must be marked with
                                             or null for all public instance properties. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertySerializer.SetSettingsTo(System.Object,Keysight.Aes.Asf.Applications.ConfigFile,System.Type)">
             <summary>
             Tries to apply the settings in ini-Format to the public instance properties of the object,
             optionally limited to only those properties that are marked with a certain attribute.
             </summary>
            
             <param name="classInstance">    The class instance to read the properties from. </param>
             <param name="configFile">       The settings to apply. </param>
             <param name="attributeType">    Type of the attribute that the properties must be marked with
                                             or null for all public instance properties. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertySerializer.ObjectToString(System.Object,System.Globalization.CultureInfo)">
             <summary>
             Converts the Object to a string, using either the IConvertible or IFormattable interface
             where possible. If no explicit CultureInfo is provided, the InvariantCulture will be used.
             For a null object, an empty string is returned.
             </summary>
            
             <param name="value">        The value. </param>
             <param name="culture">      The culture. </param>
            
             <returns>   The object converter to a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.PropertySerializer.StringToObject(System.String,System.Type,System.Globalization.CultureInfo)">
             <summary>
             Converts a String back to an object of the given TargetType. If no explicit CultureInfo is
             provided, the InvariantCulture will be used.
             </summary>
            
             <param name="configValue">          The string representation of the value. </param>
             <param name="convertTargetType">    Type to convert to. </param>
             <param name="culture">              The culture. </param>
            
             <returns>   An object of the requested type or null. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Reflection.TypeCodeHelper">
            <summary>   Contains methods to help with groups of types, e.g. check if a type is a numeric type. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.TypeCodeHelper.IsNumericType(System.Type)">
             <summary>   Query if 'type' is a numeric type. </summary>
            
             <param name="type"> The type. </param>
            
             <returns>   true if numeric type, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.TypeCodeHelper.IsNullableType(System.Type)">
             <summary>   Query if 'type' is nullable type. </summary>
            
             <param name="type"> The type. </param>
            
             <returns>   true if nullable type, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.TypeCodeHelper.IsDictionary(System.Type)">
             <summary>   Query if 'type' is a dictionary. </summary>
            
             <param name="type"> The type. </param>
            
             <returns>   true if dictionary, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.TypeCodeHelper.GetDefaultValue(System.Type)">
             <summary>   Gets the default value for a type known at runtime. </summary>
            
             <param name="type"> The type. </param>
            
             <returns>   The default value. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Reflection.TypeHelper">
            <summary>   Contains various methods to find types that match certain criteria. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.TypeHelper.GetInterfaceImplementers(System.Type)">
             <summary>
             Gets all types from all assemblies loaded in the current context that implement a certain
             interface and that can be instantiated using the default (parameterless) constructor.
             To make sure that all referenced assemblies are covered that may not have loaded yet, use the 
             LoadAllReferencedAssemblies method.
             </summary>
            
             <param name="interfaceType">    Type of the interface. </param>
            
             <returns>
             The types implementing the interface
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.TypeHelper.IsImplementingInterface(System.Type,System.Type)">
             <summary>
             A Type extension method that query if 'type' is implementing a certain interface.
             </summary>
            
             <param name="type">             The type to act on. </param>
             <param name="interfaceType">    Type of the interface. </param>
            
             <returns>   true if the type is implementing the interface, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.TypeHelper.GetDerivedTypes(System.Type,System.Type[],System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Gets all types from all assemblies loaded in the current context that are derived from a
             certain type and that can be instantiated using the default (parameterless) constructor. To
             make sure that all referenced assemblies are covered that may not have loaded yet, use the
             LoadAllReferencedAssemblies method.
             </summary>
            
             <param name="baseType">                 The base type. </param>
             <param name="constructorArguments">     The constructor arguments to filter out any types
                                                     that do not support a particular constructor. </param>
             <param name="silentlyLogExceptions">    true to silently log exceptions that occur during a
                                                     type loading attempt, false to rethrow them. </param>
             <param name="includeAbstracts">         true to include, false to exclude abstracts types. </param>
             <param name="includeInterfaces">        true to include, false to exclude interfaces. </param>
             <param name="publicTypesOnly">          true to search for public types only, otherwise protected/private/internal will be included. </param>
            
             <returns>   All types that derive from the base type. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.TypeHelper.GetGenericBaseType(System.Type)">
             <summary>
             Iterates up the inheritance chain and returns the first type that is a generic type (which
             includes the passed in type itself).
             </summary>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   The generic base type or null if no generic base type exists. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.TypeHelper.GetMarkedTypes``1">
             <summary>
             Gets all types from all assemblies loaded in the current context that are marked with a
             certain attribute type and that can be instantiated (i.e. aren't abstract types). To make
             sure that all referenced assemblies are covered that may not have loaded yet, use the
             LoadAllReferencedAssemblies method.
             </summary>
            
             <typeparam name="TAttribute">   Type of the attribute. </typeparam>
            
             <returns>
             All types that are marked with a certain attribute.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.TypeHelper.FindType(System.String)">
             <summary>   Searches for a type within all loaded assemblies. </summary>
            
             <param name="fullTypeName"> The name of the type which should include the namespace and the
                                         assembly. This may also be abbreviated to "name.space.type,
                                         assembly.file" (with no .dll extension). The more information is
                                         left out, the higher are the chances that the found type may be
                                         from the wrong assembly or namepsace. </param>
            
             <returns>   The found type or null if no type was found. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.TypeHelper.ReplaceArrayOf(System.String)">
             <summary>   Replace "ArrayOfX" in the given type name with "X[]". </summary>
            
             <param name="fullTypeName"> Name of the type. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Reflection.TypeHelper.GetAssemblyName(System.String)">
             <summary>   Tries to retrieve the assembly name from a fully qualified type name. </summary>
            
             <param name="fullTypeName"> Name of the type. </param>
            
             <returns>   The assembly name. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Temperature.IExternalTemperature">
            <summary>   Interface for an external Heating temperature device. Created for a HotPlate HP289  </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Temperature.IExternalTemperature.SetHotplate(System.Double,Keysight.Aes.Asf.Instruments.HotPlate.HP289HotPlate.RampScaleSetting,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets a temperature on the hotplate. </summary>
            
             <param name="temperature">              The temperature. </param>
             <param name="rampScale">                The ramp scale. </param>
             <param name="rampScaleSettingValue">    The ramp scale setting value. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Temperature.IExternalTemperature.ReadProbeTemperature">
            -------------------------------------------------------------------------------------------------
             <summary>   Reads the Hotplate probe temperature. </summary>
            
             <returns>   The probe temperature. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Temperature.ITemperatureControl">
            <summary>   Interface for temperature control. Mainly created for a B1506A </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Temperature.ITemperatureControl.RetreiveTemperatureSensor(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Retreive temperature for a sensor. </summary>
            
             <param name="channel">  The channel. </param>
            
             <returns>   A double with the Temperature. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Temperature.ITemperatureControl.WaitTemperature(System.Double,Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.Thermocouple,System.Double,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Wait temperature is a method that check if the temperature is correct at the end of the regulation loop and trigger the measurement. </summary>
            
             <param name="temperature">  The temperature. </param>
             <param name="channel">      The channel. </param>
             <param name="radius">       The radius. </param>
             <param name="timeout">      The timeout. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Temperature.TemperatureRegulationLoop">
            <summary>   A temperature regulation loop. has to be used with two thermal sensor, one for the DUT and one to adjust the temperature of the heating device </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Temperature.TemperatureRegulationLoop.C_MINIMUM_WAITING_TIME_SEC">
            <summary>   The minimum waiting time . </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Temperature.TemperatureRegulationLoop.C_SECURITY_TIME_SECONDE_FOR_TEMP_SUP_100_DEG_C">
            <summary>   The security time for temperature superior to 100 degrees c. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Temperature.TemperatureRegulationLoop.C_SECURITY_TIME_SECONDE_FOR_TEMP_INF_60_DEG_C">
            <summary>   The security time for temperature inferior 60 degrees c. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Temperature.TemperatureRegulationLoop.RemoteHotPlateTemperature">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the remote hot plate temperature. </summary>
            
             <value> The remote hot plate temperature. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:Keysight.Aes.Asf.Temperature.TemperatureRegulationLoop._solutionInteraction">
            <summary>   The solution interaction. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Temperature.TemperatureRegulationLoop.DemoMode">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets a value indicating whether the demo mode. </summary>
            
             <value> True if demo mode, false if not. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:Keysight.Aes.Asf.Temperature.TemperatureRegulationLoop.WaitingTimeBetweenTemperatureAdjustment">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets or sets the waiting time between temperature adjustment. </summary>
            
             <value> The waiting time between temperature adjustment. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Temperature.TemperatureRegulationLoop.#ctor(Keysight.Aes.Asf.Temperature.ITemperatureControl,Keysight.Aes.Asf.Temperature.IExternalTemperature,System.Boolean,Keysight.Aes.Asf.Solutions.SolutionInteractions)">
            -------------------------------------------------------------------------------------------------
             <summary>Constructor. This loop will display some live user feedback so you need to give a SolutionInteractionService instance. Therefor it only can be use in a ExpertSolution Framework environment </summary>
            
             <param name="temperatureControl">           The temperature control. </param>
             <param name="externalTemperature">          The external temperature. </param>
             <param name="demoMode">                     True if demo mode, false if not this will use the regulation loop time to 10sec. </param>
             <param name="solutionInteractionService">   The solution interaction service. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Temperature.TemperatureRegulationLoop.WaitForTemperature(System.Double,System.Double,Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.Thermocouple,System.Int32,System.Int32,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>   Wait for temperature. This method will first adjust the temperature of the Heating Device, then will adjust the temperature close to the DUT </summary>
            
             <param name="targeTemperature">          The Target Temperature. </param>
             <param name="temperatureRadius">    The temperature radius (tolerance). </param>
             <param name="channel">              The DUT Temperature sensor channel. </param>
             <param name="timeOutMin">           The timeout in minute. </param>
             <param name="controlHP">            (Optional) True to control hp. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Temperature.TemperatureRegulationLoop.IsInitialTemperatureAlreadyGood(Keysight.Aes.Asf.Instruments.PowerDeviceAnalyzer.B1505A.Thermocouple,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Initial temperature check. </summary>
            
             <param name="channel">              The DUT Temperature sensor channel. </param>
             <param name="targeTemperature">     The Target Temperature. </param>
             <param name="temperatureRadius">    The temperature radius (tolerance). </param>
            
             <returns>   True if it the initial temperature is already good, false if it is not. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Text.Parsers.StringListSplitter">
            <summary>
            Splits a string with fields seperated by the specified character into a numeric list.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Parsers.StringListSplitter.GetNumericListValues``1(System.String,System.Char,System.Globalization.CultureInfo)">
            <summary>
            Returns a list of values of type "T" from the input string "listOfValues".  The
            values are split based on the passed in "seperator"
            </summary>
            <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                    illegal values. </exception>
                                                    
            <typeparam name="T">the desired type of the return list.  Valid types are
                                double, float, int16, int32, int64.</typeparam>
            <param name="listOfValues">list of values seperated by a common character</param>
            <param name="seperator">the character seperating the values in the list</param>
            <param name="culture">      The culture to use in the converter. </param>
            <returns></returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Text.Parsers.InvariantParser">
            <summary>   Predefined methods for parsing numbers using the invariant culture and a predefined allowed number style that does not allow for a thousands indicator. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Text.Parsers.InvariantParser.C_DEFAULT_NUMBER_STYLE">
            <summary>   The default allowed number style. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Parsers.InvariantParser.TryParse(System.String,System.Double@,System.Globalization.NumberStyles)">
             <summary>   Attempts to parse from the given data. </summary>
            
             <param name="valueString">  The value string. </param>
             <param name="value">        [out] The value. </param>
             <param name="numberStyle">  The allowed number style. </param>
            
             <returns>   true if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Parsers.InvariantParser.Parse(System.String,System.Globalization.NumberStyles)">
             <summary>   Parses. </summary>
            
             <param name="valueString">  The value string. </param>
             <param name="numberStyle">  The allowed number style. </param>
            
             <returns>   A double. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Text.Parsers.LabelUnitSplitter">
            <summary>   Provides helper methods to extract units from labels. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Parsers.LabelUnitSplitter.SplitUnit(System.String)">
             <summary>
             Splits a label formatted like "Name [Unit]" into the name and unit. If no brackets are found
             (this includes the label being null or an empty string), the returned unit is an empty string.
             If multiple brackets exist, only the last pair is considered to hold the unit.
             If there is text beyond the final bracket pair it will be lost.
             </summary>
            
             <param name="label">    The label. </param>
            
             <returns>   The unit. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Parsers.LabelUnitSplitter.SplitName(System.String)">
             <summary>
             Splits a label formatted like "Name [Unit]" into the name and unit. If no brackets are found
             (this includes the label being null or an empty string), the returned unit is an empty string.
             The returned name is also an empty string if the provided label is null or empty.
             If multiple brackets exist, only the last pair is considered to hold the unit and will be removed.
             All other brackets will become part of the returned name.
             If there is text beyond the final bracket pair it will be lost.
             </summary>
            
             <param name="label">    The label. </param>
            
             <returns>   The unit. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Parsers.LabelUnitSplitter.SplitNameUnit(System.String)">
             <summary>
             Splits a label formatted like "Name [Unit]" into the name and unit. If no brackets are found
             (this includes the label being null or an empty string), the returned unit is an empty string.
             The returned name is also an empty string if the provided label is null or empty.
             If multiple brackets exist, only the last pair is considered to hold the unit.
             All other brackets will become part of the returned name.
             If there is text beyond the final bracket pair it will be lost.
             </summary>
            
             <param name="label">    The label. </param>
            
             <returns>   A string[2] with the name at index 0 and the unit at index 1. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Parsers.LabelUnitSplitter.IsEngineeringUnit(System.String)">
             <summary>
             Query if 'unit' looks like an engineering unit that can be prefixed with "k", "m", "µ" etc.
             For example, this is true for "V", "A" but not for "°C" or "µA".
             </summary>
            
             <param name="unit"> The unit. </param>
            
             <returns>   true if engineering unit, false if not. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Text.Parsers.NumberUnitSplitter">
            <summary>
            A number unit splitter can split a text into numbers and units using whitespaces and changes
            from digits to characters as splitting points.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Parsers.NumberUnitSplitter.Split(System.String,System.Globalization.NumberStyles,System.Globalization.CultureInfo)">
             <summary>
             Splits a string into pairs of numbers and units. The units are not evaluated in any way but
             just returned as strings. Separation points are whitespaces, any switch from digits to
             characters and vice versa. Dots, commas etc. are considered to belong to numbers, also the
             character 'e' when it is followed by a sign or digit. You can provide parsing parameters
             though that may render such a number invalid.
             For empty input strings, an empty list is returned.
             In case of invalid numbers, an FormatException is thrown.
             </summary>
            
             <param name="text">                 The text. </param>
             <param name="numberParseStyles">    The accepted styles for number parsing. </param>
             <param name="numberParseCulture">   The culture for number parsing. If omitted, DefaultThreadCurrentCulture is chosen.</param>
            
             <returns>   A List&lt;Tuple&lt;double,string&gt;&gt; </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Parsers.NumberUnitSplitter.Split(System.String,System.Double@,System.String@,System.Globalization.NumberStyles,System.Globalization.CultureInfo)">
             <summary>
             Splits a string into a value and a unit. If no valid value input is found, false is returned
             If no unit is found, parseValue returns the double.Parse() result and unitString is empty. If
             a unit is found, it is returned with stripped leading or trailing blanks.
             </summary>
            
             <param name="inputString">          The input string. </param>
             <param name="parseValue">           [out] The parse value. </param>
             <param name="unitString">           [out] The unit string. </param>
             <param name="numberParseStyles">    The accepted styles for number parsing. </param>
             <param name="numberParseCulture">   The culture for number parsing. If omitted, the DefaultThreadCurrentCulture is chosen.</param>
            
             <returns>
             true if it succeeds to retrieve and parse at least a value, false if it fails.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Parsers.NumberUnitSplitter.GetLeadingDigits(System.String,System.Globalization.NumberStyles,System.Boolean)">
             <summary>
             Retrieves the leading part of the string that contains digits only and an optional set of
             formatting signs. Note that the returned string may even consist of formatting signs only
             like ",.-+e+" so you should use the .NET type parser on the result determine if it is an
             actual number.
             </summary>
            
             <param name="text">                     The string to parse. </param>
             <param name="numberParseStyles">        This can be configured to accept the features decimal
                                                     delimiter, leading sign and exponent. </param>
             <param name="includeLeadingWhiteSpace">    true to include leading white space characters. </param>
            
             <returns>   The leading digits. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Text.Parsers.StringByteParser">
            <summary>   A string byte parser. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Text.Parsers.StringByteParser.DataFormat">
            <summary>   Values that represent data formats. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Text.Parsers.StringByteParser.DataFormat.ASCII">
            <summary>   An enum constant representing the ASCII option. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Text.Parsers.StringByteParser.DataFormat.UTF8">
            <summary>   An enum constant representing the UTF 8 option. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Text.Parsers.StringByteParser.DataFormat.HEX">
            <summary>   An enum constant representing the hexadecimal option. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Text.Parsers.StringByteParser.DataFormat.BIN">
            <summary>   An enum constant representing the bin option. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Parsers.StringByteParser.StringToBytes(System.String,Keysight.Aes.Asf.Text.Parsers.StringByteParser.DataFormat)">
             <summary>   Converts a String with a certain data format to bytes. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="text">     The text. </param>
             <param name="format">   Describes the format to use. </param>
            
             <returns>   A byte[]. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Parsers.StringByteParser.BytesToString(System.Byte[],Keysight.Aes.Asf.Text.Parsers.StringByteParser.DataFormat)">
             <summary>   Bytes to string with a certain data format. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="stream">   The stream. </param>
             <param name="format">   Describes the format to use. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Text.Parsers.TimeSpanParser">
            <summary>
            A time span parser can parse a text input (which would typically be a user input) for
            timespan information like "1 hour 2 minutes" or "1 week 250ms" and sum them all up into a
            TimeSpan. Currently only English units are supported.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Parsers.TimeSpanParser.Parse(System.String,System.Globalization.NumberStyles,System.Globalization.CultureInfo,System.Boolean)">
             <summary>
             Parses a string for TimeSpan Information like "1 week 2 days" or "2h12m3s". Currently only
             English units are accepted. Note that "month" is not a valid unit, since it does not
             correspond to a determined number of days and so is "year" because of leap years. However you
             can have both units parsed to hardwired values using the <cref name="acceptIndeterminate"/> parameter.
             Note that Microseconds are accepted, but the .NET TimeSpan only resolves milliseconds. Thus only
             multiples of thousands of Microseconds will affect the result, e.g. "2000µs", when reformatted, will
             evaluate to "2ms" whereas "200µs" will simply return TimeSpan.Zero.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
             <exception cref="T:System.FormatException">      Thrown when a unit is unknown. </exception>
            
             <param name="input">                The input string. </param>
             <param name="numberParseStyles">    The acceptable number styles. </param>
             <param name="numberParseCulture">   The culture for number parsing. If omitted, DefaultThreadCurrentCulture is chosen. </param>
             <param name="acceptIndeterminate">  true to accept months (as 30 days) and years (as 356
                                                 days). </param>
            
             <returns>   A TimeSpan. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Text.Formatters.EngineeringFormatter">
            <summary>
            Contains methods that support formatting to engineering standards, e.g. the exponent in
            multiples of three or in milli, micro etc. unit suffixes.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.EngineeringFormatter.GetEngineeringSuffix(System.Double@)">
             <summary>
             Gets the engineering suffix and changes the value to the nearest multiple of e(+/-)3.
             Examples: 0.001 will be changed to 1 and will return "m" (for "milli").
             1234 will be changed to 1.234 and will return "k" (for "kilo").
             0.00045 will be changed to 45 and will return "µ" (for "micro").
             56789123.2 will be changed to 56.7891232 and will return "M" (for "Mega").
             1.234 will not be changed and will return "".
             0 will not be changed and will return "".
             </summary>
            
             <param name="value">    [in,out] The value. </param>
            
             <returns>   The engineering suffix. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.EngineeringFormatter.FormatToEngineeringSuffixSignificantDigits(System.Double,System.Int32,System.IFormatProvider,System.Boolean)">
             <summary>
             Format a value to an engineering format with a number of significant digits. Examples:
             1.234567 with 3 digits will return "1.23"
             12345.67 with 4 digits will return "12.35k".
             1234567.890 with 4 digits will return "1.235M".
             0.00012 with 2 digits will return "120µ".
             0.00012 with 4 digits will also return "120µ".
             </summary>
            
             <param name="value">            The value. </param>
             <param name="significantDigits">           The number of significant digits. </param>
             <param name="formatProvider">   The format provider. </param>
             <param name="insertWhiteSpace"> true to insert a white space between the number and the suffix. </param>
            
             <returns>   The formatted to significant digits. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.EngineeringFormatter.FormatToEngineeringExponentSignificantDigits(System.Double,System.Int32,System.IFormatProvider,System.String)">
             <summary>
             Format a value to an engineering exponential format with a number of significant digits.
             Examples: 1.234567 with 3 digits will return "1.23" 12345.67 with 4 digits will return
             "12.35e3". 1234567.890 with 4 digits will return "1.235e6". 0.00012 with 2 digits will return
             "120e-6". 0.00012 with 4 digits will also return "120e-6".
             </summary>
            
             <param name="value">                The value. </param>
             <param name="significantDigits">    The number of significant digits. </param>
             <param name="formatProvider">       The format provider. </param>
             <param name="exponentSymbol">       The exponent symbol, defaults to "e". </param>
            
             <returns>   The formatted to significant digits. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.EngineeringFormatter.ShortLabel(System.Double)">
             <summary>
             The default formatter for scale values. It will provide two decimal digits or one plus an
             exponent if the value is out of that range.
             </summary>
            
             <param name="value">    The value. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.EngineeringFormatter.FormatMetricSuffixStringToDouble(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Metric suffix string to double can convert numbers with metric suffix at the end to double.
                      e.g = convert 23.2m to 0.0233   work with a range from Giga to Fento </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values.</exception>
            
             <param name="number">Number to convert.</param>
            
             <returns>A double. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.EngineeringFormatter.PowerOfTenMultiplication(System.Char,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>Power of ten multiplication. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values.</exception>
            
             <param name="letter">          The letter.</param>
             <param name="numberWithoutEnd">Number of without ends.</param>
            
             <returns>A double. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.Text.Formatters.FormatVerbosities">
            <summary>   Indicates to what extend a formatter should be verbose. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Text.Formatters.FormatVerbosities.SuperBrief">
            <summary>   For the unit minutes, a formatter would just return ":". </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Text.Formatters.FormatVerbosities.Brief">
            <summary>   For the unit seconds, a formatter would return "s". </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Text.Formatters.FormatVerbosities.Normal">
            <summary>   For the unit seconds, a formatter would return "sec". </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Text.Formatters.FormatVerbosities.Verbose">
            <summary>   For the unit seconds, a formatter would return "second". </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Text.Formatters.FormatVerbosities.SuperVerbose">
            <summary>   For the unit seconds, a formatter would return "second". </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Text.Formatters.InvariantFormatter">
            <summary>   Predefined methods for formatting numbers using the invariant culture and a predefined number style that does not allow for a thousands indicator. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.InvariantFormatter.ToStringInvariant(System.IFormattable,System.String)">
             <summary>   Formats an IFormattable using the invariant culture settings. </summary>
            
             <param name="value">        The value. </param>
             <param name="formatString"> The format string. </param>
            
             <returns>   The formatted value. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.InvariantFormatter.ToString(System.IFormattable,System.String)">
             <summary>   Formats an IFormattable using the invariant culture settings. </summary>
            
             <param name="value">        The value. </param>
             <param name="formatString"> The format string. </param>
            
             <returns>   The formatted value. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.InvariantFormatter.Format(System.String,System.Object[])">
             <summary>   Formats objects using the invariant culture settings. </summary>
            
             <param name="formatString"> The format string as used in string.Format, i.e. &quot;{0}{1}&quot; etc. to
                                         indicate where to put the arguments. </param>
             <param name="args">         The arguments. </param>
            
             <returns>   The formatted value. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.InvariantFormatter.Format(System.Object)">
             <summary>   Formats an object using the invariant culture settings. </summary>
            
             <param name="value">    The value. </param>
            
             <returns>   The formatted value. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Text.Formatters.NumberFormatter">
            <summary>   Provides various methods of formatting numbers for several displaying purposes. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Text.Formatters.NumberFormatter.C_MAX_DOUBLE_DIGITS">
            <summary>
            A format string that reserves the maximum number of digits in a double so that the
            exponential formatting is not triggered.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Text.Formatters.NumberFormatter.ScaleFormatter">
             <summary>
             The signature of PlotScaleFormatter. The formatter is provided with the value to format and
             with the min and max range of the whole visible scale (to optionally determine the number of
             required digits to display etc.)
             </summary>
            
             <param name="value">        The value. </param>
             <param name="min">          The minimum. </param>
             <param name="max">          The maximum. </param>
             <param name="labelCount">   The number of labels to put on the scale including min and max. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.NumberFormatter.FormatToSignificantDigits(System.Double,System.Int32,System.IFormatProvider)">
             <summary>   Format a value to a number of significant digits. </summary>
            
             <param name="value">            The value. </param>
             <param name="digits">           The number of significant digits. </param>
             <param name="formatProvider">   The format provider. </param>
            
             <returns>   The formatted to significant digits. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.NumberFormatter.ShortLabel(System.Double)">
             <summary>
             The default formatter for scale values. It will provide two decimal digits or one plus an
             exponent if the value is out of that range.
             </summary>
            
             <param name="value">    The value. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.NumberFormatter.RequiredDigitsLabel(System.Double,System.Double,System.Double,System.Int32)">
             <summary>
             Determines the number of required digits to display to see the difference between a number of
             labels placed on a scale ranging from min to max. If min and max are equal, the ShortFormat
             is returned.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="value">        The value (may equal min or max). </param>
             <param name="min">          The minimum. </param>
             <param name="max">          The maximum. </param>
             <param name="labelCount">   The number of divisor ticks on the whole scale. </param>
            
             <returns>   The number formatted to an appropriate label. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.NumberFormatter.RequiredDigitsFormat(System.Double,System.Double,System.Double,System.Int32)">
             <summary>
             Determines the number of required digits to display to see the difference between a number of
             labels placed on a scale ranging from min to max. If min and max are equal, the ShortFormat
             is returned.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="value">        The value (may equal min or max). </param>
             <param name="min">          The minimum. </param>
             <param name="max">          The maximum. </param>
             <param name="labelCount">   The number of divisor ticks on the whole scale. </param>
            
             <returns>
             The format string to use with the number or null if no range is spanned. In this case it is
             recommended to use ShortLabel() function on the value.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.NumberFormatter.GetLabelDelta(System.String,System.String)">
             <summary>
             Gets the delta between two values independently of the position of the delta.
             E.g. for "1.1" and "1.2" it will return 1 and for "1.01" and "1.02" also whereas
             "1.0020" and "1.0002" would return 18.
             The strings must be of equal length so for differing signs, you have to include
             both, e.g. "+1.2" and "-0.9"
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="min">  The minimum. </param>
             <param name="max">  The maximum. </param>
            
             <returns>   The label delta. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.NumberFormatter.GetDecimalDigits(System.Double)">
             <summary>
             Gets the part of the number containing only the post-decimal-delimiter digits as a string.
             </summary>
            
             <param name="value">    The value. </param>
            
             <returns>
             The decimal digits (without the delimiter). This is an empty string if the number is integral.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Text.Formatters.TimeSpanFormatter">
            <summary>   Contains helper functions to format a time span into a human readable string. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.TimeSpanFormatter.Format(System.TimeSpan,Keysight.Aes.Asf.Text.Formatters.FormatVerbosities,System.Boolean,System.Boolean,System.Boolean,System.Globalization.CultureInfo)">
             <summary>   Formats a timespan to a string like "3 min 4 sec". </summary>
            
             <param name="timespan">             The timespan. </param>
             <param name="verbosity">            The verbosity. </param>
             <param name="unitSpacer">           true to insert a space before each unit. </param>
             <param name="includeZeros">         true to include those parts of the timespan that are zero,
                                                 starting with hours, e.g. "0h 2m 0s" instead of just "2m". </param>
             <param name="includeSplitSeconds">  true to include, false to exclude the fractions of the second portion. </param>
             <param name="numberFormatCulture">  The Culture to use for number formatting. Since
                                                 milliseconds are displayed as fractions of seconds, this
                                                 effects the decimal delimiter. By default, the
                                                 DefaultThreadCurrentCulture is used. </param>
            
             <returns>   The formatted value. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.TimeSpanFormatter.FormatSingleUnit(System.TimeSpan,Keysight.Aes.Asf.Text.Formatters.FormatVerbosities,System.Boolean,System.String,System.Globalization.CultureInfo)">
             <summary>   Returns the timespan formatted to a single unit, e.g. 1 hour 30 minutes is returned as "1.5h". </summary>
            
             <param name="timespan">             The timespan. </param>
             <param name="verbosity">            The verbosity. </param>
             <param name="unitSpacer">           true to insert a space before each unit. </param>
             <param name="formatString">         The format string. </param>
             <param name="numberFormatCulture">  The Culture to use for number formatting. Since
                                                 milliseconds are displayed as fractions of seconds, this
                                                 effects the decimal delimiter. By default, the
                                                 DefaultThreadCurrentCulture is used. </param>
            
             <returns>   The formatted value. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.TimeSpanFormatter.TimeScaleFormatter(System.TimeSpan,System.Double,System.Double,System.Int32)">
             <summary>
             A Time scale formatter to be used in conjunction with a  PlotScale control.
             </summary>
            
             <param name="timeSpan">     The timespan. </param>
             <param name="min">          The minimum. </param>
             <param name="max">          The maximum. </param>
             <param name="labelCount">   Number of labels. </param>
            
             <returns>   A string to be displayed on screen. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Text.Formatters.TimeSpanFormatter.TimeToolTipFormatter(System.TimeSpan)">
             <summary>   Time tool tip formatter to be used in conjunction with a PlotToolBox control. </summary>
            
             <param name="timeSpan"> The timespan. </param>
            
             <returns>   A string to be displayed on screen. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Common.CollapsibleCategoryAttribute">
            <summary>   Attribute for specifying if a category is collapsible. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Common.CollapsibleCategoryAttribute.IsCollapsed">
             <summary>   Gets or sets a value indicating whether this property is be collapsed. </summary>
            
             <value> True if this object is collapsed, false if not. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Common.CollapsibleCategoryAttribute.VisibleCategory">
            -------------------------------------------------------------------------------------------------
             <summary>Gets or sets the category  visibility </summary>
            
             <value>The visible category. </value>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.CollapsibleCategoryAttribute.#ctor(System.String,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>Constructor. </summary>
            
             <param name="category">   The category.</param>
             <param name="isCollapsed">  (Optional)
                                         True if this object is collapsed, false if not.</param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Common.DisplayTrigger">
            <summary>   A display trigger class is attached by the populator to every property featuring one or more DisplayTriggerAttributes. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.DisplayTrigger.#ctor(System.Windows.FrameworkElement,System.Collections.Generic.IEnumerable{Keysight.Aes.Asf.WPF.Dialogs.DisplayTriggerAttribute})">
             <summary>   Constructor. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="triggerControl">   The trigger control to attach to. </param>
             <param name="attributes">       The trigger attributes to evaluate. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.DisplayTrigger.UpdateDependencyObject">
            <summary>   Updates the dependency object according to the current value of the control. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.DisplayTrigger.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged
            resources.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Common.Validator">
            <summary>
            Provides utility methods to check wheter a WPF control and all it's children have valid input
            where Bindings are used. E.g. if a user puts a string into a textbox that's bound to an int,
            WPF will highlight it in red on focus change. The Validator will find any control in that state.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Validator.IsValid(System.Windows.DependencyObject)">
             <summary>   Query if the parent and all it's children contain valid input. </summary>
            
             <param name="parent">   The parent. </param>
            
             <returns>   true if valid, false if not. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Common.ColorCreator">
            <summary>   A helper class to create WPF colors. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Common.ColorCreator.ColorFlags">
            <summary>   A bit-field of flags for specifying color options. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Common.ColorCreator.ColorFlags.TranslucentColor">
            <summary>   Will create a somewhat translucent color. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Common.ColorCreator.ColorFlags.PaleColor">
            <summary>   Will create a somewhat pale color. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Common.ColorCreator.ColorFlags.IntenseColor">
            <summary>   Will create a more saturated color. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Common.ColorCreator.ColorFlags.DarkColor">
            <summary>   Will create a rather dark color. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Common.ColorCreator.ColorFlags.BrightColor">
            <summary>   Will create a rather bright color. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.ColorCreator.ToString(System.Windows.Media.Color)">
             <summary>   Convert the color into a hex string like "#102030" that can be used for WPF binding. </summary>
            
             <param name="color">    The color. </param>
            
             <returns>   A hex string that represents the color. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.ColorCreator.ToString(System.Byte,System.Byte,System.Byte,System.Byte)">
             <summary>
             Convert the color into a hex string like "#102030" that can be used for WPF binding.
             </summary>
            
             <param name="a">    The alpha component. </param>
             <param name="r">    The red component. </param>
             <param name="g">    The green component. </param>
             <param name="b">    The blue value. </param>
            
             <returns>   A hex string that represents the color. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.ColorCreator.FromHash(System.Int32,Keysight.Aes.Asf.WPF.Common.ColorCreator.ColorFlags)">
             <summary>   Creates a color from a hash. The same hash will always result in the same color. </summary>
            
             <param name="hashCode"> The hash code. </param>
             <param name="flags">    The flags. </param>
            
             <returns>   A Color. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.ColorCreator.Hsl2Rgb(System.Double,System.Double,System.Double)">
             <summary>   Converts a Hsl Color into a RGB Color. 
             Reference and license:
             http://stackoverflow.com/questions/1335426/is-there-a-built-in-c-net-system-api-for-hsv-to-rgb
             </summary>
            
             <param name="hue">    The hue. </param>
             <param name="saturation">    The saturation. </param>
             <param name="luminosity">    The luminosity. </param>
            
             <returns>   A Color. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Common.Populator">
            <summary>   Offers various methods to populate dialogs by creating controls from data. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.GetEditableProperties(System.Object)">
             <summary>   Gets all editable properties from a class instance. </summary>
            
             <param name="classInstance">    The class holding the public properties for which to count
                                             the editable controls for that would be created with
                                             CreateEditFields. </param>
            
             <returns>   The editable properties. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.CountEditableProperties(System.Object)">
             <summary>
             Returns the number of edit fields that would be created by a call to CreateEditFields from
             the provided class instance or type. If you pass in null, a count of 0 is returned.
             </summary>
            
             <param name="classInstance">    The class instance or type of the class holding the public
                                             properties for which to count the editable controls for that
                                             would be created with CreateEditFields. </param>
            
             <returns>   The total number of editable properties. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.FindElement(System.Windows.FrameworkElement,System.String,System.Windows.FrameworkElement@,System.Windows.Controls.Label@,System.Windows.Controls.Expander@)">
             <summary>
             Searches for the first edit control or category group within the whole UI tree that the
             reference control is part of and which matches the elementName. The search is performed on
             the Name of the FrameworkElements and assumes that the visual tree was originally created by
             the Populator.
             </summary>
            
             <param name="reference">            The reference control. </param>
             <param name="elementName">          Name of the element to search for. </param>
             <param name="valueObject">          [out] The value editor object (or label for read only presentations) if the found object was a property editor. Null if the found object was a Category group. </param>
             <param name="correspondingLabel">   [out] The corresponding label for the value editor. Null if the found object was a Category group. </param>
             <param name="category">             [out] The Expander control if the found object was a Category group, otherwise null. </param>
            
             <returns>   true if a control was found, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.CreateEditFields(System.Windows.Controls.StackPanel,System.Object,System.Boolean)">
             <summary>
             Creates labels and editable boxes to populate two columns represented by a label grid and a
             value grid. This is like a very primitive version of a PropertyGrid.
             </summary>
            
             <param name="propertiesStackPanel"> The StackPanel that contains all Grid with the
                                                 properties. </param>
             <param name="classInstance">        The class holding the public properties for which to
                                                 create editable controls for. </param>
             <param name="readOnly">             (Optional) True to create read only controls. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.CreateUIForPropertyGroup(System.Windows.Controls.StackPanel,System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.Dictionary{System.Reflection.PropertyInfo,System.Object}},System.Boolean)">
             <summary>   Creates user interface for property group. </summary>
            
             <param name="propertiesStackPanel"> The StackPanel to which the UI is added. </param>
             <param name="group">                The group. </param>
             <param name="readOnly">             True to create read only controls. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.GroupPropertiesByCategory(System.Collections.Generic.Dictionary{System.Reflection.PropertyInfo,System.Object})">
             <summary>   Group properties by category. </summary>
            
             <param name="pairs">    The pairs. </param>
            
             <returns>   A Dictionary&lt;string,Dictionary&lt;PropertyInfo,object&gt;&gt; </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.CreateEditFields(System.Windows.Controls.Grid,System.Windows.Controls.Grid,System.Object)">
             <summary>
             Creates labels and editable boxes to populate two columns represented by a label grid and a
             value grid. This is like a very primitive version of a PropertyGrid.
             </summary>
            
             <param name="labelGrid">        The grid holding the labels. </param>
             <param name="valueGrid">        The grid holding the editable values. </param>
             <param name="classInstance">    The class holding the public properties for which to create
                                             editable controls for. </param>
            
             <example>
             Your XAML code to provide the two columns could look like this:
             <code>
                 &lt;Grid&gt;
                   &lt;Grid.ColumnDefinitions &gt;
                       &lt;ColumnDefinition Width = &quot; Auto&quot;/&gt;
                       &lt;ColumnDefinition Width = &quot;*&quot; /&gt;
                   &lt;/Grid.ColumnDefinitions &gt;
            
                   &lt;Grid x:Name=&quot;LabelGrid&quot; Grid.Row=&quot;1&quot; Grid.Column=&quot;0&quot;/&gt;
                   &lt;Grid x:Name=&quot;ValueGrid&quot; Grid.Row=&quot;1&quot; Grid.Column=&quot;1&quot;/&gt;
                 &lt;/Grid&gt;
               </code>
             </example>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.RunTriggerInitializers(System.Windows.DependencyObject)">
             <summary>   Executes the trigger initializers on all child controls that have a DisplayTrigger attached. </summary>
            
             <param name="parentControl">    The parent control. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.GetEditFieldValues``1(System.Windows.Controls.StackPanel)">
             <summary>
             Gets the contents of the edit fields created with CreateEditFields() and populates the public
             properties of a newly created class instance of type T. There is no checking on whether any
             of the filled in properties do exist in the class an vice versa. All extra data from the edit
             fields is simply ignored and all non-represented properties will keep their default values.
            
             If there is invalid input, the fields will be marked in red and null is returned.
             </summary>
            
             <value>
             A class instance with populated properties or null in case one or more inputs could not be
             converted to the original type. In this case the corresponding input fields are marked in red
             and the user should be made aware of this.
             </value>
            
             ### <param name="propertiesStackPanel"> The StackPanel that contains all Grid with the
                                                     properties. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.GetEditFieldValues``1(System.Windows.Controls.Grid)">
             <summary>
             Gets the contents of the edit fields created with CreateEditFields() and populates the public
             properties of a newly created class instance of type T. There is no checking on whether any
             of the filled in properties do exist in the class an vice versa. All extra data from the edit
             fields is simply ignored and all non-represented properties will keep their default values.
            
             If there is invalid input, the fields will be marked in red and null is returned.
             </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="valueGrid">    The grid holding the editable values. </param>
            
             <returns>
             A class instance with populated properties or null in case one or more inputs could not be
             converted to the original type. In this case the corresponding input fields are marked in red
             and the user should be made aware of this.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.GetEditFieldValues(System.Object,System.Windows.Controls.StackPanel)">
             <summary>
             Gets the contents of the edit fields created with CreateEditFields() and populates the public
             properties of an existing class instance. There is no checking on whether any of the filled
             in properties do exist in the class an vice versa. All extra data from the edit fields is
             simply ignored and all non-represented properties will keep their default values.
            
             If there is invalid input, the fields will be marked in red and null is returned.
             </summary>
            
             <param name="classInstance">        The class holding the public properties which to fill in. </param>
             <param name="propertiesStackPanel"> The StackPanel that contains all Grid with the
                                                 properties. </param>
            
             <returns>
             The passed in class instance filled in with the new values or null if there were parsing
             errors.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.GetEditFieldValues(System.Object,System.Windows.Controls.Grid)">
             <summary>
             Gets the contents of the edit fields created with CreateEditFields() and populates the public
             properties of an existing class instance. There is no checking on whether any of the filled
             in properties do exist in the class an vice versa. All extra data from the edit fields is
             simply ignored and all non-represented properties will keep their default values.
            
             If there is invalid input, the fields will be marked in red and null is returned.
             </summary>
            
             <param name="classInstance">    The class holding the public properties which to fill in. </param>
             <param name="valueGrid">        The grid holding the editable values. </param>
            
             <returns>
             The passed in class instance filled in with the new values or null if there were parsing
             errors.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.SetEditFields(System.Windows.Controls.Grid,System.Windows.Controls.Grid,System.Collections.Generic.Dictionary{System.Reflection.PropertyInfo,System.Object},System.Boolean,System.Boolean)">
             <summary>
             Creates labels and editable boxes to populate two columns represented by a label grid and a
             value grid. This is like a very primitive version of a PropertyGrid.
             </summary>
            
             <param name="labelGrid">    The grid holding the labels. </param>
             <param name="valueGrid">    The grid holding the editable values. </param>
             <param name="fields">       The names and default values to create editable controls for. </param>
             <param name="IsGrouped">    (Optional) True if the properties are grouped. </param>
             <param name="readOnly">     (Optional) True to create read only controls. </param>
            
             <example>
             Your XAML code to provide the two columns could look like this:
             <code>
                 &lt;Grid&gt;
                   &lt;Grid.ColumnDefinitions &gt;
                       &lt;ColumnDefinition Width = &quot; Auto&quot;/&gt;
                       &lt;ColumnDefinition Width = &quot;*&quot; /&gt;
                   &lt;/Grid.ColumnDefinitions &gt;
            
                   &lt;Grid x:Name=&quot;LabelGrid&quot; Grid.Row=&quot;1&quot; Grid.Column=&quot;0&quot;/&gt;
                   &lt;Grid x:Name=&quot;ValueGrid&quot; Grid.Row=&quot;1&quot; Grid.Column=&quot;1&quot;/&gt;
                 &lt;/Grid&gt;
               </code>
             </example>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.SetEditFields(System.Windows.Controls.Grid,System.Windows.Controls.Grid,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
             <summary>
             Creates labels and editable boxes to populate two columns represented by a label grid and a
             value grid. This is like a very primitive version of a PropertyGrid.
             </summary>
            
             <param name="labelGrid">    The grid holding the labels. </param>
             <param name="valueGrid">    The grid holding the editable values. </param>
             <param name="fields">       The names and default values to create editable controls for. </param>
            
             <example>
             Your XAML code to provide the two columns could look like this:
             <code>
                 &lt;Grid&gt;
                   &lt;Grid.ColumnDefinitions &gt;
                       &lt;ColumnDefinition Width = &quot; Auto&quot;/&gt;
                       &lt;ColumnDefinition Width = &quot;*&quot; /&gt;
                   &lt;/Grid.ColumnDefinitions &gt;
            
                   &lt;Grid x:Name=&quot;LabelGrid&quot; Grid.Row=&quot;1&quot; Grid.Column=&quot;0&quot;/&gt;
                   &lt;Grid x:Name=&quot;ValueGrid&quot; Grid.Row=&quot;1&quot; Grid.Column=&quot;1&quot;/&gt;
                 &lt;/Grid&gt;
               </code>
             </example>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.CreateCategory(System.Windows.Controls.Grid,System.Double@,System.String)">
             <summary>   Creates an indented category label. </summary>
            
             <param name="labelGrid">    The grid holding the labels. </param>
             <param name="yMargin">      [in,out] The vertical margin. </param>
             <param name="category">     The category. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.CreateEditFields(System.Windows.Controls.Grid,System.Windows.Controls.Grid,System.Double@,System.String,System.String,System.String,System.Type,System.Object,System.Reflection.PropertyInfo,System.Boolean)">
             <summary>
             Creates the label and editable box for one object to populate two columns represented by a
             label grid and a value grid. This is like a very primitive version of a PropertyGrid.
             </summary>
            
             <param name="labelGrid">    The grid holding the labels. </param>
             <param name="valueGrid">    The grid holding the editable values. </param>
             <param name="yMargin">      [in,out] The vertical margin. </param>
             <param name="screenName">   The label content. </param>
             <param name="toolTip">      The tool tip. </param>
             <param name="objectName">   The original name of the property or variable. </param>
             <param name="objectType">   Type of the object. </param>
             <param name="objectValue">  The value / object. </param>
             <param name="objectInfo">   (Optional) The PropertyInfo for the object to retrieve additional
                                         attributes from. </param>
             <param name="readOnly">     (Optional) True to create read only controls. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.ValueToString(System.Object)">
             <summary>   Formats a Value to a string for on screen presentation. </summary>
            
             <param name="objectValue">  The value / object. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.UpdateEditField(System.Windows.Controls.StackPanel,System.String,System.Object,System.Reflection.PropertyInfo)">
             <summary>   Updates an already existing edit field within a value grid created by Populator.CreateEditFields </summary>
            
             <param name="propertiesStackPanel"> The StackPanel with all the content grids. </param>
             <param name="propertyName">         Name of the property. </param>
             <param name="propertyValue">        The property value. </param>
             <param name="objectInfo">           The PropertyInfo for the object to retrieve additional
                                                 attributes from. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.UpdateEditField(System.Windows.Controls.Grid,System.String,System.Object,System.Reflection.PropertyInfo)">
             <summary>   Updates an already existing edit field within a value grid created by Populator.CreateEditFields </summary>
            
             <param name="valueGrid">        The grid holding the editable values. </param>
             <param name="propertyName">     Name of the property. </param>
             <param name="propertyValue">    The property value. </param>
             <param name="objectInfo">       The PropertyInfo for the object to retrieve additional
                                             attributes from. </param>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Common.Populator.InvalidInputForeground">
             <summary>
             Gets or sets the invalid input foreground brush that is applied to text boxes on which a
             conversion to the original data type fails.
             </summary>
            
             <value> The invalid input foreground. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Common.Populator.InvalidInputBackground">
             <summary>
             Gets or sets the invalid input background brush that is applied to text boxes on which a
             conversion to the original data type fails.
             </summary>
            
             <value> The invalid input background. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.GetEditFields(System.Windows.Controls.StackPanel)">
             <summary>
             Gets the contents of the edit fields created with SetEditFields(). The input is converted
             back to the original type. In case the conversion fails, the textbox background is set to
             InvalidInputBackground.
             </summary>
            
             <param name="propertiesStackPanel">    The stack panel holding all content grids </param>
            
             <returns>
             The names and contents of the edit fields or null if the input in any textbox can not be
             converted back to the original type.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.Populator.GetEditFields(System.Windows.Controls.Grid)">
             <summary>
             Gets the contents of the edit fields created with SetEditFields(). The input is converted
             back to the original type. In case the conversion fails, the textbox background is set to
             InvalidInputBackground.
             </summary>
            
             <param name="valueGrid">    The grid holding the editable values. </param>
            
             <returns>
             The names and contents of the edit fields or null if the input in any textbox can not be
             converted back to the original type.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Common.IVisibilityProvider">
            <summary>   Interface to provide information on whether an item is visible or not. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Common.IVisibilityProvider.IsVisible">
             <summary>   Gets or sets a value indicating whether a related object is visible. </summary>
            
             <value> true if this object is visible, false if not. </value>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Common.IVisibilityChanged">
            <summary>   For convenience, a pre-made Interface that combines the IVisibilityProvider with INotifyPropertyChanged. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Common.ScrollThumb">
            <summary>
            A simple scroll thumb without arrows. Also currently not theme-able and only suiting dark
            themes.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Common.ScrollThumb.ThumbBrush">
            <summary>   Gets or sets the thumb brush. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Common.ScrollThumb.HoverBrush">
            <summary>   Gets or sets the hover brush. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Common.ScrollThumb.PressedBrush">
            <summary>   Gets or sets the pressed brush. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Common.ScrollThumb.IsInversePortion">
             <summary>
             Allows to inverse the ThumbPortion logic so that 0 shows a maximum size thumb and 1 shows a
             minimum size thumb. This allows for easy binding to the ZoomScale properties of a VisualPlot.
             </summary>
            
             <value> true if this object is inverse portion, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Common.ScrollThumb.IsInversePortionProperty">
            <summary>   The is inverse portion property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Common.ScrollThumb.Orientation">
            <summary>   Gets or sets the orientation. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Common.ScrollThumb.OrientationProperty">
            <summary>   The orientation property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Common.ScrollThumb.ThumbPortion">
            <summary>   Gets or sets the thumb portion as a value from 0 to 1 relative to the controls width. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Common.ScrollThumb.ThumbPortionProperty">
            <summary>   The thumb portion property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Common.ScrollThumb.ThumbPosition">
            <summary>   Gets or sets the thumb position as a value from 0 to 1 relative to the maximum possible thumb position. </summary>        
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Common.ScrollThumb.ThumbPositionProperty">
            <summary>   The thumb position property. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.ScrollThumb.SetThumb(System.Double,System.Double)">
             <summary>   Sets both values at once to avoid intermediate conflicts. </summary>
            
             <param name="portion">  The portion. </param>
             <param name="position"> The position. </param>
        </member>
        <member name="E:Keysight.Aes.Asf.WPF.Common.ScrollThumb.ThumbMoved">
            <summary>
            Event queue for all listeners interested in ThumbMoved events. This is only called when the
            thumb was actually moved with the mouse.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.ScrollThumb.GeometryPropChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
             <summary>
             You can assign this callback to the property metadata of any dependency property that would
             cause recalculation of the geometry upon change.
             </summary>
            
             <param name="propertyOwner">    The owner of the property. </param>
             <param name="e">                Dependency property changed event information. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.ScrollThumb.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Common.VisibilityProvider">
            <summary>
            A class holding one single property to determine whether a related object shall be visible or
            not.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Common.VisibilityProvider.IsVisible">
             <summary>   Gets or sets a value indicating whether a related object is visible. </summary>
            
             <value> true if this object is visible, false if not. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.VisibilityProvider.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.VisibilityProvider.#ctor(System.Boolean)">
             <summary>   Constructor. </summary>
            
             <param name="isVisible">    true if this object is visible, false if not. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Common.WindowHelper">
            <summary>   Contains utility functions to help with window handling. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.WindowHelper.CreateHostWindow(System.Windows.UIElement,System.String,System.Double,System.Double,System.Boolean)">
             <summary>   Creates a window to host a user control. </summary>
            
             <param name="content">          The content. </param>
             <param name="title">            The title. </param>
             <param name="width">            The default window width. </param>
             <param name="height">           The default window height. </param>
             <param name="isRegularWindow">  true if this object is regular window. Otherwise a dialog
                                             window will be provided (which may be the same depending on
                                             the ApplicationServices overrides). </param>
            
             <returns>   The new host window. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.WindowHelper.BringToFront(System.Windows.Window)">
             <summary>
             Puts the window on top of all others (not permanently, just as a one-off action). You would
             typically use this when a menu item or button was clicked that is supposed to show a window
             which may already be opened.
             </summary>
            
             <param name="win">  The window. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Common.WindowHelper.ShowAsDialog(System.Windows.UIElement,System.String)">
             <summary>   Shows a UIElement as a modal dialog that can not be changed in size. </summary>
            
             <param name="content">  The content. </param>
             <param name="title">    The title. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Animations.AnimateGrid">
            <summary>   Contains helper methods to simplify the animation of GridColumns and Rows via their Definitions. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Animations.AnimateGrid.Column(System.Windows.Controls.ColumnDefinition,System.Double,System.TimeSpan,System.Windows.GridUnitType,System.EventHandler)">
             <summary>   Animate the width of a grid column. </summary>
            
             <param name="gridColumn">   The grid column to expand/collapse. </param>
             <param name="finalWidth">   The final width. </param>
             <param name="duration">     The duration. </param>
             <param name="unitType">     The width unit type. </param>
             <param name="onCompleted">  An optional on completed event handler. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Animations.AnimateGrid.Row(System.Windows.Controls.RowDefinition,System.Double,System.TimeSpan,System.Windows.GridUnitType,System.EventHandler)">
             <summary>   Animate the height of a grid row. </summary>
            
             <param name="gridRow">      The grid row to expand/collapse. </param>
             <param name="finalHeight">  The final height. </param>
             <param name="duration">     The duration. </param>
             <param name="unitType">     The height unit type. </param>
             <param name="onCompleted">  An optional on completed event handler. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Animations.Fade">
            <summary>  Implements panel fading animations. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Animations.Fade.In(System.Windows.UIElement,System.Nullable{System.TimeSpan})">
             <summary>   Fades in an UIElement. </summary>
            
             <param name="target">   The element to fade in. </param>
             <param name="duration"> The duration. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Animations.Fade.Out(System.Windows.UIElement,System.Nullable{System.TimeSpan})">
             <summary>   Fades out an UIElement. </summary>
            
             <param name="target">   The element to fade in. </param>
             <param name="duration"> The duration. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Animations.GridLengthAnimation">
            <summary>
            Enables animation on type GridLength (grid columns and rows)
            Taken from WpfToolkit
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Animations.GridLengthAnimation.TargetPropertyType">
             <summary>
             When overridden in a derived class, gets the <see cref="T:System.Type" /> of property that
             can be animated.
             </summary>
            
             <value> The type of property that can be animated by this animation. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Animations.GridLengthAnimation.CreateInstanceCore">
             <summary>
             When implemented in a derived class, creates a new instance of the
             <see cref="T:System.Windows.Freezable" /> derived class.
             </summary>
            
             <returns>   The new instance. </returns>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Animations.GridLengthAnimation.FromProperty">
            <summary>
            From Dependency Property
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Animations.GridLengthAnimation.From">
            <summary>
            Gets or sets the From property. This dependency property 
            indicates the from value of the animation.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Animations.GridLengthAnimation.ToProperty">
            <summary>
            To Dependency Property
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Animations.GridLengthAnimation.To">
            <summary>
            Gets or sets the To property. This dependency property 
            indicates the to value of the animation.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Animations.GridLengthAnimation.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
             <summary>   Gets the current value of the animation. </summary>
            
             <param name="defaultOriginValue">       The origin value provided to the animation if the
                                                     animation does not have its own start value. If this
                                                     animation is the first in a composition chain it will
                                                     be the base value of the property being animated;
                                                     otherwise it will be the value returned by the
                                                     previous animation in the chain. </param>
             <param name="defaultDestinationValue">  The destination value provided to the animation if
                                                     the animation does not have its own destination
                                                     value. </param>
             <param name="clock">                    The clock. </param>
            
             <returns>
             The value this animation believes should be the current value for the property.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Animations.Wipe">
            <summary>   Implements horizontal panel wipe animations. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Animations.Wipe.In(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Nullable{System.TimeSpan},System.Windows.HorizontalAlignment)">
             <summary>
             Animates a panel horizontally to the full width of the parent control. Typically you would
             set the panels width to zero before starting the animation. When the animation has finished,
             the panel is configured to automatically adjust itself to its parent's width.
             </summary>
            
             <param name="panel">        The panel. </param>
             <param name="parent">       The parent. </param>
             <param name="duration">     The duration. </param>
             <param name="direction">    The direction. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Animations.Wipe.Out(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Nullable{System.TimeSpan},System.Windows.HorizontalAlignment)">
             <summary>   Animates a panel horizontally to zero width. </summary>
            
             <param name="panel">        The panel. </param>
             <param name="parent">       The parent. </param>
             <param name="duration">     The duration. </param>
             <param name="direction">    The direction. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Dialogs.DisplayTriggerActions">
            <summary>   The possible effects on a dependent category or property if the attributed property triggers. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Dialogs.DisplayTriggerActions.Hide">
            <summary>   Hides the dependent object. For every non listed value, the dependent object will be shown. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Dialogs.DisplayTriggerActions.Show">
            <summary>   Shows the dependent object. For every non listed value, the dependent object will be hidden. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Dialogs.DisplayTriggerActions.Disable">
            <summary>   Disables the dependent object. For every non listed value, the dependent object will be enabled. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Dialogs.DisplayTriggerActions.Enable">
            <summary>   Enables the dependent object. For every non listed value, the dependent object will be disabled. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Dialogs.DisplayTriggerAttribute">
             <summary>
             This attribute allows a boolean or enum property to modify the appearance (Visibility or
             Enabled) of another attribute or category created by the populator.
             </summary>
            
             <example>
             Decorate a public property and reference the other property by name, the action it causes on the
             attributed property and the value on the referenced property that causes the action.
             <code>
               [DisplayName(&quot;Thermal Sensor Type&quot;)]
               [DisplayTrigger(nameof(AutocalIterations), DisplayTriggerActions.Enable, true)]
               public ThermalSensorTypes ThermalSensorType { get; set; } = ThermalSensorTypes.Unspecified;
             </code>
             </example>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.DisplayTriggerAttribute.TriggerValues">
             <summary>   Gets the trigger values. </summary>
            
             <value> The trigger values. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.DisplayTriggerAttribute.DependencyObjectName">
             <summary>   Gets the name of the dependency object. </summary>
            
             <value> The name of the dependency object. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.DisplayTriggerAttribute.Action">
             <summary>   Gets the action to perform on trigger. </summary>
            
             <value> The action. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.DisplayTriggerAttribute.GetActionForValue(System.Object)">
             <summary>   Gets the action to perform for a particular value. </summary>
            
             <param name="value">    The value. </param>
            
             <returns>   The action for value. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.DisplayTriggerAttribute.#ctor(System.String,Keysight.Aes.Asf.WPF.Dialogs.DisplayTriggerActions,System.Object[])">
             <summary>   Constructor. </summary>
            
             <param name="targetPropertyOrCategory">   The category or property name that is affected by this trigger. </param>
             <param name="action">               The action to perform on the category or property. </param>
             <param name="triggerValues">        All those values of the decorated property that shall cause the action. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Dialogs.FileSelectorAttribute">
            <summary>
            This attribute allows to mark a string as a path to a file and have the UI support a property
            representation with a file selector.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.FileSelectorAttribute.IsDirectory">
             <summary>   Gets or sets a value indicating whether a folder selector shall be shown. </summary>
            
             <value> true if this object is a directory, false if not. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.FileSelectorAttribute.ShowFullPath">
             <summary>   Gets or sets a value indicating whether full path should be shown. </summary>
            
             <value> true if full path should be shown, otherwise only folder/file name </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.FileSelectorAttribute.Filter">
             <summary>   Gets or sets the file mask. </summary>
            
             <value> The file mask. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.FileSelectorAttribute.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.FileSelectorAttribute.#ctor(System.Boolean,System.Boolean)">
            <summary>   Constructor to configure Attribute with 2 params </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.FileSelectorAttribute.#ctor(System.String)">
             <summary>   Constructor taking a file mask. </summary>
            
             <param name="filter"> The file mask according to the FileDialog standards, e.g. &quot;Text files (*.txt)|*.txt|All files (*.*)|*.*&quot;. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Dialogs.LayoutMarginAttribute">
            <summary>   Attribute to add a margin to a visualized property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.LayoutMarginAttribute.Margin">
            <summary>   Gets the margin. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.LayoutMarginAttribute.#ctor(System.Windows.Thickness)">
             <summary>   Constructor. </summary>
            
             <param name="margin">   The margin to use for laying out this property. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.LayoutMarginAttribute.#ctor(System.Double)">
             <summary>   Constructor. </summary>
            
             <param name="margin">   The margin in all directions. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.LayoutMarginAttribute.#ctor(System.Double,System.Double)">
             <summary>   Constructor. </summary>
            
             <param name="horizontalMargin"> The horizontal margin. </param>
             <param name="verticalMargin">   The vertical margin. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.LayoutMarginAttribute.#ctor(System.Double,System.Double,System.Double,System.Double)">
             <summary>   Constructor. </summary>
            
             <param name="left">     The left margin. </param>
             <param name="top">      The top margin. </param>
             <param name="right">    The right margin. </param>
             <param name="bottom">   The bottom margin. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Dialogs.PropertyFileSelector">
            <summary>   A control that can be used by the Populator to offer a file selector for a property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.PropertyFileSelector.FullPath">
             <summary>   Gets or sets the currently selected file or folder name including the path. </summary>
            
             <value> The filename of the full file. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.PropertyFileSelector.#ctor(Keysight.Aes.Asf.WPF.Dialogs.FileSelectorAttribute)">
             <summary>   Constructor. </summary>
            
             <param name="selectorAttribute">    The file selector attribute. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Dialogs.VisaInstrumentAttribute">
            <summary>
            Attribute for properties that refer to a visa instrument address. This can add controls to a
            dialog derived from a property setup class which may help the user find and / or identify an
            instrument.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.VisaInstrumentAttribute.ModelNumbers">
             <summary>   Gets or sets the model numbers. </summary>
            
             <value> The model numbers. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.VisaInstrumentAttribute.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.VisaInstrumentAttribute.#ctor(System.Object[])">
             <summary>   Constructor taking allowed model numbers. Model numbers may contain wildcards "?" and "*". </summary>
            
             <param name="modelNumbers"> The model numbers. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Dialogs.DialogPresenter">
            <summary>
            This is a window that adds an OK and a Cancel button to a UserControl and presents it as a
            modal dialog. By default, the window is resizable, but you can change ResizeMode to lock 
            the size if needed.
            </summary>
            <example>
            <code>
                MyUserControl dialogContent = new MyUserControl();
                DialogPresenter window = new DialogPresenter() { Title = "My Dialog", ResizeMode = ResizeMode.NoResize };
                bool? result = window.Present(dialogContent);
            </code>
            </example>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Dialogs.DialogPresenter.CheckForOk">
             <summary>
             The method signature for the delegate you can provide to check things when OK is clicked.
             </summary>
            
             <returns>   True if everything is OK (the dialog will then be closed and DialogResult = true is returned). </returns>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Dialogs.DialogPresenter.OnCheckForOk">
            <summary>   Provide a delegate here if you need to check things when OK is clicked. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.DialogPresenter.Title">
            <summary>   Gets or sets the window title. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.DialogPresenter.WindowStartupLocation">
            <summary>
            Gets or sets the window startup location.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.DialogPresenter.OkButtonText">
            <summary>
            Customize the text on the OK button if neccessary
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.DialogPresenter.CancelButtonText">
            <summary>
            Customize the text on the OK button if neccessary
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.DialogPresenter.UserContent">
             <summary>
             A reference to the UserControl that was passed in on Present(). You can access this e.g. from
             the OnCheckForOk callback.
             </summary>
            
             <value> The user content. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.DialogPresenter.#ctor(System.Windows.Window,System.Nullable{System.Double},System.Nullable{System.Double},System.Boolean,System.Boolean)">
             <summary>
             Constructor optionally taking a hosting window that may be of a different type than the
             regular WPF window created by the default constructor.
             </summary>
            
             <param name="dialogWindow">     The dialog window. </param>
             <param name="initialWidth">     Initial Width of the window or null to auto adjust to the
                                             content. </param>
             <param name="initialHeight">    Initial Height of the window or null to auto adjust to the
                                             content. </param>
             <param name="isFixedSize">      true if the dialog window shall be fixed in size. </param>
             <param name="makeModal">        true to make the window applicationwide modal by making the MainWindow the owner. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.DialogPresenter.Present(System.Windows.Controls.UserControl)">
             <summary>   Presents the given content in a modal dialog window, adding "OK" and "Cancel" buttons. </summary>
            
             <param name="content">  The UserControl to show. </param>
            
             <returns>   true if the user clicked ok </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Dialogs.EnumBlacklistAttribute">
            <summary>
            This attribute allows for excluding enum entries from the list of available options when
            using the Populator to create an edit dialog from class properties.
            </summary>
            <example>
            Decorate a public property by just listing the forbidden enum values:
            <code>
              [DisplayName(&quot;Thermal Sensor Type&quot;)]
              [EnumBlacklist(ThermalSensorTypes.Thermistor_2252, ThermalSensorTypes.Thermistor_5000)]
              public ThermalSensorTypes ThermalSensorType { get; set; } = ThermalSensorTypes.Unspecified;
            </code>
            </example>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.EnumBlacklistAttribute.ForbiddenValues">
             <summary>   Gets the forbidden values. </summary>
            
             <value> The forbidden values. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.EnumBlacklistAttribute.#ctor(System.Object[])">
             <summary>   Constructor. </summary>
            
             <param name="forbiddenValues">  The forbidden values. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Dialogs.EnumLister">
            <summary>
            A little wrapper class for Enums that allows to populate a ListBox or ComboBox with items
            from an enum using the Description Attributes instead of just the item name.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.EnumLister.EnumValue">
             <summary>   Gets or sets the item from the enum. </summary>
            
             <value> The enum value. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.EnumLister.ToString">
             <summary>   Returns a string taken from the DescriptionAttribute if present.  </summary>
            
             <returns>   A string that represents the enum item. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.EnumLister.#ctor(System.Enum)">
             <summary>   Constructor. </summary>
            
             <param name="value">    An enum constant. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.EnumLister.GetEnumListerItems(System.Type,System.Collections.Generic.IEnumerable{System.Attribute})">
             <summary>
             Creates a list of EnumItems from an enmu that can be used as the ItemsSource for a ListBox or
             ComboBox.
             </summary>
            
             <param name="enumType">         Type of the enum. </param>
             <param name="customAttributes"> The custom attributes of the refering property (e.g. holding EnumBlacklist and Whitelist attributes). </param>
            
             <returns>
             An enumerator that allows foreach to be used to process the enum lister items in this
             collection.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Dialogs.EnumWhitelistAttribute">
            <summary>
            This attribute allows for listing only the allowed enum entries from the list of available options when
            using the Populator to create an edit dialog from class properties.
            </summary>
            <example>
            Decorate a public property by just listing the allowed enum values:
            <code>
              [DisplayName(&quot;Thermal Sensor Type&quot;)]
              [EnumWhitelist(ThermalSensorTypes.Thermistor_2252, ThermalSensorTypes.Thermistor_5000)]
              public ThermalSensorTypes ThermalSensorType { get; set; } = ThermalSensorTypes.Unspecified;
            </code>
            </example>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Dialogs.EnumWhitelistAttribute.AllowedValues">
             <summary>   Gets the allowed values. </summary>
            
             <value> The allowed values. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Dialogs.EnumWhitelistAttribute.#ctor(System.Object[])">
             <summary>   Constructor. </summary>
            
             <param name="allowedValues">    The allowed values. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Plotting.PlotBrush">
            <summary>
            This class defines both a Pen that is used to draw the (out)line of a plot and a Brush that
            is used to fill the plot region.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotBrush.PlotOutline">
             <summary>   Gets or sets the pen to draw the plot's outline. </summary>
            
             <value> The plot outline. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotBrush.PlotFill">
             <summary>   Gets or sets the brush to draw the plot's fill. </summary>
            
             <value> The plot fill. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.PlotBrush.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.PlotBrush.#ctor(System.Windows.Media.Pen,System.Windows.Media.Brush)">
             <summary>   Constructor. </summary>
            
             <param name="outline">  The outline pen. </param>
             <param name="fill">     The fill brush. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.PlotBrush.#ctor(System.Windows.Media.Brush,System.Windows.Media.Pen)">
             <summary>   Constructor. </summary>
            
             <param name="outline">  The outline pen. </param>
             <param name="fill">     The fill brush. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Plotting.PlotBrushCollections">
            <summary>   A collections of predefined brushes and pens for plotting graphs. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotBrushCollections.Primary">
            <summary>   Contains colors towards the lower frequencies of the color spectrum. Fills are half transparent, pens are 1 pix width. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotBrushCollections.Secondary">
            <summary>   Contains colors towards the higher frequencies of the color spectrum. Fills are half transparent, pens are 1 pix width. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Plotting.PlotIndicator">
            <summary>   An indicator that can be layered on top of a plot that draws a vertical line with additional triangles at the top and bottom. </summary>
        </member>
        <member name="E:Keysight.Aes.Asf.WPF.Plotting.PlotIndicator.IndicatorChangeRequested">
            <summary>
            Invoked when the user clicked in the active area. The desired new position is given from 0.0
            (far left) to 1.0 (far right) and it's up to the consumer to decide whether this (or another)
            value is fed back to the control's IndexerValue property.
            
            If however IsChangeOnClick is set to true, this event is not fired and the IndexerValue is
            changed directly instead. The consumer can then bind or subscribe to the IndexerValue
            DependencyProperty.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotIndicator.IsChangingOnClick">
             <summary>
             Determines whether the IndexerValue will automatically change to the appropriate position if
             the user clicks in a different area. When set to false, the IndicatorChangeRequested event is
             fired instead.
             </summary>
            
             <value> true if this object is changing on click, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotIndicator.IsChangingOnClickProperty">
            <summary>   The is changing on click property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotIndicator.IndicatorBrush">
             <summary>   Gets or sets the indicator brush. </summary>
            
             <value> The indicator brush. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotIndicator.IndicatorBrushProperty">
            <summary>   The indicator brush property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotIndicator.IndicatorValue">
             <summary>   Gets or sets the indexer value (normalized from 0.0 = far left to 1.0 = far right). </summary>
            
             <value> The indexer value. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotIndicator.IndicatorValueProperty">
            <summary>   The indexer value property. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.PlotIndicator.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox">
             <summary>
             A control that can be layered on top of one ore more VisualPlot controls. When hovering with
             the mouse, it will provide a tooltip and crosspoint highlite to give an exact readout of all
             the graphs at the mouse's X position. It also supports pan with the scrollwheel and zoom
             by click and drag.
            
             It will automatically show all data from the plots within the same leaf of the VisualTree. If
             you want to refer other plots as well, you can use the AddAdditionalPlotReference method. For
             example when using the TwinScrolling plot with two plots synced in X, you may want to show
             extra data from plot B while hovering over plot A.
            
             The control assumes that the X data for all graphs (across all plots) are the same and will
             show only that of the first evaluated plot.
             </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.ToolTipModes">
            <summary>   Values that represent tool tip modes. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.ToolTipModes.AllVertical">
            <summary>   All data on the vertical line corresponding the mouse position is displayed in the tooltip. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.ToolTipModes.ClosestVertical">
            <summary>   Only the one point on the vertical line that is closest to the mouse is displayed. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.ToolTipModes.ClosestAndRelated">
            <summary>   The closest point in any plot determines the graph index from each layer for which the information is displayed. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.ToolTipMode">
             <summary>   Gets or sets the tool tip mode. </summary>
            
             <value> The tool tip mode. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.ToolTipModeProperty">
            <summary>   The tool tip mode property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.IsToolTipEnabled">
             <summary>   Gets or sets a value indicating whether the tool tip is enabled. </summary>
            
             <value> true if the tool tip is enabled, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.IsToolTipEnabledProperty">
            <summary>   The is tool tip enabled property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.XValueFormatter">
             <summary>   Gets or sets the value formatter for the X values in the tooltip. </summary>
            
             <value>
             The x coordinate value formatter. The formatter is receiving the X value to show and shall
             return the string to put on screen.
             </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.XValueFormatterProperty">
            <summary>   The x value formatter property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.YValueFormatter">
             <summary>   Gets or sets the value formatter for the Y values in the tooltip. </summary>
            
             <value>
             The y coordinate value formatter. The provided data is the Collector's column name and the
             value.
             </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.YValueFormatterProperty">
            <summary>   The y value formatter property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.UseCtrlForZoomScroll">
             <summary>
             Determines whether the user has to hold down control to zoom with the scrollwheel.
             </summary>
            
             <value> true if use control for zoom scroll, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.UseCtrlForZoomScrollProperty">
            <summary>   The use control for zoom scroll property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.PanZoomVM">
             <summary>   Gets or sets the pan zoom viewmodel. </summary>
            
             <value> The pan zoom viewmodel. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.PanZoomVMProperty">
            <summary>   The pan zoom virtual memory property. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.AddAdditionalPlotReference(Keysight.Aes.Asf.WPF.Plotting.VisualPlot)">
             <summary>
             Adds an additional plot reference for those plots that are not within the same parent control
             but the values of which shall appear in the tooltip.
             </summary>
            
             <param name="reference">    The VisualPlot. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.ClearAdditionalPlotReferences">
            <summary>   Clears all the additional plot references. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.PlotToolBox.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Plotting.PlotUnitsDiv">
            <summary>   A label that displays the units per division in a plot. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotUnitsDiv.Formatter">
             <summary>   Gets or sets an optional custom formatter for the label. </summary>
            
             <value> The formatter. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotUnitsDiv.FormatterProperty">
            <summary>   The formatter property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotUnitsDiv.ScaleMax">
             <summary>   Gets or sets the top value for the scale. </summary>
            
             <value> The scale maximum. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotUnitsDiv.ScaleMaxProperty">
            <summary>   The scale maximum property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotUnitsDiv.ScaleMin">
             <summary>   Gets or sets the bottom value for the scale. </summary>
            
             <value> The scale minimum. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotUnitsDiv.ScaleMinProperty">
            <summary>   The scale minimum property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotUnitsDiv.ScaleLabel">
             <summary>
             Gets or sets the scale label. This is supposed to contain the unit in brackets, e.g. "Voltage
             [V]". This control will derive the unit from this label.
             </summary>
            
             <value> The scale label. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotUnitsDiv.ScaleLabelProperty">
            <summary>   The scale label property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotUnitsDiv.GridLineCount">
             <summary>   Gets or sets the number of grid lines on screen. This includes the outer lines, so the actual divisions is one less than this number. </summary>
            
             <value> The number of grid lines. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotUnitsDiv.GridLineCountProperty">
            <summary>   The grid line count property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotUnitsDiv.SignificantDigits">
             <summary>   Gets or sets the number of significant digits to display. </summary>
            
             <value> The significant digits. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotUnitsDiv.SignificantDigitsProperty">
            <summary>   The significant digits property. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.PlotUnitsDiv.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.PlotUnitsDiv.OnGeometryChange">
            <summary>
            Implement this to update your visual content when the provided data or available plot area
            has changed.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Plotting.VisualContainer">
            <summary>
            A base class that contains functionality shared among controls that need fast drawing. The
            base class hosts a visual collection that a derived class can add it's DrawingVisuals to.
            Also a Pen for outlining and a Brush for filling are hosted as dependency properties.
            For examples on how to create derived classes and how to draw into a DrawingVisual, see
            the implementations of the VisualGrid and VisualPlot.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.Children">
            <summary>   Gets the collection of drawing primitives. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.Padding">
            <summary>   Gets or sets the inner margin not to use for the plot. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.PaddingProperty">
            <summary>   The padding property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.Outline">
            <summary>   Gets or sets the pen for drawing the visual's outline. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.OutlineProperty">
            <summary>   The outline property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.Fill">
            <summary>   Gets or sets the brush to fill the visual. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.FillProperty">
            <summary>   The fill property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.AvailablePlotWidth">
            <summary>   Gets the width of the available plot area. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.AvailablePlotHeight">
            <summary>   Gets the height of the available plot area. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.GeometryPropChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
             <summary>
             You can assign this callback to the property metadata of any dependency property that would
             cause recalculation of the geometry upon change.
             </summary>
            
             <param name="propertyOwner">    The owner of the property. </param>
             <param name="e">                Dependency property changed event information. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.BrushPropChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
             <summary>
             You can assign this callback to the property metadata of any dependency property that would
             cause recalculation of the drawing brush upon change.
             </summary>
            
             <param name="propertyOwner">    The owner of the property. </param>
             <param name="e">                Dependency property changed event information. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.VisualChildrenCount">
             <summary>   Gets the number of visual child elements within this element. </summary>
            
             <value> The number of visual child elements for this element. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.GetVisualChild(System.Int32)">
             <summary>
             Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />, and
             returns a child at the specified index from a collection of child elements.
             </summary>
            
             <exception cref="T:System.ArgumentOutOfRangeException">  Thrown when one or more arguments are outside
                                                             the required range. </exception>
            
             <param name="index">    The zero-based index of the requested child element in the
                                     collection. </param>
            
             <returns>
             The requested child element. This should not return null; if the provided index is out of
             range, an exception is thrown.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.OnGeometryChanged">
            <summary>   Implement this to update your visual content when the provided data or available plot area has changed. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualContainer.OnBrushChanged">
            <summary>
            Override this to update the visual's outline pen and fill brush when any of their properties have changed.
            The base implementation will call Freeze() on both where applicable.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Plotting.GeometryContainer">
            <summary>   A base class that contains functionality shared among plotting controls. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.GeometryContainer._plotMargin">
            <summary>   The plot margin. Do not plot in this area. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryContainer.PlotMargin">
             <summary>   Gets or sets the margin not to use for the plot. </summary>
            
             <value> The plot margin. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryContainer.AvailablePlotWidth">
            <summary>   Gets the width of the available plot area. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryContainer.AvailablePlotHeight">
            <summary>   Gets the height of the available plot area. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryContainer.PlotBrush">
            <summary>   Gets or sets the brush for drawing the plot. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.GeometryContainer.PlotBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for PlotBrush.  This enables animation,
            styling, binding, etc...
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.GeometryContainer._plotStrokeSize">
            <summary>   Size of the plot stroke. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryContainer.PlotStrokeSize">
             <summary>   Gets or sets the size of the plot stroke. </summary>
            
             <value> The size of the plot stroke. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.GeometryContainer.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.GeometryContainer.OnGeometryChange">
            <summary>   Implement this to update your visual content when the provided data or available plot area has changed. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.GeometryContainer.OnBrushChange">
            <summary>   Implement this to update the plot brush when any of their properties have changed. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Plotting.GeometryGrid">
            <summary>   A simple control to draw a grid behind or in front of one or several plot controls. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryGrid.VerticalGridLines">
             <summary>   Gets or sets the number vertical grid lines. </summary>
            
             <value> The vertical grid lines. </value>        
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryGrid.HorizontalGridLines">
             <summary>   Gets or sets the number of horizontal grid lines. </summary>
            
             <value> The horizontal grid lines. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryGrid.PlotStrokeDashArray">
             <summary>   Gets or sets a collection of Double values that indicate the pattern of dashes and gaps that is used to plot the grid line. </summary>
            
             <value> An Array of plot stroke dashes. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.GeometryGrid.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.GeometryGrid.OnGeometryChange">
            <summary>
            Implement this to update your visual content when the provided data or available plot area
            has changed.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.GeometryGrid.OnBrushChange">
            <summary>
            Implement this to update the plot brush when any of their properties have changed.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Plotting.PlotScale">
            <summary>   A scale of numbers / digits that goes next or below a plot. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotScale.IndexFormatter">
             <summary>
             This can optionally be set to provide a formatter for a scale index that is printed on
             screen. Here you can assign a formatter that receives full information about the whole range
             of the scale.
             With no formatter assigned, a default formatter showing up to three digits plus exponent
             will be used.
             </summary>
            
             <value> The index formatter. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotScale.IndexFormatterProperty">
            <summary>   The index formatter property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotScale.Padding">
            <summary>   Gets or sets the inner margin not to use for the plot. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotScale.PaddingProperty">
            <summary>   The padding property. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotScale.FontSizeProperty">
            <summary>   The font size property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotScale.ScaleMax">
             <summary>   Gets or sets the top value for the scale. </summary>
            
             <value> The scale maximum. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotScale.ScaleMaxProperty">
            <summary>   The scale maximum property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotScale.ScaleMin">
             <summary>   Gets or sets the bottom value for the scale. </summary>
            
             <value> The scale minimum. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotScale.ScaleMinProperty">
            <summary>   The scale minimum property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotScale.LabelCount">
             <summary>   Gets or sets the number of numerical labels on the vertical scale. You can set this to zero for an automatic mode. </summary>
            
             <value> The number of grid lines. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotScale.LabelCountProperty">
            <summary>   The label count property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotScale.AvailablePlotWidth">
            <summary>   Gets the width of the available plot area. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotScale.AvailablePlotHeight">
            <summary>   Gets the height of the available plot area. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotScale.ScaleOrientation">
             <summary>   Gets or sets the scale orientation. </summary>
            
             <value> The scale orientation. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotScale.FontBrush">
             <summary>   Gets or sets the font brush used for the labels on the scale. </summary>
            
             <value> The font brush. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.PlotScale.FontBrushProperty">
            <summary>   The font brush property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.PlotScale.FontSize">
             <summary>   Gets or sets the size of the font for the scale labels. </summary>
            
             <value> The size of the font. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.PlotScale.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.PlotScale.OnGeometryChange">
            <summary>
            Implement this to update your visual content when the provided data or available plot area
            has changed.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.PlotScale.OnBrushChange">
            <summary>
            Implement this to update the plot brush when any of their properties have changed.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi">
            <summary>
            A plot control that will draw a graphical representation of Y only or combined X/Y data. This
            implementation uses GDI commands in an attempt to achieve WinForms like performance.
            Currently the control suffers from flicker during drawing updates.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.AutoAggregate">
            <summary>
            Gets or sets a value indicating whether the displayed data will automatically be aggregated
            during a render pass. You can set this to false for large amounts of data that you want to
            aggregate externally and not on each change of the controls size etc.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.AutoAggregateProperty">
            <summary>   The automatic aggregate property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.AggregateMethod">
            <summary>   Gets or sets the aggregate method to use for a single line plot. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.AggregateMethodProperty">
            <summary>   The aggregate method property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.AggregateOverscan">
            <summary>
            Gets or sets the factor that determines the amount of data points to aggregate in relation to
            the control's actual width. E.g. at 1.0 exactly one data point per screen pixel is derived,
            at 2.0 it's two points per pixel resulting in a smoother curve.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.AggregateOverscanProperty">
            <summary>   The aggregate overscan property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.MinMaxPlot">
             <summary>
             Gets or sets a value indicating whether the whole area between the minimum and maximum curves
             of an aggregate should be plotted. If not, a single curve is plotted using the selected AggregateMethod.
             </summary>
            
             <value> true if area plot, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.MinMaxPlotProperty">
            <summary>   The minimum maximum plot property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.AreaFill">
             <summary>
             Gets or sets a value indicating whether the area between the line of the first and last plot point and
             the plot curve shall be filled in with color. If you want to show the integral area, make sure your first
             and last curve points have a Y value of zero or you set the AutoIntegralFill option to true.
             </summary>
            
             <value> true if area plot, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.AreaFillProperty">
            <summary>   The area plot property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.AutoIntegralFill">
             <summary>
             Gets or sets a value indicating whether the filled area (with AreaFill set to true) will
             automatically be adjusted to start and end on the 0 position of the Y axis.
             </summary>
            
             <value> true if automatic integral fill, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.AutoIntegralFillProperty">
            <summary>   The automatic integral fill property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.VScaleFixMin">
             <summary>
             Gets or sets the minimum value on the vertical scale. You can set this to double.NaN to
             auto scale to the lowest value in the data set.
             </summary>
            
             <value> The vertical scale minimum. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.VScaleFixMax">
             <summary>
             Gets or sets the maximum value on the vertical scale. You can set this to double.NaN to
             auto scale to the highest value in the data set.
             </summary>
            
             <value> The vertical scale minimum. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.VScaleMin">
            <summary>   Gets or sets the vertical scale minimum. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.VScaleMinProperty">
            <summary>   The vertical scale minimum dependency property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.VScaleMax">
            <summary>   Gets or sets the vertical scale maximum. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.VScaleMaxProperty">
            <summary>   The vertical scale maximum dependency property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.HScaleMin">
            <summary>   Gets or sets the horizontal scale minimum. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.HScaleMinProperty">
            <summary>   The horizontal scale minimum dependency property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.HScaleMax">
            <summary>   Gets or sets the horizontal scale maximum. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.HScaleMaxProperty">
            <summary>   The horizontal scale maximum dependency property. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.ClearData">
            <summary>   Clears the plot. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.SetData(System.Collections.Generic.IEnumerable{System.Double})">
             <summary>
             Sets the Y values and distributes them evenly among the available horizontal space of the
             control.
             </summary>
            
             <param name="data"> The data. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.AddData(System.Collections.Generic.IEnumerable{System.Double})">
             <summary>
             Adds data to the existing plot. Note that if you started the plot with whole Data Points, the
             presumed x positions of the additional points will probably not make any sense at all.
             </summary>
            
             <param name="data"> The data. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.SetData(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double})">
             <summary>
             Sets the data points for the plot. The plot will be scaled to the total available space of
             the control.
             </summary>
            
             <param name="dataX">    The data x coordinates. </param>
             <param name="dataY">    The data y coordinates. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.AddData(System.Double,System.Double)">
             <summary>
             Adds a data point to the plot.
             </summary>
            
             <param name="dataX">    The data x coordinate. </param>
             <param name="dataY">    The data y coordinate. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.SetDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})">
             <summary>
             Sets the data points for the plot. The plot will be scaled to the total available space of
             the control.
             </summary>
            
             <param name="data"> The data. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.AddDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})">
             <summary>   Adds data points to the existing plot. </summary>
            
             <param name="data"> The data. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlotGdi.OnGeometryChanged">
            <summary>
            Implement this to update your visual content when the provided data or available plot area
            has changed.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Plotting.VisualPlot">
            <summary>
            A plot control that will draw a graphical representation of Y only or combined X/Y data. It
            makes use of WPF Visuals which do not keep a reference to the actually drawn pixels (it works
            more like the GDI drawing commands). Hence it's faster than using a Geometry based plot. If
            your application needs performance and you do not plan on offering user interaction, this is
            the recommended control. Otherwise, the GeometryPlot is likely a better alternative.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.AutoAggregate">
            <summary>
            Gets or sets a value indicating whether the displayed data will automatically be aggregated
            during a render pass. You can set this to false for large amounts of data that you want to
            aggregate externally and not on each change of the controls size etc.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.AutoAggregateProperty">
            <summary>   The automatic aggregate property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.AggregateMethod">
            <summary>   Gets or sets the aggregate method to use for a single line plot. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.AggregateMethodProperty">
            <summary>   The aggregate method property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.AggregateOverscan">
            <summary>
            Gets or sets the factor that determines the amount of data points to aggregate in relation to
            the control's actual width. E.g. at 1.0 exactly one data point per screen pixel is derived,
            at 2.0 it's two points per pixel resulting in a smoother curve and at 0.5 it's one plot point
            every two screen pixels resulting in better WPF drawing performance.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.AggregateOverscanProperty">
            <summary>   The aggregate overscan property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.OverscalePercent">
             <summary>
             Gets or sets the overscale. This is the extra amount of numberspace that is added in
             autoscale mode to the top and bottom of the plot. E.g. if you want to have a full height of
             120% of what the plot data would consume, put in 120. If you use numbers &lt; 100, the plot will
             be clipped.
             </summary>
            
             <value> The overscale. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.OverscalePercentProperty">
            <summary>   The overscale percent property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.MinMaxPlot">
             <summary>
             Gets or sets a value indicating whether the whole area between the minimum and maximum curves
             of an aggregate should be plotted. If not, a single curve is plotted using the selected AggregateMethod.
             </summary>
            
             <value> true if area plot, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.MinMaxPlotProperty">
            <summary>   The minimum maximum plot property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.AreaFill">
             <summary>
             Gets or sets a value indicating whether the area between the line of the first and last plot point and
             the plot curve shall be filled in with color. If you want to show the integral area, make sure your first
             and last curve points have a Y value of zero or you set the AutoIntegralFill option to true.
             </summary>
            
             <value> true if area plot, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.AreaFillProperty">
            <summary>   The area plot property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.AutoIntegralFill">
             <summary>
             Gets or sets a value indicating whether the filled area (with AreaFill set to true) will
             automatically be adjusted to start and end on the 0 position of the Y axis.
             </summary>
            
             <value> true if automatic integral fill, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.AutoIntegralFillProperty">
            <summary>   The automatic integral fill property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.VScaleFixMin">
             <summary>
             Gets or sets the minimum value on the vertical scale. You can set this to double.NaN to
             auto scale to the lowest value in the data set.
             </summary>
            
             <value> The vertical scale minimum. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.VScaleFixMinProperty">
            <summary>   The scale fix minimum property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.VScaleFixMax">
             <summary>
             Gets or sets the maximum value on the vertical scale. You can set this to double.NaN to
             auto scale to the highest value in the data set.
             </summary>
            
             <value> The vertical scale minimum. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.VScaleFixMaxProperty">
            <summary>   The scale fix maximum property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.VScaleMinSpan">
             <summary>
             Gets or sets the minimum span of the vertical scale. 0 means no minimum and the scale is
             always fitted to the actual plot values span.
             </summary>
            
             <value> The v scale minimum span. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.VScaleMinSpanProperty">
            <summary>   The scale minimum span property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.IsVScaleSpanIncludingHiddenGraphs">
             <summary>
             Gets or sets a value indicating whether the automatic vertical scaling this object is v scale span including hidden
             graphs.
             </summary>
            
             <value> true if this object is v scale span including hidden graphs, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.IsVScaleSpanIncludingHiddenGraphsProperty">
            <summary>   The is v scale span including hidden graphs property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.IsVScaleSpanIncludingOutsideData">
             <summary>
             Gets or sets a value indicating whether the automatic vertical scaling takes the graph data
             into account that is currently outside the horizontal bounds or not.
             </summary>
            
             <value> true if this object is v scale span including outside data, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.IsVScaleSpanIncludingOutsideDataProperty">
            <summary>   The is v scale span including outside data property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.VScaleMin">
            <summary>   Gets or sets the vertical scale minimum. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.VScaleMinProperty">
            <summary>   The vertical scale minimum dependency property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.VScaleMax">
            <summary>   Gets or sets the vertical scale maximum. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.VScaleMaxProperty">
            <summary>   The vertical scale maximum dependency property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.HScaleMin">
            <summary>   Gets or sets the horizontal scale minimum. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.HScaleMinProperty">
            <summary>   The horizontal scale minimum dependency property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.HScaleMax">
            <summary>   Gets or sets the horizontal scale maximum. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.HScaleMaxProperty">
            <summary>   The horizontal scale maximum dependency property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.IsZoomLogarithmic">
            <summary>
            Gets or sets a value indicating whether this object is providing logarithmic zoom on the
            provided zoom factors.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.IsZoomLogarithmicProperty">
            <summary>   The is zoom logarithmic property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.VZoomFactor">
             <summary>   Gets the vertical zoom factor which is the MaxZoomScale multiplied by the current (normalized) VZoomScale. </summary>
            
             <value> The v zoom factor. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.HZoomFactor">
             <summary>   Gets the horizontal zoom factor which is the MaxZoomScale multiplied by the current (normalized) HZoomScale. </summary>
            
             <value> The h zoom factor. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.MaxZoomScale">
            <summary>   Gets or sets the maximum zoom scale for V/HZoomScale = 1. Must be >= 1. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.MaxZoomScaleProperty">
            <summary>   The maximum zoom scale property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.VZoomScale">
            <summary>   Gets or sets the vertical zoom scale. Must be between 0 and 1, 0 meaning fully zoomed out and 1 meaning fully zoomed in to MaxZoomScale.</summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.VZoomScaleProperty">
            <summary>   The zoom scale property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.HZoomScale">
            <summary>   Gets or sets the horizontal zoom scale. Must be between 0 and 1, 0 meaning fully zoomed out and 1 meaning fully zoomed in to MaxZoomScale. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.HZoomScaleProperty">
            <summary>   The zoom scale property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.VPanScale">
            <summary>   Gets or sets the vertical pan scale. Must be between 0 and 1, 0 meaning fully panned to the top and 1 to the bottom. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.VPanScaleProperty">
            <summary>   The pan scale property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.HPanScale">
            <summary>   Gets or sets the horizontal pan scale. Must be between 0 and 1, 0 meaning fully panned to the left and 1 to the right. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.HPanScaleProperty">
            <summary>   The pan scale property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.DataPointsSource">
             <summary>   Gets or sets the Collector holding all data points. </summary>
            
             <value> The data points source. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.DataPointsSourceProperty">
            <summary>   The data points source property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.DataPointsIndexName">
             <summary>   Gets or sets the name of the Collector's column containing the X-Axis data. </summary>
            
             <value> The name of the data points index. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.DataPointsIndexNameProperty">
            <summary>   The data points index name property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.DataPointsPlotNames">
             <summary>   Gets or sets a list of names of the Collector's columns containing all the Y-Axis data to plot. Each column results in one individual graph. </summary>
            
             <value> A list of names of the data points plots. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.DataPointsPlotNamesProperty">
            <summary>   The data points plot names property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.DataPointsVisibilities">
             <summary>
             Each boolean in the collection refers to the plot in DataPointsPlotNames at the same index
             and determines it's visibility. The collection is not mandatory and of no collection is set,
             all plots are visible. If the collection has fewer entries than DataPointsPlotNames, all
             missing entries are considered being visible.
             </summary>
            
             <value> The is plot enabled. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.DataPointsVisibilitiesProperty">
            <summary>   The data points visibilities property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.PlotBrushCollection">
             <summary>
             Accesses the custom plot brush and pen collection. Depending on the ordering of plot data,
             the according colors are used. E.g. if the data to plot is passed in as class instances, the
             property order determines the order in which the brushes are used.
             </summary>
            
             <value> The custom plot brushes. </value>
            
             <example>
             If you pass in a class like this:
             <code>
                public class ValueHolder
                {
                    [Collectible]
                    public int xIndex { get; set; }
                    [Collectible]
                    public double valueA { get; set; }
                    [Collectible]
                    public int valueB { get; set; }
                }
             </code>
             then valueA will be plotted with the first Fill / Outline and valueB will be plotted with
             the second brush / pen in the collection. If you have more plots than PlotBrushes, the color
             pattern repeats.
             </example>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.PlotBrushCollectionProperty">
            <summary>   The plot brush collection property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.IndexColumnName">
            <summary>
            Gets or sets the name of the index column. This allows changing the column from data that was
            added via class instances.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.PlotColumnNames">
            <summary>
            Gets or sets the names of the columns to plot. This allows changing the columns from data that was
            added via class instances.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.ClearData">
            <summary>   Clears the plot. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.SetData(System.Collections.Generic.IEnumerable{System.Double})">
             <summary>
             Sets the Y values and distributes them evenly among the available horizontal space of the
             control.
             </summary>
            
             <param name="data"> The data. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.AddData(System.Collections.Generic.IEnumerable{System.Double})">
             <summary>
             Adds data to the existing plot. Note that if you started the plot with whole Data Points, the
             presumed x positions of the additional points will probably not make any sense at all.
             </summary>
            
             <param name="data"> The data. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.SetData(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double})">
             <summary>
             Sets the data points for the plot. The plot will be scaled to the total available space of
             the control.
             </summary>
            
             <param name="dataX">    The data x coordinates. </param>
             <param name="dataY">    The data y coordinates. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.AddData(System.Double,System.Double)">
             <summary>
             Adds a data point to the plot.
             </summary>
            
             <param name="dataX">    The data x coordinate. </param>
             <param name="dataY">    The data y coordinate. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.SetDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})">
             <summary>
             Sets the data points for the plot. The plot will be scaled to the total available space of
             the control.
             </summary>
            
             <param name="data"> The data. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.AddDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})">
             <summary>   Adds data points to the existing plot. </summary>
            
             <param name="data"> The data. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.AddData``1(``0,System.String,System.String[])">
             <summary>   Adds all public properties marked as [Collectible] from the provided class. </summary>
            
             <typeparam name="T">    Type of the class. </typeparam>
             <param name="instance">         The class instance to add the data from. </param>
             <param name="indexColumnName">  Name of the index property. </param>
             <param name="plotColumnNames">  A variable-length parameters list containing all properties
                                             to plot. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.AddData``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String[])">
             <summary>
             Adds all public properties marked as [Collectible] from the provided class instances. Make
             sure to explicitly name T since otherwise the compiler will pick the generic overload without
             the IEnumerable.
             </summary>
             <example>
             Call the method with explicit T like this:
             <code>
             AddData&lt;MyDataClass&gt;(listOfMyData...);
             </code>
             </example>
            
             <typeparam name="T">    Type of the class. </typeparam>
             <param name="instances">        The class instances to add the data from. </param>
             <param name="indexColumnName">  Name of the index property. </param>
             <param name="plotColumnNames">  A variable-length parameters list containing all properties
                                             to plot. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.SetData(Keysight.Aes.Asf.DataCollections.Collector{System.Object},System.String,System.String[])">
             <summary>
             Sets the data points for the plot. The plot will be scaled to the total available space of
             the control.
             </summary>
            
             <param name="collector">        The collector from which a copy of the data will be created. </param>
             <param name="indexColumnName">  Name of the index property. </param>
             <param name="plotColumnNames">  A variable-length parameters list containing all properties
                                             to plot. </param>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot._screenData">
            <summary>
            For each plot point on screen, this collector is holding the pixel x and y values and the
            data x and y values. In regular plot mode, the aggreagate values are stored in the Max fields.
            For MinMaxPlot, both Max and Min are populated.
            </summary>
        </member>
        <member name="E:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.ScreenDataChanged">
            <summary>   ScreenDataChanged event is raised when any of the on screen representation has changed. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.ScreenData">
            <summary>   The screen data class allows access to the aggregated values that are visible on screen. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.ScreenData.XPixPos">
            <summary>   The pixel position. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.ScreenData.XValue">
            <summary>   The original X value at this position. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.ScreenData.PlotPens">
            <summary>   The plot pens used for all graphs on screen in drawing order. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.ScreenData.PlotBrushes">
            <summary>   The plot fill brushes used for all graphs on screen in drawing order. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.ScreenData.DataNames">
            <summary>   The property names of the visible plots within the used Collector class. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.ScreenData.DataScreenNames">
            <summary>   The screen names of the visible plots. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.ScreenData.DataAggregateMaxValues">
            <summary>   The aggregate maximum (or only) value of each plot at the x position. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.ScreenData.DataAggregateMaxPixPos">
            <summary>   The pixel positions according to these aggregate maximum values. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.ScreenData.DataAggregateMinValues">
            <summary>   The aggregate minimum value of each plot. Only present if MinMaxPlot is used. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.ScreenData.DataAggregateMinPixPos">
            <summary>   The pixel positions according to these aggregate minimum values. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.GetScreenDataAt(System.Double,System.Int32,System.Boolean)">
             <summary>
             Gets the screen data of a graph (identified by index) closest to a particular horizontal
             screen position. The selected graph must be visible, otherwise null is returned.
             </summary>
            
             <param name="xPixPos">      The x pixel position relative to the plot control with x=0
                                         meaning the very left edge. </param>
             <param name="graphIndex">   Select the graph by index for which to return the data. </param>
             <param name="orFirstIndex"> true to get the data from the first plot if the provided graphIndex does not exist. </param>
            
             <returns>   The screen data at x for graph i or null if it could not be determined. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.GetScreenDataAt(System.Double,System.Double,System.Int32@,System.Double@)">
             <summary>   Gets the screen data closest to a particular screen position. </summary>
            
             <param name="xPixPos">      The x pixel position relative to the plot control with x=0
                                         meaning the very left edge. </param>
             <param name="yPixPos">      The y pixel position relative to the plot control with y=0
                                         meaning the top edge. </param>
             <param name="graphIndex">   [out] Returns the index of the graph that was found to be closest
                                         to the x/y position. </param>
             <param name="yDelta">       [out] The delta between the provided yPixPos and the determined plot point. </param>
            
             <returns>   The screen data at x/y. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.GetScreenDataAt(System.Double)">
             <summary>   Gets the screen data of all graphs closest to a particular horizontal screen position. </summary>
            
             <param name="xPixPos">      The x pixel position relative to the plot control with x=0
                                         meaning the very left edge. </param>
             <returns>   The screen data for all graphs at x. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualPlot.OnGeometryChanged">
            <summary>
            Implement this to update your visual content when the provided data or available plot area
            has changed.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Plotting.VisualGrid">
            <summary>
            This control draws grid lines similar to those on an oscilloscope. Use the Outline property
            to change the grid line appearance. The Fill property is ignored on this control.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualGrid.VerticalLines">
            <summary>   Gets or sets the number of vertical lines. Choose 0 for automatic mode. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualGrid.VerticalLinesProperty">
            <summary>   The vertical lines property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.VisualGrid.HorizontalLines">
            <summary>   Gets or sets the number of horizontal lines. Choose 0 for automatic mode. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.VisualGrid.HorizontalLinesProperty">
            <summary>   The horizontal lines property. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualGrid.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.VisualGrid.OnGeometryChanged">
            <summary>
            Implement this to update your visual content when the provided data or available plot area
            has changed.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot">
            <summary>
            A very simple trend plot control without any fancy features like zoom or scroll. The
            GeometryPlot makes use of WPF geometries, which is the slowest method but keeps control over
            every painted pixel and thus would eventually allow for user feedback and interaction e.g.
            when hovering or clicking on the plot. However none of this is currently implemented, this
            class serves merely as an example. If you need more performance and can afford losing
            potential interaction capabilities, the VisualPlot is an alternative.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.AutoAggregate">
            <summary>
            Gets or sets a value indicating whether the displayed data will automatically be aggregated
            during a render pass. You can set this to false for large amounts of data that you want to
            aggregate externally and not on each change of the controls size etc.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.AutoAggregateProperty">
            <summary>   The automatic aggregate property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.AggregateMethod">
            <summary>   Gets or sets the aggregate method to use for a single line plot. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.AggregateMethodProperty">
            <summary>   The aggregate method property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.AggregateOverscan">
            <summary>
            Gets or sets the factor that determines the amount of data points to aggregate in relation to
            the control's actual width. E.g. at 1.0 exactly one data point per screen pixel is derived,
            at 2.0 it's two points per pixel resulting in a smoother curve.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.AggregateOverscanProperty">
            <summary>   The aggregate overscan property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.MinMaxPlot">
             <summary>
             Gets or sets a value indicating whether the whole area between the minimum and maximum curves
             of an aggregate should be plotted. If not, a single curve is plotted using the selected AggregateMethod.
             </summary>
            
             <value> true if area plot, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.MinMaxPlotProperty">
            <summary>   The minimum maximum plot property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.AreaFill">
             <summary>
             Gets or sets a value indicating whether the area between the line of the first and last plot point and
             the plot curve shall be filled in with color. If you want to show the integral area, make sure your first
             and last curve points have a Y value of zero or you set the AutoIntegralFill option to true.
             </summary>
            
             <value> true if area plot, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.AreaFillProperty">
            <summary>   The area plot property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.AutoIntegralFill">
             <summary>
             Gets or sets a value indicating whether the filled area (with AreaFill set to true) will
             automatically be adjusted to start and end on the 0 position of the Y axis.
             </summary>
            
             <value> true if automatic integral fill, false if not. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.AutoIntegralFillProperty">
            <summary>   The automatic integral fill property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.VScaleFixMin">
             <summary>
             Gets or sets the minimum value on the vertical scale. You can set this to double.NaN to
             auto scale to the lowest value in the data set.
             </summary>
            
             <value> The vertical scale minimum. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.VScaleFixMax">
             <summary>
             Gets or sets the maximum value on the vertical scale. You can set this to double.NaN to
             auto scale to the highest value in the data set.
             </summary>
            
             <value> The vertical scale minimum. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.VScaleMin">
            <summary>   Gets or sets the vertical scale minimum. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.VScaleMinProperty">
            <summary>   The vertical scale minimum dependency property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.VScaleMax">
            <summary>   Gets or sets the vertical scale maximum. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.VScaleMaxProperty">
            <summary>   The vertical scale maximum dependency property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.HScaleMin">
            <summary>   Gets or sets the horizontal scale minimum. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.HScaleMinProperty">
            <summary>   The horizontal scale minimum dependency property. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.HScaleMax">
            <summary>   Gets or sets the horizontal scale maximum. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.HScaleMaxProperty">
            <summary>   The horizontal scale maximum dependency property. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.ClearData">
            <summary>   Clears the plot. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.SetData(System.Collections.Generic.IEnumerable{System.Double})">
             <summary>
             Sets the Y values and distributes them evenly among the available horizontal space of the
             control.
             </summary>
            
             <param name="data"> The data. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.AddData(System.Collections.Generic.IEnumerable{System.Double})">
             <summary>
             Adds data to the existing plot. Note that if you started the plot with whole Data Points, the
             presumed x positions of the additional points will probably not make any sense at all.
             </summary>
            
             <param name="data"> The data. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.SetData(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double})">
             <summary>
             Sets the data points for the plot. The plot will be scaled to the total available space of
             the control.
             </summary>
            
             <param name="dataX">    The data x coordinates. </param>
             <param name="dataY">    The data y coordinates. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.AddData(System.Double,System.Double)">
             <summary>
             Adds a data point to the plot.
             </summary>
            
             <param name="dataX">    The data x coordinate. </param>
             <param name="dataY">    The data y coordinate. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.SetDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})">
             <summary>
             Sets the data points for the plot. The plot will be scaled to the total available space of
             the control.
             </summary>
            
             <param name="data"> The data. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.AddDataPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})">
             <summary>   Adds data points to the existing plot. </summary>
            
             <param name="data"> The data. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.OnGeometryChange">
            <summary>
            Implement this to update your visual content when the provided data or available plot area
            has changed.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.Plotting.GeometryPlot.OnBrushChange">
            <summary>
            Implement this to update the plot brush when any of their properties have changed.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.WPF.SizingCanvas">
            <summary>   A canvas that can accurately tell its size so it can be used within a scroll viewer. Just replace your regular canvas control with this one. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.WPF.SizingCanvas.MeasureOverride(System.Windows.Size)">
             <summary>
             Measures the child elements of a <see cref="T:System.Windows.Controls.Canvas" /> in
             anticipation of arranging them during the
             <see cref="M:System.Windows.Controls.Canvas.ArrangeOverride(System.Windows.Size)" /> pass.
             </summary>
            
             <param name="constraint">   An upper limit <see cref="T:System.Windows.Size" /> that should
                                         not be exceeded. </param>
            
             <returns>
             A <see cref="T:System.Windows.Size" /> that represents the size that is required to arrange
             child content.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Catalog.CatalogServices">
            <summary>   Various service hooks for catalog services. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Catalog.CatalogServices.LoadAssembliesAction">
            <summary>   Defines a LoadAssemblies action. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.Catalog.CatalogServices.OnLoadCatalog">
            <summary>   Action called when the whole catalog is loaded. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.Catalog.CatalogServices.OnSaveCatalog">
            <summary>   Action called when the whole catalog is saved. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.Catalog.CatalogServices.OnExistsCatalog">
            <summary>   Action called when testing if the catalog file exists. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.Catalog.CatalogServices.OnLoadAssemblies">
            <summary>   Action called when the solution assemblies are scanned and loaded. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Catalog.CatalogStorage">
            <summary>
            The load and save implementation for the whole dictionary of configurations. This is
            currently going to the user's AppData/Roaming directory. A future implementation may replace
            this with a service interface so that configurations may be stored on a database server or
            similar.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.CatalogStorage.LoadConfigurations">
             <summary>
             Loads the configurations existing in the local storage space. If no configurations exist, an
             empty Dictionary (instead of null) is returned. Any exception caused by the loading attempt
             (e.g. missing access rights) will be forwarded to the caller.
             </summary>
            
             <returns>
             The configurations found in the storage space. The dictionary may be empty but will not be
             null.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.CatalogStorage.LoadSolutionAssemblies">
            <summary>
            Loads all solution assemblies from the well known installation location. Typically you would
            not call this manually, since it is automatically called the first time the SolutionCatalog
            class is accessed.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.CatalogStorage.SaveConfigurations(System.Collections.Generic.List{Keysight.Aes.Asf.Solutions.SolutionConfiguration})">
             <summary>
             Saves the configurations to the local storage space. Any exception caused by the loading
             attempt (e.g. missing access rights) will be forwarded to the caller.
             </summary>
            
             <param name="configurations">   The configurations. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog">
            <summary>
            Provides access to the stored solution configurations. A configuration is identified by a
            unique name which exists only once on the local machine, regardless of the actual
            configuration class type. I.e. a configuration for a Solution of type A can not be stored
            under a name already used for a Solution Configuration of type B.
            
            Note that all functions returning configurations will actually provide a clone of the
            instances stored in the catalog. Thus if you do any changes to such an instance, the catalog
            will not be affected. You have to use SetConfiguration() to store changes in the catalog.
            
            The current implementation is Thread Safe but not concurrent across multiple tasks.
            Each task will manage it's own catalog in memory.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.C_DEFAULT_NAME">
            <summary>   The default name if the catalog service creates a new configuration from scratch. </summary>
        </member>
        <member name="E:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.ConfigurationsChanged">
            <summary>   This event is called every time an item in the catalog or the catalog itself has changed. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.GetConfigurationNames``1">
             <summary>   Gets all available configurations (by name) of a certain type. </summary>
            
             <typeparam name="T">    The type of the configuration class. </typeparam>
            
             <returns>   The available configurations. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.GetConfigurations``1">
             <summary>   Gets all available configurations of a certain type. </summary>
            
             <typeparam name="T">    The type of the configuration class. </typeparam>
            
             <returns>   The available configurations. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.GetConfigurations(System.Type)">
             <summary>   Gets all available configurations of a certain type. </summary>
            
             <param name="configType">   Type of the configuration. </param>
            
             <returns>   The available configurations. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.GetAllConfigurations(System.Boolean)">
             <summary>   Gets all configurations in the catalog. </summary>
            
             <param name="preSorted">    true if the list shall be pre sorted. </param>
            
             <returns>   A list of all configurations. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.GetConfiguration``1(System.String)">
             <summary>   Gets a configuration instance by name. </summary>
            
             <exception cref="T:System.Collections.Generic.KeyNotFoundException"> Thrown when no configuration of the given name
                                                     exists. </exception>
            
             <typeparam name="T">    The type of the configuration class. </typeparam>
             <param name="configurationName">    Name of the configuration. </param>
            
             <returns>   The configuration. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.GetConfiguration(System.String,System.Type)">
             <summary>   Gets a configuration instance by name and type. </summary>
            
             <exception cref="T:System.Collections.Generic.KeyNotFoundException"> Thrown when no configuration of the given name
                                                     exists. </exception>
            
             <param name="configurationName">    Name of the configuration. </param>
             <param name="configType">           Type of the configuration. </param>
            
             <returns>   The configuration. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.ProbeConfiguration``1(System.String)">
             <summary>   Determines whether a certain configuration type is stored under a particular name. </summary>
            
             <typeparam name="T">    The type of the configuration class. </typeparam>
             <param name="configurationName">    Name of the configuration. </param>
            
             <returns>   true if such a configuration exists, false if either the name does not exist or the type does not match. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.ProbeConfiguration(System.String,System.Type)">
             <summary>
             Determines whether a certain configuration type is stored under a particular name.
             </summary>
            
             <param name="configurationName">    Name of the configuration. </param>
             <param name="configType">           The type of the configuration class. </param>
            
             <returns>
             true if such a configuration exists, false if either the name does not exist or the type does
             not match.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.SetConfiguration(Keysight.Aes.Asf.Solutions.SolutionConfiguration)">
             <summary>
             Sets a configuration to be stored under its ConfigurationName. If the name already exists and
             the configuration type is identical, the existing configuration is updated (i.e. silently
             overwritten). A configuration of a different type may be stored under the same name.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when the configuration name is not valid. </exception>
            
             <param name="configuration">    The configuration. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.RenameConfiguration``1(System.String,System.String)">
             <summary>   Rename a configuration. </summary>
            
             <exception cref="T:System.Collections.Generic.KeyNotFoundException">         Thrown when the old name does not exist in the catalog. </exception>
             <exception cref="T:System.ArgumentException">            Thrown when the new name is invalid. </exception>
             <exception cref="T:System.InvalidOperationException">    Thrown when a configuration with the new name already exists. </exception>
            
             <param name="oldName">  Old name of the configuration. </param>
             <param name="newName">  New name of the configuration. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.RenameConfiguration(Keysight.Aes.Asf.Solutions.SolutionConfiguration,System.String)">
             <summary>   Rename a configuration. </summary>
            
             <exception cref="T:System.Collections.Generic.KeyNotFoundException">         Thrown when the old name does not exist in
                                                             the catalog. </exception>
             <exception cref="T:System.ArgumentException">            Thrown when the new name is invalid. </exception>
             <exception cref="T:System.InvalidOperationException">    Thrown when a configuration with the new name
                                                             already exists. </exception>
            
             <param name="oldConfig">    The configuration to rename (only name and type are evaluated to
                                         identify the old configuration). </param>
             <param name="newName">      New name of the configuration. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.RemoveConfiguration``1(System.String)">
             <summary>   Removes the configuration described by configurationName from the catalog. </summary>
            
             <exception cref="T:System.Collections.Generic.KeyNotFoundException"> Thrown when the configurartionName does not exist. </exception>
             <exception cref="T:System.TypeAccessException">    Thrown when a configuration of a different type is
                                                     using the configurationName already. </exception>
            
             <typeparam name="T">    The type of the configuration class. </typeparam>
             <param name="configurationName">    Name of the configuration. </param>
            
             <returns>   The configuration that was removed from the catalog. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.RemoveConfiguration(Keysight.Aes.Asf.Solutions.SolutionConfiguration)">
             <summary>
             Removes the configuration of identical name and type from the catalog. Note that none of the
             other properties are checked and thus may differ from the stored configuration.
             </summary>
            
             <exception cref="T:System.Collections.Generic.KeyNotFoundException"> Thrown when the configurartionName does not exist. </exception>
             <exception cref="T:System.TypeAccessException">  Thrown when a configuration of a different type is
                                                     using the configurationName already. </exception>
            
             <param name="configuration">    The configuration to remove. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.RetreiveDefaultConfiguration``1(System.Boolean)">
             <summary>
             Gets the default configuration for a particular solution. Contrary to
             GetDefaultConfiguration(), this will simply return null if no default configuration exists.
             </summary>
            
             <typeparam name="T">    The type of the configuration class. </typeparam>
             <param name="createEmptyConfig">    true to create and return an empty configuration if no
                                                 default configuration was found. </param>
            
             <returns>   The default configuration. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.GetDefaultConfiguration``1(System.Boolean)">
             <summary>   Gets the default configuration for a particular solution. </summary>
            
             <exception cref="T:System.Collections.Generic.KeyNotFoundException"> Thrown when no default configuration exists and no empty configuration is requested. </exception>
            
             <typeparam name="T">    The type of the configuration class. </typeparam>
             <param name="createEmptyConfig">    true to create and return an empty configuration if no default configuration was found. </param>
            
             <returns>   The default configuration. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.GetDefaultConfiguration(System.Type,System.Boolean)">
             <summary>   Gets the default configuration for a particular solution. </summary>
            
             <param name="configType">           Type of the configuration. </param>
             <param name="createEmptyConfig">    true to create and return an empty configuration if no
                                                 default configuration was found. </param>
            
             <returns>   The default configuration or null if none exists. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.SetDefaultConfiguration(Keysight.Aes.Asf.Solutions.SolutionConfiguration)">
             <summary>   Sets a default configuration for a particular solution. </summary>
            
             <param name="config">   The configuration. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.SetDefaultConfiguration``1(System.String)">
             <summary>   Sets a default configuration for a particular solution. </summary>
            
             <exception cref="T:System.Collections.Generic.KeyNotFoundException"> Thrown when the configurartionName does not exist. </exception>
            
             <typeparam name="T">    The type of the configuration class. </typeparam>
             <param name="configurationName">    Name of the configuration. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.GetConfigurationTypes">
             <summary>   Gets all configuration types from all loaded assemblies. </summary>
            
             <returns>
             An enumerator that allows foreach to be used to process the configuration types in this
             collection.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.GetConfigurationTypeNames">
             <summary>   Gets the configuration type display names from all loaded assemblies. </summary>
            
             <returns>
             An enumerator that allows foreach to be used to process the configuration type names in this
             collection.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.GetConfigurationType(System.String)">
             <summary>   Gets the configuration type that has the matching display name attribute attached. </summary>
            
             <param name="displayName">  DisplayName of the configuration type. </param>
            
             <returns>   The configuration type or null of no matching type was found. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.CheckIsDerivedType(System.Type)">
             <summary>
             Checks if a type is derived from SolutionConfiguration. Use this wherever you want to make
             sure an operation is not performed on the base class itself (which is only used for
             configurations of unknown type, i.e. for which no DLL was loaded).
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="t">    The Type to process. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.GetConfigurationOfMissingType(System.String,System.String)">
             <summary>   Gets configuration of a missing type. </summary>
            
             <param name="configurationName">    Name of the configuration. </param>
             <param name="missingType">          The missing type. </param>
            
             <returns>   The configuration or null if it does not exist. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.GetConfigurationOfType(System.String,System.Type)">
             <summary>   Gets a configuration instance by name. </summary>
            
             <param name="configurationName">    Name of the configuration. </param>
             <param name="configType">           Type of the configuration. </param>
            
             <returns>   The configuration or null if it does not exist. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Catalog.SolutionCatalog.CheckType(Keysight.Aes.Asf.Solutions.SolutionConfiguration,System.Type)">
             <summary>   Checks whether a configuration is of a certain (derived) type. </summary>
            
             <param name="config">       The configuration. </param>
             <param name="configType">   Type to test for. </param>
            
             <returns>   true if the type matches, false if not. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Configuration.MultiAppSortOrderAttribute">
            <summary>   Attribute for determining the sort order of the apps in a multi application solution. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.Configuration.MultiAppSortOrderAttribute.Order">
             <summary>   Gets the order value. </summary>
            
             <value> The order. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Configuration.MultiAppSortOrderAttribute.#ctor(System.Double)">
             <summary>   Constructor. </summary>
            
             <param name="order">    The order. Higher values put the app further upwards. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Configuration.InstrumentChannels">
            <summary>
            A premade enum for instrument channels. Use the EnumBlacklist and EnumWhitelist attributes to
            limit the selection.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Configuration.IConfigurable">
            <summary>   Interface for a DLL implementing the core logic of a solution. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Configuration.IConfigurable.SetDefaultConfiguration(System.Boolean)">
             <summary>
             Sets the default configuration.  The implementation is supposed to retrieve the default
             derived SolutionConfiguration instance from the SolutionCatalog.
             </summary>
            
             <param name="overwriteAlways">  true to overwrite, false to preserve any already existing configuration. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Configuration.IConfigurable.SetConfiguration(System.String)">
             <summary>
             Sets a configuration identified by the name. The implementation is supposed to retrieve the
             actual derived SolutionConfiguration instance from the SolutionCatalog.
             </summary>
            
             <param name="configurationName">    Name of the configuration. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Configuration.IConfigurable.SetConfiguration(Keysight.Aes.Asf.Solutions.SolutionConfiguration)">
             <summary>   Sets a configuration by passing in an implementation instance. </summary>
            
             <param name="configuration">    The configuration class instance. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Configuration.MissingSolutionConfigurationException">
            <summary>   Exception for signaling missing solution configuration errors. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Configuration.MissingSolutionConfigurationException.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Configuration.MissingSolutionConfigurationException.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <param name="message">  The message. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Configuration.MissingSolutionConfigurationException.#ctor(System.String,System.Exception)">
             <summary>   Constructor. </summary>
            
             <param name="message">  The message. </param>
             <param name="inner">    The inner. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Configuration.MissingSolutionConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>   Specialised constructor for use only by derived class. </summary>
            
             <param name="info">     The information. </param>
             <param name="context">  The context. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.ExpertSolutions.AutomaticCsvExporter">
            <summary>
            A class that performs an automatic CSV export, typically used during measurements to write
            out each line of incoming data. The automatic export will distinguish incoming types of data
            and will write different types to different files. To reset the automatic export (so that new
            files are created upon the next export call)
            use the InitializeAutoCsvExport() method, to announce new measurements, use
            PerformAutoCsvExport() with the class instance holding one row of data.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.AutomaticCsvExporter.AutoCsvExportFile">
             <summary>
             Gets or sets the automatic CSV export base file name that is currently in use. If no test was
             started yet, this string is empty. If the string is not empty, it doesn't mean that any file
             exists yet (the auto export may be turned off).
             The actually written files will have a number and ".csv" extensions not included here. These
             are created on the fly depending on the various types of result classes that are created by
             the test.
             </summary>
            
             <value> The automatic CSV export file. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.AutomaticCsvExporter.InitializeAutoCsvExport(Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor,Keysight.Aes.Asf.MVVM.ViewModels.AutoCsvExportSettings)">
            <summary>
            Initializes the automatic CSV export. Call this every time you want to reset the export and
            start a new file. Note that the file is not created unless AutoCsvExport() is called.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.AutomaticCsvExporter.PerformAutoCsvExport(System.Object)">
             <summary>   Automatically adds the values of the public properties of the class instance to the CSV export file, provided IsExportEnabled is true. </summary>
            
             <param name="dataClass">    The class instance. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore">
            <summary>
            For simple solutions that support a basic test that is configured once, then started and
            which produces data until it stops or is stopped, the logic core can derive from this class
            so that a ExpertEngine can make use of it.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.TestStartedDelegate">
            <summary>   You can provide a test start delegate that is called upon test execution. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.TestStoppedDelegate">
            <summary>   You can provide a test stop delegate that is called when the test has stopped. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.TestExceptionDelegate">
            <summary>
            You can provide a delegate that is called when an exception is thrown. The exception is
            caught and logged internally and the test is stopped (TestStopDelegate is called as well),
            but you may want to issue additional actions here.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.TestResultDelegate">
            <summary>
            You can provide a delegate that is called whenever the test produces a result.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.TestCustomActionDelegate">
            <summary>
            You can provide a delegate that is called whenever the test produces a custom object.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.TestSleepDelegate">
            <summary>
            A delegate that, if set, will be called instead of System.Threading.Thread.Sleep(int
            millisec). Return true if the test is supposed to continue or false to abort it.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.DefaultSleepDelegate(System.Int32)">
             <summary>   The default sleep delegate. </summary>
            
             <exception cref="T:System.InvalidOperationException">    Thrown when an application break was requested. </exception>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.HostConfiguration">
            <summary>   Gets or sets the common configuration class in a multi app environment. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.HostTestSetup">
            <summary>   Gets or sets the common test setup class in a multi app environment. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.SolutionInteraction">
             <summary>
             Gets or sets the solution feedback channel that allows the logic core to send data (like user
             feedback) back to the hosting instance.
             </summary>
            
             <value> The solution service. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.SolutionConfigurationType">
             <summary>   Gets the type of the solution configuration. </summary>
            
             <remarks>   Override this to return the actually required type for your solution core. </remarks>
            
             <value> The type of the solution configuration. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.TestConfigurationType">
             <summary>   Gets the type of the test configuration. </summary>
            
             <remarks>   Override this to return the actually required type for your test configuration. </remarks>
            
             <value> The type of the solution configuration. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.LicenseFeatureId">
             <summary>   Gets the identifier of the license feature. </summary>
            
             <value> The identifier of the license feature. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.TrialLicenseLength">
             <summary>   Gets the length of the trial license in days. </summary>
            
             <value> The length in days of the trial license. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.SolutionConfig">
            <summary>   Gets or sets the solution configuration. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.UsedInstruments">
            <summary>   Gets or sets the instruments used during the test. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.TestSetup">
            <summary>   Gets or sets the test setup class. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.IsRunning">
            <summary>   Determines whether the test is running. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore._isRunning">
            <summary>   true if the test is running. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore._setupErrors">
            <summary>   Cumulates setup errors during initialization. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.RequestControl">
             <summary>
             Locks this instance, which is mandatory before StartTest(). Allows to evaluate
             this as a precondition if StartTest is to be executed asynchronously. The lock is
             automatically released when the test ends.
             </summary>
            
             <returns>   true if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.InitializeTest">
             <summary>
             Initializes the test. If initialization fails due to the solution core throwing an exception
             (e.g. invalid parameters or instruments), a previously gained control is lost and
             RequestControl() has to be called again.
             </summary>
            
             <exception cref="T:System.InvalidOperationException">    Thrown when the test is already in progress
                                                             or when RequestControl was not called first. </exception>
            
             <returns>   true if the initialization succeeded, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.StartTest">
             <summary>
             Attempts to start the test. This will only return once the test has finished or failed and
             any previously gained control is reset.
             </summary>
            
             <exception cref="T:System.InvalidOperationException">    Thrown when the test is already in progress
                                                             or when RequestControl was not called first. </exception>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.StopTest">
             <summary>
             Attempts to stop the test on the next opportunity for a clean shutdown. Will return
             immediately while the test may still be running. Assign a TestStopped Delegate to get
             informed when it's actually stopped.
             </summary>
            
             <returns>   true if the request was forwarded, false if no test is running. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.AbortTest">
             <summary>
             Attempts to abort the test on the next available time slot. For this to work, you need to
             leave the TestSleepDelegate set to it's default value. If you overwrite it, you need to throw
             an exception in your own TestSleepDelegate in order to abort the test.
            
             Will return immediately while the test may still be running. Assign a TestStopped Delegate to
             get informed when it's actually stopped.
             </summary>
            
             <returns>   true if an abort request was forwarded, false if no test is running. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.OnInitialize">
            <summary>
            Implement this to check if all necessary data is present (like test and configuration setup)
            and if the instruments can be connected to.
            Throw an exception in case of failure.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.OnStartTest">
            <summary>
            Implement the actual test here. This is supposed to be synchronous and return only once the
            test has finished. Make sure to call OnResultAvailable() every time an iteration cycle has
            completed.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.OnStopRequested">
            <summary>
            When a test stop was requested, _stopTestRequest is set to true and also this method is
            called. If _stopTestRequest does not suffice for your implementation, you can add code here.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.OnAbortRequested">
            <summary>
            When a test abort was requested, _abortTestRequest is set to true and also this method is
            called. If _abortTestRequest does not suffice for your implementation, you can add code here.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.OnTestException(System.Exception)">
             <summary>   Forwards an exception to any registered delegate. </summary>
            
             <param name="ex">   The exception. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.OnResultAvailable(System.Object)">
             <summary>   Call this whenever a result becomes available during your test. </summary>
            
             <param name="testResult">   The test result. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.OnCustomAction(System.Object)">
             <summary>
             Call this when custom data becomes available during your test. This does nothing by default
             but is a way to communicate data to a custom wrapper.
             </summary>
            
             <param name="data"> The data. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.RegisterInstrument(Keysight.Aes.Asf.Solutions.Storage.SolutionInstrument)">
             <summary>   Registers an instrument. </summary>
            
             <param name="instrument">   The instrument to register. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.AddSetupError(System.String)">
             <summary>   Adds a setup error. </summary>
            
             <param name="line"> The error text to add. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.ChecksDone">
             <summary>   Call this when your checks are down. if any setup errors have cumulated, an exception containing the error text is thrown. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when the _setupErrors text is not empty. </exception>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.CheckIsLower``1(System.String,``0,System.Boolean)">
             <summary>   Checks whether the property value is lower (or equal) than a limit. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="propertyName"> Name of the property. </param>
             <param name="limit">        The limit. </param>
             <param name="orEqual">      true to allow equal values. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.CheckIsHigher``1(System.String,``0,System.Boolean)">
             <summary>   Checks whether the property value is higher (or equal) than a limit. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="propertyName"> Name of the property. </param>
             <param name="limit">        The limit. </param>
             <param name="orEqual">      true to allow equal values. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.CheckIsBetween``1(System.String,``0,``0,System.Boolean,System.Boolean)">
             <summary>   Checks whether the property value is between (or equal) a lo and hi limit. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="propertyName"> Name of the property. </param>
             <param name="loLimit">      The lower limit. </param>
             <param name="hiLimit">      The higher limit. </param>
             <param name="orLoEqual">    true to allow lower equal values. </param>
             <param name="orHiEqual">    true to allow higher equal values. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.CheckIsOutside``1(System.String,``0,``0,System.Boolean,System.Boolean)">
             <summary>   Checks whether the property value is outside (or equal) a lo and hi limit. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="propertyName"> Name of the property. </param>
             <param name="loLimit">      The lower limit. </param>
             <param name="hiLimit">      The higher limit. </param>
             <param name="orLoEqual">    true to allow lower equal values. </param>
             <param name="orHiEqual">    true to allow higher equal values. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.CheckIsLower``1(System.String,System.String,System.Boolean)">
             <summary>   Checks whether the property value is lower (or equal) than another property. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="propertyNameLo">   The property that shall be lower in value. </param>
             <param name="propertyNameHi">   The property that shall be higher in value. </param>
             <param name="orEqual">          true to allow equal values. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.CheckIsHigher``1(System.String,System.String,System.Boolean)">
             <summary>   Checks whether the property value is higher (or equal) than another property. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="propertyNameLo">   The property that shall be lower in value. </param>
             <param name="propertyNameHi">   The property that shall be higher in value. </param>
             <param name="orEqual">          true to allow equal values. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore.GetTestSetupValue``1(System.String,System.Reflection.MemberInfo@)">
             <summary>   Gets a value from the test setup class by property name. </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="propertyName"> Name of the property. </param>
             <param name="mInfo">        [out] The MemberInfo of the property. </param>
            
             <returns>   The test setup value. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor">
            <summary>   Holds the data that describes the components of an ExpertSolution. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor.SolutionModelNumber">
            <summary>   Gets or sets the solution model number which for example appears on screen in the main toolbar. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor.SolutionName">
            <summary>   Gets or sets the solution name which for example appears on screen in the main toolbar. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor.SolutionLabel">
            <summary>   Gets the combined solution model number and name. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor.SolutionColor">
            <summary>   Gets or sets the preferred icon color of the solution. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor.SolutionMultiAppSortOrder">
            <summary>   Gets or sets the solution multi application sort order. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor.SolutionAppDataSpace">
            <summary>
            Gets or sets the solution's proposed subfolder path within AppData/Roaming that will be used for
            default settings storage. A valid entry could be "Keysight\\N1234A" with N1234A being the
            model number of the solution.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor.SolutionConfigurationType">
            <summary>
            Gets or sets the class type that holds the solution configuration. This has to be a type
            derived from SolutionConfiguration.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor.SolutionTestParametersType">
            <summary>
            Gets or sets the class type of the solution test parameters. This may be any class that holds
            all the parameters that will affect the test run of the simple solution like loop counts,
            voltage limits etc.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor.SolutionExecutor">
            <summary>
            Gets or sets the solution executor. If you do not implement one, you may pass in the lower
            level engine or core. Typically, most ExpertSolutions will just provide the SolutionCore.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor.SolutionEngine">
            <summary>
            If you implement your own SimpleEngine, set this here instead of the (higher level) Executor
            or (lower level) Core.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor.SolutionCore">
            <summary>
            Typically, this is what is provided by a ExpertSolution and the default asynchronous wrappers
            will be used on top.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor.SupportedStorageCodes">
             <summary>
             Gets the supported storage codes. By default this is just the Product Number of the Solution,
             e.g. BT2191A. However during the PLC, new product numbers may evolve and / or the data of
             similar sister solutions may be displayable. Hence a custom EXS implementation may decide to
             add further codes to this list.
             </summary>
            
             <value> The supported storage codes. </value>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine">
            <summary>
            For simple solutions that derive from the ExpertCore, this class can be used as a wrapper to
            support asynchronous testing of a basic test that is configured once, then started and which
            produces data until it stops or is stopped.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.SolutionCore">
             <summary>   Gets the solution core. </summary>
            
             <value> The solution core. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.FeedbackChannel">
             <summary>   Gets the solution feedback channel from the SolutionCore. </summary>
            
             <value> The feedback channel. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.#ctor(Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertCore)">
             <summary>   Constructor. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="solutionCore"> The solution core. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.SetConfiguration(Keysight.Aes.Asf.Solutions.SolutionConfiguration)">
             <summary>   Sets a configuration by passing in an implementation instance. </summary>
            
             <param name="configuration">    The configuration class instance. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.SetConfiguration(System.String)">
             <summary>
             Sets a configuration identified by the name.
             </summary>
            
             <param name="configurationName">    Name of the configuration. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.SetDefaultConfiguration(System.Boolean)">
             <summary>   Sets the default configuration. </summary>
            
             <param name="overwriteAlways">  true to overwrite, false to preserve any already existing configuration. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.GetActiveConfiguration">
             <summary>   Gets the currently active configuration for the solution application instance. </summary>
            
             <returns>   The active configuration. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.GetDefaultConfiguration">
             <summary>   Gets the default configuration. </summary>
            
             <returns>   The default configuration. </returns>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.TestSetup">
             <summary>   Gets or sets the test setup. </summary>
            
             <value> The test setup. </value>
        </member>
        <member name="E:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.TestStartEvent">
            <summary>   Fired when the test execution starts. </summary>
        </member>
        <member name="E:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.TestStopEvent">
            <summary>   Fired when the test execution ends. </summary>
        </member>
        <member name="E:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.TestResultEvent">
            <summary>   Fired when one iteration cycle is done and provides one full set of readings. </summary>
        </member>
        <member name="E:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.TestExceptionEvent">
            <summary>   Fired when an exception occurs. If this is a fatal error, a TestStopEvent will follow. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.UserObject">
             <summary>   Gets the user defined object that was passed into StartTest(). </summary>
            
             <remarks>
             Note that when implementing the interface, you will typically want a private setter on this
             property which you assign from your StartTest implementation provided the test was
             successfully started.
             <code>
             public object UserObject { get; private set; }
             </code>
             </remarks>
            
             <value> The user ob. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.StartTest(System.Object)">
             <summary>
             Asynchronously starts the test. If the test is already running, the method returns false and
             will not store the user object. To get informed about the test proceedings, you need to
             subscribe to the various available events.
             </summary>
            
             <exception cref="T:System.InvalidOperationException">    Thrown when the solution configuration could
                                                             not be loaded or if no TestSetup was provided. </exception>
            
             <param name="userOb">   A user definable object that can be retrieved from the sender
                                     instance's UserOb property on event callbacks. </param>
            
             <returns>
             true if the test was started and the user object was stored, false if the test could not be
             started because it is already running (in which case the user object is not stored).
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.StopTest">
             <summary>
             Informs a test in progress that a test stop was requested. The method returns immediately. If
             a test is in progress, it will be stopped on the next finished iteration cycle and the
             TestStopEvent is called.
             </summary>
            
             <remarks>
             Note that when overriding the implementation, you need to make sure the test is stopped either
             immediately or asynchronously and that any state changes are issued via the appropriate
             events, no matter whether you stop immediately or not.
             </remarks>
            
             <returns>
             true if a running test was informed to stop as soon as possible. False if no test is running.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.OnTestStart">
            <summary>   Call this in your derived class when the test actually starts. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.OnTestStop">
            <summary>   Call this in your derived class when the test actually stops. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.OnTestResultReceived(System.Object)">
             <summary>   Call this in your derived class whenever the test delivers a measurement row. </summary>
            
             <param name="result">   The result. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine.OnTestExceptionReceived(System.Exception)">
             <summary>
             Call this in your derived class whenever the test throws an exception. If this also makes the
             test stop, make sure to call OnTestStop() explicitly.
             </summary>
            
             <param name="ex">   The exception. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor">
            <summary>
            For simple solutions that implement (or are wrapped into an) ExpertEngine, this wrapper can
            be used to instantiate an even more simplified execution engine including a simple state
            machine and result collector.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.SolutionEngine">
             <summary>   Gets the solution engine. </summary>
            
             <value> The solution engine. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.FeedbackChannel">
             <summary>   Gets the solution feedback channel from the SolutionEngine. </summary>
            
             <value> The feedback channel. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.TestSetup">
             <summary>   Gets or sets the test setup. </summary>
            
             <value> The test setup. </value>
        </member>
        <member name="E:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.OnTestSetupChanged">
            <summary>
            Fires every time the TestSetup instance has been replaced (does not fire when only a property
            within the setup changes. This has to be covered by the actual TestSetup type implementing
            INotifyPropertyChanged).
            </summary>
        </member>
        <member name="E:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.OnTestStateChanged">
            <summary>   Fires every time a test starts, stops or produces results or errors. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.IsRunning">
            <summary>   Reflects whether the test is currently running. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.TestStart">
            <summary>   Gets the Date/Time of the test start. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.Results">
            <summary>   Contains all results received since the last test start. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.#ctor(Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertEngine)">
             <summary>   Constructor. </summary>
            
             <param name="engine">   The solution engine to run. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.Start">
            <summary>   Starts the test. Make sure to set the TestSetup beforehand.  </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.Stop">
            <summary>
            Tells the engine to stop any testing in progress. Observe IsRunning and / or
            OnTestStateChanged to get informed about the actual termination of the test.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.TestError(System.Object,System.Exception)">
             <summary>   The handler that is called by the ISolutionEngine on test errors. </summary>
            
             <param name="sender">   Source of the event. </param>
             <param name="ex">        The Exception to process. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.TestIterated(System.Object,System.Object)">
             <summary>   The handler that is called by the ISolutionEngine on one test iteration producing a row of results. </summary>
            
             <param name="sender">   Source of the event. </param>
             <param name="result">   The result. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.TestStopped(System.Object,System.EventArgs)">
             <summary>   The handler that is called by the ISolutionEngine when the test has stopped. </summary>
            
             <param name="sender">   Source of the event. </param>
             <param name="e">        Event information. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.TestStarted(System.Object,System.EventArgs)">
             <summary>   The handler that is called by the ISolutionEngine when the test has started. </summary>
            
             <param name="sender">   Source of the event. </param>
             <param name="e">        Event information. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertExecutor.OverwriteTestStart(System.DateTime)">
             <summary>
             Overwrites the timestamp when the test was started. Since this is an exceptional action, it
             is not available as the regular setter to the TestStart property.
             </summary>
            
             <param name="startTime">    The start time. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.PresenterAttributes.BooleanPresenterTypes">
            <summary>   The available boolean presenter types for a PropertiesView. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.PresenterAttributes.BooleanPresenterTypes.TotalPassFail">
            <summary>   Puts a Total Pass/Fail panel on top of the output. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.PresenterAttributes.BooleanPresenterTypes.TestPassFail">
            <summary>   Shows an individual Pass/Fail marker with colors and text. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.PresenterAttributes.BooleanPresenterTypes.SymbolPassFail">
            <summary>   Shows an individual Pass/Fail marker with only a red X-cross or a green checkmark. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.PresenterAttributes.BooleanPresenterTypes.YesNo">
            <summary>   Shows "Yes" or "No" instead of True and False. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.PresenterAttributes.BooleanPresenterTypes.Custom">
            <summary>   This mode is implicit when you choose the custom text constructor for the BooleanPresenterAttribute. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.PresenterAttributes.BooleanPresenterAttribute">
            <summary>   Attribute the select how to show booleans in a PropertiesView. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.PresenterAttributes.BooleanPresenterAttribute.PresenterType">
             <summary>   Gets or sets the type of the presenter. </summary>
            
             <value> The type of the presenter. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.PresenterAttributes.BooleanPresenterAttribute.TrueText">
             <summary>   Gets or sets the custom true text. </summary>
            
             <value> The true text. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.PresenterAttributes.BooleanPresenterAttribute.FalseText">
             <summary>   Gets or sets the custom false text. </summary>
            
             <value> The false text. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.PresenterAttributes.BooleanPresenterAttribute.#ctor(Keysight.Aes.Asf.Solutions.PresenterAttributes.BooleanPresenterTypes)">
             <summary>   Constructor. </summary>
            
             <param name="presenterType">    The type of the presenter. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.PresenterAttributes.BooleanPresenterAttribute.#ctor(System.String,System.String)">
             <summary>   Constructor for custom text presentation. </summary>
            
             <param name="trueText">     The text to show if the bool is true. </param>
             <param name="falseText">    The text to show if the bool is false. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.SolutionConfiguration">
            <summary>
            The base class to hold the configuration for a solution. For your solution, derive from this
            class and add all the properties like instrument (VISA) addresses, channel numbers, probe
            types etc. that define the solution setup and are NOT considered to be user configurable (as
            for example through an exposed property in a TAP test step).
            
            You should decorate your derived class with the DisplayName attribute which should contain
            the product number and a short name of the solution, e.g. "BT2191A Self-Discharge Measurement".
            
            You can also set the SolutionColor and SolutionToken properties in your constructor,
            otherwise individual ones will be assigned automatically. The Color is used for grouping
            in the Solution Configurator GUI and the token is used to give a brief (3 to 5 letter)
            representation of the solution (e.g. the product number or an abbreviation like "SDM" for
            Self-Discharge Measurement).
            
            Class instances are serialized to XML. Therefore, all the controlling attributes from the
            System.Xml.Serialization namespace can be used if there is any desire to do so. All public
            fields AND properties will be serialized. The serialization is fully version tolerant, i.e.
            when deserializing different versions of xml and class types, extra elements in the xml but
            missing in the class will be ignored and missing elements in the xml will be filled in with
            the .NET default values (this is the standard behaviour of the .NET XmlSerializer).
            
            Note that for screen presentation in the Solution Configurator GUI, ONLY PUBLIC PROPERTIES
            will be displayed; fields will be ignored.
            
            For on screen presentation, properties can be marked with the Attributes from the
            System.ComponentModel namespace. The number of attributes that are actually evaluated by the
            Solution Configurator GUI may change across versions. Here are a few examples:
            
            Browsable       Determines whether the Property is visible in the Solution Configurator GUI
                            Instead of setting this to false, you may as well just use a Field.
            Description     Will be displayed as a tooltip or similar in the Solution Configurator GUI
            DisplayName     The property name as displayed to the user.
            
            When implementing your solution logic, you will want to write out the XML file with the
            intellisense help. For your configuration class, the attributes will probably suffice since
            only the configuration editor has to work with the class. To avoid warnings for all your
            public properties about missing XML comments, you can surround them with
            
            #pragma warning disable 1591
            ...all your properties without comments go here...
            #pragma warning restore 1591
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.SolutionConfiguration.Version">
             <summary>
             Gets or sets the version of your configuration class. This defaults to 1. Make sure to
             increase this in your constructor whenever you add or change elements of your class. This
             will allow you to notice when an older version of a setup has been loaded and thus new
             (mandatory) properties may be missing or filled in with default values.
             </summary>
            
             <value> The version. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.SolutionConfiguration.ConfigurationName">
            <summary>
            The user specified identifier of the configuration. The SolutionCatalog class will make sure
            that every identifier only exists once per machine.
            Currently, since there is no unique service per machine, several applications allowing
            configuration may run in parallel and thus elude the integrated checking.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.SolutionConfiguration.IsPlainXml">
             <summary>
             Gets a value indicating whether this object is plain XML which means that any Edit effort
             will not be saved in the catalog.
             </summary>
            
             <value> true if this object is plain xml, false if not. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.SolutionConfiguration.PlainXml">
             <summary>   Gets or sets the plain XML. </summary>
            
             <value> The plain XML. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.SolutionConfiguration.MissingType">
             <summary>   Gets or sets the type of the missing configuration class. </summary>
            
             <value> The type of the missing class. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.SolutionConfiguration.ToString">
             <summary>   Returns a string that represents the current object. </summary>
            
             <returns>   A string that represents the current object. </returns>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.SolutionConfiguration.SolutionTypeName">
            <summary>   Gets the type of the solution (e.g. the product number and description) as a string to show on screen. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.SolutionConfiguration.SolutionColor">
             <summary>   Gets the color of the solution that is used for representation in chits and panels of the configuration tool. You can set this in you derived class in your constructor. </summary>
            
             <value> The color of the solution. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.SolutionConfiguration.SolutionModelNumber">
             <summary>   Gets the solution token that is used for representation in chits and panels of the configuration tool. </summary>
            
             <value> The solution token. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.SolutionConfiguration.Clone">
             <summary>
             Returns a shallow copy of the Configuration, i.e. value fields and properties are copied but
             reference properties will still point to the same instance.
             </summary>
            
             <returns>   A copy of this configuration. </returns>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.SolutionConfiguration.IsDefault">
            <summary>
            A configuration can be declared Default. If only one configuration exists for a solution type,
            it will automatically be the default configuration without the IsDefault being set to true
            necessarily. The configuration returned by SolutionCatalog.GetDefaultConfiguration() is
            effected by this parameter.
            This is not user write accessible, the flag is managed by the Catalog functions for the default
            configurations.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.SolutionConfiguration.GetSolutionFullName(System.Type)">
             <summary>   Gets the full name of the solution including the model number and name, e.g. "N1234A Superb Evaluator". </summary>
            
             <param name="configurationType">    Type of the configuration. </param>
            
             <returns>   The solution's full name. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.SolutionConfiguration.GetSolutionModelNumber(System.Type)">
             <summary>   Gets the solution model number, e.g. "N1234A". </summary>
            
             <param name="configurationType">    Type of the configuration. </param>
            
             <returns>   The solution's model number. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.SolutionConfiguration.GetSolutionModelNumber(System.String)">
             <summary>   Gets the solution model number, e.g. "N1234A". </summary>
            
             <param name="fullSolutionName"> Full name of the solution, e.g. "N1234A Superb Evaluator". </param>
            
             <returns>   The solution's model number. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.SolutionConfiguration.GetSolutionName(System.Type)">
             <summary>   Gets the solution name without the model number, e.g. "Superb Evaluator". </summary>
            
             <param name="configurationType">    Type of the configuration. </param>
            
             <returns>   The solution name. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.SolutionConfiguration.GetSolutionName(System.String)">
             <summary>   Gets the solution name without the model number, e.g. "Superb Evaluator". </summary>
            
             <param name="fullSolutionName"> Full name of the solution, e.g. "N1234A Superb Evaluator". </param>
            
             <returns>   The solution name. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.SolutionConfiguration.GetSolutionColor(System.Type)">
             <summary>   Gets the preferred icon color. </summary>
            
             <param name="configurationType">    Type of the configuration. </param>
            
             <returns>   The solution color. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.SolutionConfiguration.GetMultiAppSortOrder(System.Type)">
             <summary>   Gets the sort order for this app in a multi application solution. </summary>
            
             <param name="configurationType">    Type of the configuration. </param>
            
             <returns>   The multi application sort order. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.SolutionInteractions">
            <summary>
            This class allows a solution core to send feedback information back to a hosting
            instance (which could be a UI, an automated test wrapper etc.). The wrapper has
            to instantiate the class and populate the delegates, then hand the reference
            to the solution core.
            If no delegates are set, then by default all feedback will be sent to the
            application log.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.SolutionInteractions.UserFeedbackAction">
             <summary>
             Provides user feedback during a test or process. This will typically go to a non-modal
             control, like a window status bar, a ProgressView control etc. or may be rerouted to a log
             during automated testing.
             All values set to null will remain on screen unchanged. To hide a progress bar, set the
             ProgressMinimum and ProgressMaximum both to zero.
             </summary>
            
             <param name="level">            The level. </param>
             <param name="title">            The title. </param>
             <param name="text">             The text. </param>
             <param name="progressMinimum">  The progress minimum. </param>
             <param name="progressMaximum">  The progress maximum. </param>
             <param name="progressValue">    The progress value. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.SolutionInteractions.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.SolutionInteractions.SetUserFeedback">
            <summary>   Sets the user feedback which includes logging it. All parameters set to null will remain unchanged on the screen. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.SolutionInteractions.RegisterUserFeedbackPresenter(Keysight.Aes.Asf.Solutions.SolutionInteractions.UserFeedbackAction)">
             <summary>   Registers the user feedback presenter. </summary>
            
             <param name="presenter">    The presenter. </param>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.SolutionInteractions.ShowUserFeedback">
            <summary>   Shows the user feedback. This is the service hook for any actual presenter. Consumers of the SolutionServices shall call SetUserFeedback instead. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.SolutionInteractions.ShowSolutionConfigurationDialog">
            <summary>   The action to show the solution configuration dialog. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.SolutionInteractions.ShowSolutionHostConfigurationDialog">
            <summary>   The action to show the solution host configuration dialog. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.SolutionInteractions.ShowAutoCsvExportConfigurationDialog">
            <summary>   The action to show the solution configuration dialog. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.SolutionService.ServiceProxy">
            <summary>
            This class can find or launch a solution service server so that a client can talk to it.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.SolutionService.ServiceProxy.C_DEFAULT_PORT">
            <summary>   The default port for the Keysight Solution Service. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Storage.SolutionFileTypes">
            <summary>   Provides suffixes, file masks etc. for all kinds of solution file types. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.Storage.SolutionFileTypes.C_SOLUTION_FILE_SUFFIX">
            <summary>   The solution result file suffix "kss". </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.Storage.SolutionFileTypes.C_SOLUTION_FILE_MASK">
            <summary>   A premade file mask for the FileDialogs that only presents the solution file type. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.Storage.SolutionFileTypes.C_SOLUTION_OR_ANY_FILE_MASK">
            <summary>   A premade file mask for the FileDialogs that presents the solution file type or any file type. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.Storage.SolutionFileTypes.C_TEST_SETTINGS_FILE_SUFFIX">
            <summary>   The test settings file suffix. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.Storage.SolutionFileTypes.C_TEST_SETTINGS_FILE_MASK">
            <summary>   A premade file mask for the FileDialogs that only presents the solution file type. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.Storage.SolutionFileTypes.C_TEST_SETTINGS_ALL_FILE_MASK">
            <summary>   A premade file mask for the FileDialogs that presents all file types from which settings could potentially be loaded. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.Storage.SolutionFileTypes.C_TEST_SETTINGS_OR_ANY_FILE_MASK">
            <summary>   A premade file mask for the FileDialogs that presents all file types from which settings could potentially be loaded plus the Any File mask. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Storage.SolutionInstrument">
            <summary>   Describes a single instrument used within a solution. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.Storage.SolutionInstrument.Role">
             <summary>   Gets or sets the role, e.g. "Voltmeter" . </summary>
            
             <value> The role. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.Storage.SolutionInstrument.Identification">
             <summary>
             Gets or sets the identification as returned by an *IDN? query or any custom identifier, e.g.
             for legacy instruments like the 3458A.
             </summary>
            
             <value> The identification. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.Storage.SolutionInstrument.VisaAddress">
             <summary>   Gets or sets the visa address. </summary>
            
             <value> The visa address. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionInstrument.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionInstrument.#ctor(System.String,Keysight.Aes.Asf.Instruments.VisaInstrument)">
             <summary>   Constructor. </summary>
            
             <param name="role">         The role of the instrument. </param>
             <param name="instrument">   The instrument. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Storage.SolutionInstruments">
            <summary>
            A class that allows for the simple registration of instruments used in a solution test.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionInstruments.Reset">
            <summary>   Removes all registered instruments. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionInstruments.Register(Keysight.Aes.Asf.Solutions.Storage.SolutionInstrument)">
             <summary>
             Registers an instrument. If an instrument is already registered with the same visa address,
             the registration is updated.
             </summary>
            
             <param name="instrument">   The instrument to register. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionInstruments.ToXml">
             <summary>
             Converts this object to an XML node that can be inserted into any XML document.
             </summary>
            
             <returns>   This object as a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionInstruments.FromXml(System.String)">
             <summary>   Initializes this object from the given XML string. </summary>
            
             <param name="xml">  The XML. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionInstruments.ToCsv(Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings)">
             <summary>   Converts this object to a Csv section using the provided settings. </summary>
            
             <param name="settings"> Options for controlling the operation. If null, the application wide
                                     settings will be used. </param>
            
             <returns>   This object as a csv string. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Storage.SolutionMetaData">
            <summary>   The meta data that accompanies the saved data. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.Storage.SolutionMetaData.SolutionProductNumber">
             <summary>   Gets or sets the solution product number, e.g. "AES1714A". </summary>
            
             <value> The solution product number. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.Storage.SolutionMetaData.SolutionName">
             <summary>   Gets or sets the full solution name, e.g. "AES1714A Supersonic Test". </summary>
            
             <value> The solution name. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.Storage.SolutionMetaData.MetaDataVersion">
             <summary>
             Gets the version. 
             Increase this here in source code whenever new properties are added to this class.
             Do not change this in your consumer code, i.e. do not use the Setter.
             </summary>
            
             <value> The version of the class. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.Storage.SolutionMetaData.Timestamp">
             <summary>   Gets or sets the time stamp of the stored solution data, typically the start of a test. </summary>
            
             <value> The time stamp. </value>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Storage.SolutionResults">
            <summary>   . </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Storage.SolutionResults.Fileformats">
            <summary>   The types of files supported. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.Storage.SolutionResults.Fileformats.Hdf5">
            <summary>   HDF5 - the current standard </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.Storage.SolutionResults.Fileformats.Xml">
            <summary>   XML - former standard, still supported </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.Storage.SolutionResults.FORMAT_SIGNATURE_HDF">
            <summary>   The byte signature for identifying the HDF5 format. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionResults.ToBinary(Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor,Keysight.Aes.Asf.Solutions.Storage.SolutionResults.Fileformats)">
            <summary>   Converts a solution's runtime results to a byte array. </summary>
            
            <param name="solutionDescriptor">  Information describing the solution. </param>
            <param name="format">   Filetype that shall be used. </param>
            
            <returns>   File as a byte array. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionResults.ToBinary(Keysight.Aes.Asf.Solutions.Storage.SolutionStorage,Keysight.Aes.Asf.Solutions.Storage.SolutionResults.Fileformats)">
            <summary>   Converts a solution's runtime results to a byte array. </summary>
            
            <param name="store">    A storage containing information describing the solution. </param>
            <param name="format">   Filetype that shall be used. </param>
            
            <returns>   File as a byte array. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionResults.FromBinary(System.Byte[],Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor)">
             <summary>   Recreates the test setup and the data from a file of a supported kind. </summary>
            
             <param name="file">                The file that shall be opened. Supported are XML and HDF5 files. </param>
             <param name="solutionDescriptor">  Information describing the solution. </param>
            
             <returns>   The complete store for further processing of components not covered here. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionResults.FromBinary(System.Byte[],Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor,System.DateTime)">
             <summary>   Recreates the test setup and the data from a file of a supported kind. </summary>
            
             <param name="file">                 The file that shall be opened. Supported are XML and HDF5 files. </param>
             <param name="solutionDescriptor">   Information describing the solution. </param>
             <param name="alternateTestDate">    The alternate test date. This is used if no time stamp
                                                 is found in the stored data (legacy kss files). </param>
            
             <returns>   The complete store for further processing of components not covered here. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionResults.CheckIfHdf5(System.Byte[])">
            <summary>   Checks whether a byte array is an HDF5 file. </summary>
            
            <param name="file">     The byte array to investigate. </param>
            
            <returns>   A bool indicating if the byte array is an HDF5 file. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Storage.SolutionResultsHdf5">
            <summary>   Contains methods to save and load the runtime results of an expert solution using an HDF5 file.   </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionResultsHdf5.ToHdf5(Keysight.Aes.Asf.Solutions.Storage.SolutionStorage)">
            <summary>   Converts a solution's runtime results to HDF5 data. </summary>
            
            <param name="store">  Information describing the solution. </param>
            
            <returns>   HDF5 file as a byte array. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionResultsHdf5.FromHdf5(System.Byte[],Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor,System.DateTime)">
            <summary>   Recreates the test setup and the data from HDF5. </summary>
            
            <param name="file">                 The HDF5 file that shall be opened. </param>
            <param name="solutionDescriptor">   Information describing the solution. </param>
            <param name="alternateTestDate">    The alternate test date. This is used if no time stamp
                                                is found in the stored data (legacy kss files). </param>
            
            <returns>   The complete store for further processing of components not covered here. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage">
            <summary>   Holds all data that makes up a complete solution storage and supports self de/serialization. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories">
            <summary>   The categories under which items can be stored. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories.MetaData">
            <summary>   Classes like the SolutionMetaData go here. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories.Settings">
            <summary>   Test and hardware setup classes go here. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories.Results">
            <summary>   Test results and logging go here. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories.Custom">
            <summary>   A category for data individual to a certain application. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.ItemNames">
            <summary>   Preconfigured item names. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.SolutionCode">
             <summary>
             Gets or sets the solution code that uniquely identifies the solution that can handle this
             storage data, e.g. "AES1712A".
             </summary>
            
             <value> The solution code. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <param name="solutionCode"> The solution code that uniquely identifies the solution that can
                                         handle this storage data, e.g. "AES1712A". </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Add(Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories,System.Object)">
             <summary>
             Adds a solution result item to the given category as the default item. If a default item is
             already stored under that category, it will be silently overwritten.
             </summary>
            
             <param name="category"> The category. </param>
             <param name="item">     The item. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Add(Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories,Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.ItemNames,System.Object)">
             <summary>
             Adds a solution result item to the given category. If an item is already stored under that
             name and category, it will be silently overwritten.
             </summary>
            
             <param name="category"> The category. </param>
             <param name="itemName"> Name of the item. </param>
             <param name="item">     The item. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Add(Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories,System.String,System.Object)">
             <summary>
             Adds a solution result item to the given category. If an item is already stored under that
             name and category, it will be silently overwritten.
             If the item is null, an existing item will be removed and no new item will be stored.
             </summary>
            
             <param name="category"> The category. </param>
             <param name="itemName"> Name of the item. </param>
             <param name="item">     The item. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Exists(Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories)">
             <summary>   Determine if a default item exists in a certain category. </summary>
            
             <param name="category"> The category. </param>
            
             <returns>   true if it exists, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Exists(Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories,Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.ItemNames)">
             <summary>   Determine if a particular item exists in a certain category. </summary>
            
             <param name="category"> The category. </param>
             <param name="itemName"> Name of the item. </param>
            
             <returns>   true if it exists, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Exists(Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories,System.String)">
             <summary>   Determine if a particular item exists in a certain category. </summary>
            
             <param name="category"> The category. </param>
             <param name="itemName"> Name of the item. </param>
            
             <returns>   true if it exists, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Get(Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories)">
             <summary>   Gets the default item stored under a certain category. </summary>
            
             <param name="category"> The category. </param>
            
             <returns>   An object. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Get(Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories,Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.ItemNames)">
             <summary>   Gets the item stored under a certain category and name. </summary>
            
             <param name="category"> The category. </param>
             <param name="itemName"> Name of the item. </param>
            
             <returns>   An object. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Get(Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories,System.String)">
             <summary>   Gets the item stored under a certain category and name. </summary>
            
             <param name="category"> The category. </param>
             <param name="itemName"> Name of the item. </param>
            
             <returns>   An object. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Clear">
            <summary>   Clears this object to its blank/initial state. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Clear(Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories)">
            <summary>   Removes all entries from a particular category. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Clear(Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.Categories,Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.ItemNames)">
            <summary>   Removes a particular item from a category. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.CreateStorage(Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor)">
             <summary>   Creates a storage from a solution descriptor. </summary>
            
             <param name="solutionDescriptor">     Information describing the solution. </param>
            
             <returns>   The new storage. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.ToXml">
             <summary>   Converts this solution storage content to XML. </summary>
            
             <returns>   The given data converted to a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.FromXml(System.String)">
             <summary>   Recreates the Solution Storage data from XML. </summary>
            
             <exception cref="T:System.Xml.XmlException"> Thrown when an XML error condition occurs. </exception>
            
             <param name="xml">                      The XML. </param>
            
             <returns>   The test setup class instance that was used for the test. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.ReadFromXml(System.String)">
             <summary>   Creates a solution storage instance from serialized XML. </summary>
            
             <param name="xml">  The XML. </param>
            
             <returns>   The data that was read from the XML. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionStorage.ToCsv(Keysight.Aes.Asf.MVVM.ViewModels.CsvExportSettings)">
             <summary>   Converts the settings to a CSV. </summary>
            
             <param name="settings"> Options for controlling the operation. </param>
            
             <returns>   settings as a string. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Storage.SolutionResultsXml">
            <summary>   Contains helper methods to save and load the runtime results of an expert solution using an xml file. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionResultsXml.ToXml(Keysight.Aes.Asf.Solutions.Storage.SolutionStorage)">
             <summary>   Converts a solution's runtime results to XML data. </summary>
            
             <param name="store">   Information describing the solution. </param>
            
             <returns>   The given data converted to a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionResultsXml.FromXml(System.String,Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor,System.DateTime)">
             <summary>   Recreates the test setup and the data from XML. </summary>
            
             <exception cref="T:System.Xml.XmlException"> Thrown when an XML error condition occurs. </exception>
            
             <param name="xml">                  The XML. </param>
             <param name="solutionDescriptor">   Information describing the solution. </param>
             <param name="alternateTestDate">    The alternate test date. This is used if no time stamp
                                                 is found in the stored data (legacy kss files). </param>
            
             <returns>   The complete store for further processing of components not covered here. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Solutions.Storage.SolutionTestSettingsXml">
            <summary>   A helper class to de/serialized solution test settings. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionTestSettingsXml.ToXml(Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor,System.Object)">
             <summary>   Converts a solution's test settings to XML data. </summary>
            
             <param name="solutionDescriptor">   Information describing the solution. </param>
             <param name="testSetup">            The test setup. </param>
            
             <returns>   The given data converted to a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Solutions.Storage.SolutionTestSettingsXml.FromXml(System.String,Keysight.Aes.Asf.Solutions.ExpertSolutions.ExpertDescriptor)">
             <summary>   Recreates the test setup from XML. </summary>
            
             <param name="xml">          The XML. </param>
             <param name="solutionDescriptor">   Information describing the solution. </param>
             
             <returns>   The complete store for further processing of components not covered here. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Geometry.DataSyntaxHelper">
            <summary>  Utility functions for the WPF data syntax for path objects. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Geometry.DataSyntaxHelper.GetBezierDataSyntax(System.Windows.Point,Keysight.Aes.Asf.Geometry.Directions,Keysight.Aes.Asf.Geometry.Directions,System.Double)">
             <summary>   Gets the bezier data syntax for a WPF path starting at 0,0. </summary>
            
             <param name="endPoint">         The end point. </param>
             <param name="startDirection">   The start direction. </param>
             <param name="endDirection">     The end direction. </param>
             <param name="lead">             Higher lead values generate more "pull" on the bezier curve. </param>
            
             <returns>   The complete bezier data syntax, e.g. "M 0,0 C 10.5,0 21.7,12 25,25". </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Geometry.DataSyntaxHelper.GetBezierDataSyntax(System.Collections.Generic.List{System.Windows.Point})">
             <summary>   Gets the bezier data syntax for a WPF path. </summary>
            
             <param name="points">   The points in the order control point 1, control point 2, end point. </param>
            
             <returns>   The bezier data syntax, e.g. "C 10.5,0 21.7,12 25,25". </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Geometry.DataSyntaxHelper.GetPathDataSyntax(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Boolean)">
             <summary>   Gets the path data syntax for a list of points. </summary>
            
             <param name="points">       The points to process. </param>
             <param name="isAbsolute">   true to get absolute path syntax. </param>
            
             <returns>
             The path data syntax, e.g. "M 10,20 L 4,8 L 17,12" for absolute syntax or "M 10,20 l 4,8 l
             171,2" for relative.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Geometry.DataSyntaxHelper.GetPathDataSyntax(System.Boolean,System.Windows.Point[])">
             <summary>   Gets the absolute path data syntax for a list of points. </summary>
            
             <param name="isAbsolute">   true to get absolute path syntax. </param>
             <param name="points">       The points to process. </param>
            
             <returns>
             The path data syntax, e.g. "M 10,20 L 4,8 L 17,12" for absolute syntax or "M 10,20 l 4,8 l
             171,2" for relative.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Geometry.DataSyntaxHelper.ToPathData(System.Windows.Point)">
             <summary>   Converts a point to a path data. </summary>
            
             <param name="p">    The Point to process. </param>
            
             <returns>   the point coordinates as a path data string. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Geometry.Directions">
            <summary>   Values that represent directions. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Geometry.Directions.North">
            <summary>   An enum constant representing the north option or up on the computer screen. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Geometry.Directions.East">
            <summary>   An enum constant representing the east option or right on the computer screen. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Geometry.Directions.South">
            <summary>   An enum constant representing the south option or down on the computer screen. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Geometry.Directions.West">
            <summary>   An enum constant representing the west option or left on the computer screen. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Geometry.DirectionsHelper">
            <summary>   Utility functions for directions. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Geometry.DirectionsHelper.ZeroPoint">
            <summary>   The zero point. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Geometry.DirectionsHelper.IsVertical(Keysight.Aes.Asf.Geometry.Directions)">
             <summary>   Query if 'dir' is vertical. </summary>
            
             <param name="dir">  The direction. </param>
            
             <returns>   true if vertical, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Geometry.DirectionsHelper.IsHorizontal(Keysight.Aes.Asf.Geometry.Directions)">
             <summary>   Query if 'dir' is horizontal. </summary>
            
             <param name="dir">  The direction. </param>
            
             <returns>   true if horizontal, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Geometry.DirectionsHelper.GetOpposite(Keysight.Aes.Asf.Geometry.Directions)">
             <summary>   Gets the opposite direction. </summary>
            
             <param name="dir">  The direction. </param>
            
             <returns>   The opposite direction. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Geometry.DirectionsHelper.MovePoint(System.Windows.Point,Keysight.Aes.Asf.Geometry.Directions,System.Double)">
             <summary>   Move a point into a certain direction for a distinct distance. </summary>
            
             <param name="p">        The Point to process. </param>
             <param name="dir">      The direction. </param>
             <param name="delta">    The delta. </param>
            
             <returns>   The resulting location. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Geometry.DirectionsHelper.MovePoint(System.Windows.Point,Keysight.Aes.Asf.Geometry.Directions,System.Double,System.Double)">
             <summary>   Move a point into a certain direction for a distinct distance depending on the direction. </summary>
            
             <param name="p">    The Point to process. </param>
             <param name="dir">  The direction. </param>
             <param name="dx">   The delta in case the direction is horizontal. </param>
             <param name="dy">   The delta in case the direction is vertical. </param>
            
             <returns>   The resulting location. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Geometry.Distance">
            <summary>   Contains helper functions to calculate distances between objects. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Geometry.Distance.Between(System.Double,System.Double,System.Double,System.Double)">
             <summary>   Calculates the distance between two points. </summary>
            
             <param name="x1">   The first x value. </param>
             <param name="y1">   The first y value. </param>
             <param name="x2">   The second x value. </param>
             <param name="y2">   The second y value. </param>
            
             <returns>   The distance between the points. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Geometry.Distance.Between(System.Double,System.Double,System.Windows.Point)">
             <summary>   Calculates the distance between two points. </summary>
            
             <param name="x1">   The first x value. </param>
             <param name="y1">   The first y value. </param>
             <param name="p2">   The second Point. </param>
            
             <returns>   The distance between the points. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Geometry.Distance.Between(System.Windows.Point,System.Windows.Point)">
             <summary>   Calculates the distance between two points. </summary>
            
             <param name="p1">   The first Point. </param>
             <param name="p2">   The second Point. </param>
            
             <returns>   The distance between the points. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Geometry.SplineGeometry">
            <summary>   A class to calculate spline geometries between points. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Geometry.SplineGeometry.GetBezierControlPoints(System.Windows.Point,Keysight.Aes.Asf.Geometry.Directions,Keysight.Aes.Asf.Geometry.Directions,System.Double)">
             <summary>
             Gets the control points for a bezier connector starting at (0,0) and connecting to the end
             point.
             </summary>
            
             <param name="endPoint">         The end point. </param>
             <param name="startDirection">   The start direction. </param>
             <param name="endDirection">     The end direction. </param>
             <param name="lead">             Higher lead values generate more "pull" on the bezier curve. </param>
            
             <returns>
             Control Point one (referring to the start point (0,0) and Control Point two defining the
             bezier connector.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Geometry.TriangleGeometry">
            <summary>   Contains various methods related to triangle geometries. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Geometry.TriangleGeometry.GetPattern(System.Double,System.Int32,System.Int32)">
             <summary>   Creates a triangle pattern. </summary> 
            
             <param name="sideLength">   Length of a triangle side. </param>
             <param name="countX">       The columns to create. </param>
             <param name="countY">       The rows to create. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.GvlFile.Create(System.Collections.Generic.List{System.Tuple{System.String,System.String}},System.UInt16,System.Int32)">
             <summary>
             Creates the contents for a gvl file for a list of named variables that can be imported into a
             NVL Receiver within CoDeSys. Use the TypeMapper to get the CoDeSys type names for .Net types
             if required.
             </summary>
            
             <param name="namesAndTypes">    List of names and CoDeSys-types. </param>
             <param name="cobId">            The CobId of the data block. </param>
             <param name="port">             The UDP port. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.CoDeSys.SafetyDisconnect.SafetyDisconnectNvlIn">
            <summary>
            List of variables in the same order as they are defined within codesys as a NVL Sender object
            Note that you have to make absolutely sure you're using types of the same size. A list of
            CoDeSys types and the according .Net types is found in the CoDeSysCom project in
            TypeMapper.cs.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.SafetyDisconnect.SafetyDisconnectNvlIn.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.SafetyDisconnect.SafetyDisconnectNvlIn.CheckHeader">
             <summary>
             Determines if the header information in a received packet matches the expected values when
             talking to a CoDeSys 3.5 PLC implementing the SafetyDisconnect.
             </summary>
            
             <exception cref="T:System.ApplicationException"> Thrown when the header information does not match. </exception>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.CoDeSys.SafetyDisconnect.SafetyDisconnectNvlOut">
            <summary>   List of variables to send to codesys for the SafetyDisconnect implementation. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.SafetyDisconnect.SafetyDisconnectNvlOut.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.SafetyDisconnect.SafetyDisconnectNvlOut.SetState(System.Int32,System.Boolean)">
             <summary>   Sets a channel state. </summary>
            
             <param name="index">    Zero-based index of the channel. </param>
             <param name="onOff">    true to enable, false to disable the channel. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.SafetyDisconnect.SafetyDisconnectNvlOut.IdleAll">
            <summary>   Initializes the class to not affect any relay at all. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.CoDeSys.NvlExport">
            <summary>   Marks the property as part of the network variable list. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Industrial.CoDeSys.NvlExport.IecType">
            <summary>   Gets or sets the IEC type to export, e.g. "UDINT". </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.NvlExport.#ctor">
            <summary>   Marks the property as part of the network variable list. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.NvlExport.#ctor(System.String)">
             <summary>   Marks the property as part of the network variable list. </summary>
            
             <param name="iecType">  The IEC type to export to, e.g. "UDINT" </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.CoDeSys.Nvl">
            <summary>
            A network variable list. Derive from this class and add your variables as public properties
            marked with the NvlExport attribute.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Industrial.CoDeSys.Nvl.CobId">
            <summary>   The CobID that is used in the data blocks. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Nvl.#ctor(System.UInt16)">
             <summary>   Constructor. </summary>
            
             <param name="cobId">    The CobID that is used in the data blocks. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Nvl.SetValues(Keysight.Aes.Asf.Industrial.CoDeSys.Packet)">
             <summary>   Sets the Nvl values by retrieving them from the packet. </summary>
            
             <param name="packet">   The packet. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Nvl.SetValues(System.Collections.Generic.List{System.Object})">
             <summary>   Sets the values in the order they appear in the value list. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="values">   The values. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Nvl.GetValues">
            <summary>   Returns the NVL properties as a list of objects. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Nvl.GetTypes">
             <summary>   Returns the .Net types of the nvl members. </summary>
            
             <returns>   The types. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Nvl.GetDeclarations">
             <summary>   Returns the NLV properties as a list of paired names and IEC types </summary>
            
             <returns>   The declarations. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Nvl.GetGvlDescriptor(System.Int32)">
             <summary>   Gets gvl descriptor e.g. to import the list into a CoDeSys NLV receiver. </summary>
            
             <returns>   The gvl descriptor. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.CoDeSys.Packet">
            <summary>
            A packet contains the header and data that make up a CoDeSys packet. Also contains the binary
            de-/serializers for the data that is sent through the connection. Does currently not support
            splitting or combining of packets that were sent in multiple parts.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.Identity">
            <summary>
            CoDeSys protocol identity code "3S-\x00" in little endian order
            (Byte0=0x00; Byte1="-"; Byte2="S"; Byte3="3")
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.ID">
            <summary>   The block ID. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.CobId">
            <summary>   The CobID. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.SubPacketIndex">
            <summary>   Zero-based index of the sub packet if the cob is transmitted in multiple blocks due to size. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.ItemCount">
            <summary>   The number of items in the Data segment. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.Length">
            <summary>   The total length in bytes including the header. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.PacketCounter">
            <summary>   The total number of transmitted packets. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.Flags">
            <summary>   The flags. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.Checksum">
            <summary>   The checksum. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.Data">
            <summary>   The data. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.FromNvl(Keysight.Aes.Asf.Industrial.CoDeSys.Nvl)">
             <summary>   Initializes this object from the given network variable list. </summary>
            
             <param name="list"> The network variable list. </param>
            
             <returns>   A Packet. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.FromData(System.UInt16,System.Collections.Generic.List{System.Object})">
             <summary>   Initializes this object from the given CobID and variable list. </summary>
            
             <param name="cobId">        The CobID. </param>
             <param name="variables">    The variables. </param>
            
             <returns>   A Packet. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.FromBinary(System.Byte[])">
             <summary>   Initializes this object from the given binary data (usually from received data).</summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="data"> The data. </param>
            
             <returns>   A Packet. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.ToBinary">
             <summary>   Convert this object into a binary representation that can be sent to the PLC. </summary>
            
             <returns>   A binary representation of this object. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.ToValues(System.Collections.Generic.List{System.Type})">
             <summary>   Gets the according .NET types from the network variable list. </summary>
            
             <param name="typeList"> List of types. </param>
            
             <returns>   typeList as a List&lt;object&gt; </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Packet.Fingerprint">
             <summary>   Gets a fingerprint for a packet. </summary>
            
             <returns>   A string. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.CoDeSys.Receiver">
            <summary>   A receiver consumes the NVL packets that are broadcast via UDP port 1202. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.CoDeSys.Receiver.C_DEFAULT_PORT">
            <summary>   The default port used for communications. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Receiver.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Receiver.#ctor(System.String)">
             <summary>   Constructor that takes a remote IP address </summary>
            
             <param name="ipAddress">    The IP address. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Receiver.#ctor(System.Net.IPAddress)">
             <summary>   Constructor that takes a remote IP address. </summary>
            
             <param name="ipAddress">    The IP address. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Receiver.Connect(System.String)">
             <summary>   Connects to a remote host on the default port. </summary>
            
             <param name="ipAddress">    The IP address of the host. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Receiver.Connect(System.Net.IPAddress)">
             <summary>   Connects to a remote host on the default port. </summary>
            
             <param name="ipAddress">    The IP address. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Receiver.Connect(System.Net.IPAddress,System.Int32)">
             <summary>   Connects to a remote host. </summary>
            
             <param name="ipAddress">    The IP address. </param>
             <param name="port">         The port. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Receiver.Close">
            <summary>   Closes this object. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Receiver.Read(Keysight.Aes.Asf.Industrial.CoDeSys.Nvl)">
             <summary>
             Reads a NVL into the given target class instance in which the CobId must be set correctly.
             </summary>
            
             <param name="target">   The target instance to fill in. </param>
            
             <returns>   true if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Receiver.Read(System.UInt16,System.Collections.Generic.List{System.Type},System.Int32,System.Int32)">
             <summary>
             Reads a distinct Packet from the connected UDP port and returns the Nvl values.
             </summary>
            
             <param name="cobId">            Identifier for the cob. </param>
             <param name="typeList">         List of expected types. </param>
             <param name="maxPacketRead">    If this number of packets was read and the CobID was not
                                             among them, null is returned. </param>
             <param name="timeoutSeconds">   The timeout in seconds. </param>
            
             <returns>   A List of objects holding the values. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Receiver.Read(System.UInt16,System.Int32,System.Int32)">
             <summary>   Reads a Packet from the connected UDP port. </summary>
            
             <param name="cobId">            Identifier for the expected CobID or 0 to accept any packet. </param>
             <param name="maxPacketRead">    If this number of packets was read and the CobID was not
                                             among them, null is returned. </param>
             <param name="timeoutSeconds">   The timeout in seconds. </param>
            
             <returns>   A Packet. </returns>
        </member>
        <member name="P:Keysight.Aes.Asf.Industrial.CoDeSys.Receiver.IsPacketAvailable">
             <summary>   Queries if a packet is available. </summary>
            
             <returns>   true if a packet is available, false if not. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.CoDeSys.Sender">
            <summary>   Class to send telegrams to the receiving PLC. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.CoDeSys.Sender.C_DEFAULT_PORT">
            <summary>   The default port. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Sender.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Sender.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <param name="ipAddress">    The IP address of the target PLC or a broadcast address. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Sender.#ctor(System.Net.IPAddress)">
             <summary>   Constructor. </summary>
            
             <param name="ipAddress">    The IP address of the target PLC or a broadcast address. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Sender.Connect(System.String)">
             <summary>   Connects. </summary>
            
             <param name="ipAddress">    The IP address of the target PLC or a broadcast address. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Sender.Connect(System.Net.IPAddress)">
             <summary>   Connects the given IP address. </summary>
            
             <param name="ipAddress">    The IP address of the target PLC or a broadcast address. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Sender.Connect(System.Net.IPAddress,System.Int32)">
             <summary>   Connects. </summary>
            
             <param name="ipAddress">    The IP address of the target PLC or a broadcast address. </param>
             <param name="port">         The port. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Sender.Close">
            <summary>   Closes this object. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Sender.Send(Keysight.Aes.Asf.Industrial.CoDeSys.Nvl)">
             <summary>   Send this message by converting the marked properties in the nvl to a matching IEC type. </summary>
            
             <param name="nvl">  The nvl. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Sender.Send(System.UInt16,System.Collections.Generic.List{System.Object})">
             <summary>
             Sends this message by converting the .Net variables to a matching IEC type.
             </summary>
            
             <param name="cobId">        Identifier for the cob. </param>
             <param name="variables">    The variables. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Sender.Send(Keysight.Aes.Asf.Industrial.CoDeSys.Packet)">
             <summary>   Sends this message to the PLC. </summary>
            
             <param name="packet">   The packet. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.Sender.Send(System.Byte[])">
             <summary>
             Send the binary data.
             </summary>
            
             <param name="buffer">   The buffer. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.CoDeSys.TypeMapper">
            <summary>   Code to map IEC 61131 types to .Net types and vice versa. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.TypeMapper.MapType(System.String)">
             <summary>   Map a CoDeSys type to a .Net type. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown for types that can not be mapped. </exception>
            
             <param name="coDeSysType">  The type to map. </param>
            
             <returns>   The according .Net type. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.TypeMapper.MapType(System.Type,System.Boolean)">
             <summary>   Map a .Net type to a CoDeSys type. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown for types that can not be mapped. </exception>
            
             <param name="dotNetType">       The type to map. </param>
             <param name="arithmeticType">   If multiple CoDeSys types exist, select whether to choose an arithmetic type (default). </param>
            
             <returns>   The CoDeSys type as a string as it would be used in PLC code. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.CoDeSys.TypeMapper.ToBinary(System.Object)">
             <summary>   Convert this object into the IEC binary representation. </summary>
            
             <param name="value">    The value. </param>
            
             <returns>   A binary representation of this object. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.Modbus.ModbusConstants">
            <summary>   Constants for modbus communication. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusConstants.MODBUS_TCP_PORT">
            <summary>   The modbus TCP port. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusConstants.MODBUS_TIMEOUT_MS">
            <summary>   The modbus communication timeout in milliseconds. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusConstants.MODBUS_PROTOCOL_ID">
            <summary>   Identifier for the modbus protocol. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusConstants.MODBUS_ERROR_FLAG">
            <summary>
            The modbus error flag that is added to the function code of a response in case an error has
            occured.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusConstants.MBAP_HEADER_LENGTH">
            <summary>   Length of the mbap header. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.Modbus.ModbusConstants.FunctionCodes">
            <summary>   Values that represent modbus function codes. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusConstants.FunctionCodes.ReadInputRegisters">
            <summary>   An enum constant representing the read input registers option. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusConstants.FunctionCodes.WriteMultipleRegisters">
            <summary>   An enum constant representing the write multiple registers option. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.Modbus.ModbusHelper">
            <summary>
            The modbus helper class offers function for communicating over MODBUS via TCP/IP. CAUTION:
            Not all modbus function codes are implemented.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusHelper._client">
            <summary>   The TCP client. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusHelper._ipAddress">
            <summary>   The IP address of the remote system. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusHelper._unitId">
            <summary>   Modbus unit ID. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusHelper._transactionCounter">
            <summary>   The transaction counter used to match related requests and responses. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusHelper.#ctor(System.Net.IPAddress,System.Byte)">
             <summary>
             Initializes a new instance of the modbus helper that is bound to a fixed Ip-Address and unit
             ID.
             </summary>
            
             <param name="ipAddress">    The IP address of the remote system to communicate with. </param>
             <param name="unitId">       (Optional)  Identifier for the unit. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusHelper.WriteMultipleRegisters(System.UInt16,System.Byte[])">
             <summary>
             Writes multiple registers in the remote system (Modbus Function Code FC16).
             </summary>
            
             <exception cref="T:System.TimeoutException"> Thrown when a Timeout error condition occurs. </exception>
            
             <param name="startAddress">     The modbus register start address. </param>
             <param name="dataToBeWritten">  The binary data to be written into the registers. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusHelper.ReadInputRegisters(System.UInt16,System.Byte)">
             <summary>   Requests to read multiple registers of the server. </summary>
            
             <exception cref="T:System.Exception">    Modbus communication error. </exception>
            
             <param name="startAddress">         The register start address. </param>
             <param name="numberOfRegisters">    Number of registers to be read. Note that one register
                                                 has two bytes. </param>
            
             <returns>   The requested register content as a byte array in Big-Endian-Format. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusHelper.hasWriteRequestBeenReceived(Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram)">
             <summary>   Query if a modbus telegram has been received by the remote system. </summary>
            
             <param name="requestTelegram">  The telegram that has been sent prior to the function call. </param>
            
             <returns>   true if telegram has been correctly received, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusHelper.GetTcpStream(System.Int32)">
             <summary>   Gets the MODBUS response telegram. </summary>
            
             <exception cref="T:System.TimeoutException"> Thrown when a Timeout error condition occurs. </exception>
            
             <param name="length">   The length. </param>
            
             <returns>   The serialized response telegram. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusHelper.getResponse(Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram)">
             <summary>   Gets the MODBUS response telegram associated with the given transaction ID. </summary>
            
             <param name="queryTelegram">    The transaction ID. </param>
            
             <returns>   The serialized response telegram with the requested transaction ID. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusHelper.SendModbusTelegram(Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram)">
             <summary>   Sends the modbus telegram. </summary>
            
             <param name="telegram"> The telegram. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusHelper.ConfirmConnection">
             <summary>   Connects to a TCP client. </summary>
            
             ### <exception cref="T:System.TimeoutException"> Thrown when a Timeout error condition occurs. </exception>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusHelper.Close">
            <summary>   Closes the TCP connection. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.Modbus.ModbusRegister">
            <summary>   The modbus register. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusRegister.Value">
            <summary>   The value. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusRegister.#ctor(System.UInt16)">
             <summary>   Constructor. </summary>
            
             <param name="value">    The value. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusRegister.#ctor(System.Byte,System.Byte)">
             <summary>   Constructor. </summary>
            
             <param name="registerHi">   The  higher register. </param>
             <param name="registerLo">   The lower register. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusRegister.FromBytes(System.Byte,System.Byte)">
             <summary>  Converts two bytes into a 16 bit register. </summary>
            
             <param name="registerHi">   The  higher register. </param>
             <param name="registerLo">   The lower register. </param>
            
             <returns>   The 16 bit register consisting of the two input bytes. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusRegister.ToBytes">
             <summary>   Serializes this object to bytes. </summary>
            
             <returns>   This object as a byte[]. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram">
            <summary>   A telegram after MODBUS/TCP specifications. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram.TransactionNumber">
            <summary>   The transaction number. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram.ProtocolId">
            <summary>   Identifier for the protocol. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram.NumberOfBytesFollowing">
            <summary>   Number of bytes followings. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram.UnitId">
            <summary>   Identifier for the modbus unit. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram.FunctionCode">
            <summary>   The modbus function code. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram.StartRegisterAddress">
            <summary>   The start address of the register to be accessed. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram.NumberOfRegisters">
            <summary>   Number of registers to be accessed. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram.BytesFollowing">
            <summary>   The bytes following this byte. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram.ExceptionCode">
            <summary>   The exception code in error cases. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram.DataLoad">
            <summary>   The modbus data load. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram.#ctor(System.UInt16,System.Byte,Keysight.Aes.Asf.Industrial.Modbus.ModbusConstants.FunctionCodes,System.UInt16,System.Byte,System.Byte[])">
             <summary>   Initializes a new instance of a Modbus/TCP telegram. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when the data load is too big for one
                                                     MODBUS/TCP telegram. </exception>
            
             <param name="transactionId">    Identifier for the modbus transaction. </param>
             <param name="unitId">           Identifier for the modbus unit. </param>
             <param name="functionCode">     The modbus function code. </param>
             <param name="startAddress">     The start address for the register to be accessed. </param>
             <param name="numberOfBytes">    The number of bytes to be accessed. For write
                                             operation use "(byte)dataLoad.Length", for read operation enter
                                             the number of bytes to read. </param>
             <param name="dataLoad">         (Optional) The data load to be sent. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram.#ctor(System.Byte[])">
             <summary>
             Initializes a new instance of a Modbus/TCP telegram on the basis of a serialized Modbus/TCP
             telegram that has been received as a response to a previously sent modbus query.
             </summary>
            
             <param name="serializedModbusTcpTelegram">  The serialized modbus TCP telegram. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram.hasCommunicationErrorOccured(System.Byte)">
             <summary>   Query if communication error has occured. </summary>
            
             <param name="functionCode"> The modbus function code containing an exception flag in case of an error. </param>
            
             <returns>   true if communication error occured, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.ModbusTcpTelegram.ToByteArray">
             <summary>   Serializes this object to an array of bytes. </summary>
            
             <returns>   The serialized modbus tcp telegram as a Byte[]. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringChannel">
            <summary>   A safety disconnect monitoring channel. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringChannel.State">
            <summary>   The state of the relay, that cswitches the battery contacts. The state must be read out from the safety disconnect controller. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringChannel.Command">
            <summary>   The command to the safety disconnect controller for the desired relay state. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringChannel.Error">
            <summary>   The list of errors that the safety disconnect system encountered. The errors must be round out from the safety disconnect controller. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringChannel.ParameterFileId">
            <summary>   Identifier for the parameter file. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringChannel.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringChannel.GetErrorsFromBinaryData(System.Byte,System.Byte)">
             <summary>   Converts two bytes of binary data from the output registers of the safety shutdown system (V104) to a list of errors and stores it internally. </summary>
            
             <param name="register1">    The first register. </param>
             <param name="register2">    The second register. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection">
            <summary>   Handles the connection to a safety disconnect system. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection._numberOfChannels">
            <summary>   Number of channels of the safety disconnect system. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection._ipAddress">
            <summary>   The IP address of the safety disconnect system. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection.ApplicationID">
            <summary>   Identifier for the application revision. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection.C_MAX_NUM_CHANNELS">
            <summary>   The maximum number of channels, that one safety disconnect system can have. This is due to limited MODBUS register space (512 Bytes). </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection._modbusHelper">
            <summary>   Handles the MODBUS/TCP communication. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection.INPUT_REGISTER_START_ADDRESS">
            <summary>   The start address of the MODBUS input register for WAGO 750-880 PLC. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection.OUTPUT_REGISTER_START_ADDRESS">
            <summary>   The start address of the MODBUS output register for WAGO 750-880 PLC. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection.BYTES_PER_CHANNEL">
            <summary>   Number of bytes per channel in the PLC's MODBUS Input/Output registers. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection.ModbusHelper">
             <summary>   Gets the modbus helper. </summary>
            
             <value> The modbus helper. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection.NumberOfChannels">
             <summary>   Gets or sets the number of channels. </summary>
            
             <value> The total number of channels. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection.CommandNumber">
            <summary>   The command number is part of the safety disconnect protocol and is used as an indicator for the controller if new commands have been received. It is incremented on every command sent. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection.#ctor(System.Net.IPAddress,System.Int32)">
             <summary>   Constructor. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when numberOfChannels exceeds the maximum number of channels. </exception>
            
             <param name="ipAddress">        The IP address of the remote safety disconnect system. </param>
             <param name="numberOfChannels"> The number of channels of the remote safety disconnect system. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection.SendData(System.Byte[])">
             <summary>   Sends data to the safety disconnect system. </summary>
            
             <param name="dataLoad"> The data load containing commands and configuration for each channel. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection.GetMessage(System.Byte[])">
             <summary>
             Gets the message to the safety disconnect system including header and data load.
             </summary>
            
             <param name="dataLoad"> The data load containing commands and configuration for each channel. </param>
            
             <returns>
             A message for the safety disconnect system as an array of bytes including header and data
             load.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection.GetHeader">
             <summary>   Gets the header for a datagram to the safety disconnect system. </summary>
            
             <returns>   A header for a datagram to the safety disconnect system as an array of bytes. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection.ReceiveData">
             <summary>   Reads data from the safety disconnect system. </summary>
            
             <returns>   The content of the output register of the safety disconnect system representing the states of each channel. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringConnection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged
            resources.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.RelayStates">
            <summary>   Values that represent relay states. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.RelayStates.Opened">
            <summary>   An enum constant representing the relay is open. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.RelayStates.Closed">
            <summary>   An enum constant representing the relay is closed. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.RelayCommands">
            <summary>   Values that represent relay commands. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.RelayCommands.Open">
            <summary>   An enum constant representing the command to open the relay. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.RelayCommands.Close">
            <summary>   An enum constant representing the command to close the relay. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.RelayCommands.NoCommand">
            <summary>   An enum constant representing the no command option. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.RelayCommands.ResetErrors">
            <summary>   An enum constant representing the reset channel errors option. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.ChannelErrors">
            <summary>
            Values that represent channel errors. Single errors can be extracted from the binary
            errorcode by bitwise AND (&amp;) operation with the ChannelErrors values.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.ChannelErrors.watchdogRanOut">
            <summary> Error: Watchdog timer has run out. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.ChannelErrors.temperatureTooHigh">
            <summary>   Error: Measured temperature exceeds specified limits. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.ChannelErrors.temperatureTooLow">
            <summary>   Error: Measured temperature deceeds specified limits. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.ChannelErrors.currentTooHigh">
            <summary>   Error: Measured current exceeds specified limits.</summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.ChannelErrors.currentTooLow">
            <summary>   Error: Measured current deceeds specified limits.</summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.ChannelErrors.voltageTooHigh">
            <summary>   Error: Measured voltage exceeds specified limits.</summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.ChannelErrors.voltageTooLow">
            <summary>   Error: Measured voltage deceeds specified limits.</summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.ChannelErrors.limitsNotConfigured">
            <summary>   Error: No limits configuration has been selected for the channel.</summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem">
            <summary>   Used to control and configure a remote monitoring system. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.NumberOfChannels">
             <summary>   Gets or sets the number of channels. </summary>
            
             <value> The total number of channels. </value>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem._plcConnection">
            <summary>   The PLC connection. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem._channels">
            <summary>   An array of NumberOfChannels individual channels. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.#ctor(System.Net.IPAddress,System.Int32)">
             <summary>   Constructor. </summary>
            
             <param name="ipAddress">        The IP address of the PLC. </param>
             <param name="numberOfChannels"> Number of channels of the remote monitoring system. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.OpenRelay(System.Int32)">
             <summary>   Requests to open the relay of one channel. </summary>
            
             <param name="channelNumber">    The channel number starting at index 1. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.CloseRelay(System.Int32)">
             <summary>   Requests to close the relay of one channel. </summary>
            
             <param name="channelNumber">    The channel number starting at index 1. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.OpenRelay(System.Int32[])">
             <summary>   Requests to open multiple relays in sync. </summary>
            
             <param name="channelNumbers">   The channel numbers starting at index 1. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.CloseRelay(System.Int32[])">
             <summary>   Requests to close multiple relays in sync. </summary>
            
             <exception cref="T:System.Exception">    Thrown when an error condition has occured in the corresponding monitoring channel. The exception contains a detailed description of the error condition that prevented closing the relay. </exception>
            
             <param name="channelNumbers">   The channel numbers starting at index 1. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.OpenAllRelays">
            <summary>   Opens all relays in sync. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.ConfigureChannelLimits(System.Collections.Generic.List{System.Tuple{System.Int32,System.UInt16}})">
             <summary>
             Configures the channel limits by assigning a safety limit file ID to each channel.
             </summary>
            
             <param name="limits">   A list of channel numbers and corresponding file IDs of the desired
                                     limits configuration. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.ConfigureChannelLimits(System.Int32,System.UInt16)">
             <summary>
             Configures the channel limits by assigning a safety limit file ID to each channel.
             </summary>
            
             <param name="channelNumber">    The channel number starting at index 1. </param>
             <param name="parameterFileId">  The file ID of the desired limits configuration. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.ReceiveChannelInformation">
            <summary>
            Read all information of each channel from the safety shutdown system and save it in the local
            channel objects.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.GetChannelStatusText(System.Int32,System.Boolean)">
             <summary>
             Gets the status text (includgin errors) of the remote monitoring system channel.
             </summary>
            
             <param name="channelNumber">    The channel number starting at index 1. </param>
             <param name="resetErrors">      (Optional) true to reset channel errors. This is necessary
                                             for re-enabling the channel after an error condition occured. </param>
            
             <returns>   The channel status with all error messages. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.GetChannelErrors(System.Int32,System.Boolean)">
             <summary>   Gets channel the list of errors of channel 'channelNumber'. </summary>
            
             <param name="channelNumber">    The channel number starting at index 1. </param>
             <param name="resetErrors">      (Optional) true to reset channel errors. This is necessary
                                             for re-enabling the channel after an error condition occured. </param>
            
             <returns>   The channel errors. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.ClearChannelErrors(System.Int32)">
             <summary>
             Clears the channel errors. This is necessary for re-enabling the channel after an error
             condition occured.
             </summary>
            
             <param name="channelNumber">    The channel number starting at index 1. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.ClearChannelErrors(System.Int32[])">
             <summary>
             Clearss the channel errors of multiple channels.  This is necessary for re-enabling the
             channel after an error condition occured.
             </summary>
            
             <param name="channelNumbers">   The channel numbers starting at index 1. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.GetEnumDescription(System.Enum)">
             <summary>   Gets enum description attribute. </summary>
            
             <param name="enumMember">   An enum member. </param>
            
             <returns>   The enum description. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.DefaultTransmitter">
            <summary>   Writes the local channel configurations into the remote monitoring system. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.ArrayIndexToChannelNumber(System.Int32)">
             <summary>   Converts an array index to a channel number. </summary>
            
             <param name="arrayIndex">   Zero-based index of the array. </param>
            
             <returns>   One-based channel number. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.ChannelNumberToArrayIndex(System.Int32)">
             <summary>   Converts a channel number to an array index. </summary>
            
             <param name="channelNumber">    The channel number starting at index 1. </param>
            
             <returns>   Zero-based array index. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Industrial.Modbus.RedundantMonitoring.MonitoringSystem.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged
            resources.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Office.AppLauncher">
            <summary>   Contains various helper methods to launch office applications and display files. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.Office.AppLauncher.IsExcelInstalled">
             <summary>   Determines whether Microsoft Excel is installed on the current machine. </summary>
            
             <value> true if excel is installed, false if not. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.Office.AppLauncher.ShowInExcel(System.Data.DataTable,System.String,System.Boolean,System.Boolean)">
             <summary>
             Shows a data table in excel by creating a temporary xlsx file and asking the windows shell to
             open it. If no Excel is installed, you can set csvFallback instead to have the user prompted
             for a target file name to export a csv file to. Otherwise a user prompt will appear to inform
             the user that Excel has to be installed.
             </summary>
            
             <param name="table">            The table to show. </param>
             <param name="filenamePrefix">   An optional filename prefix for the temporary file. </param>
             <param name="addGuid">          true to add a unique identifier to the filename. </param>
             <param name="csvFallback">      true to offer saving the data as CSV if no Excel is
                                             installed. Otherwise the a xlsx file will be saved and the
                                             operating system is used to open this with whatever
                                             application is assigned. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Office.AppLauncher.OpenFile(System.String)">
             <summary>   Uses the windows shell to open a file with the assigned office application. </summary>
            
             <param name="fileName"> Full path and name of the file. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Office.OpenXmlExport">
            <summary>   Helper methods to create office files in the open xml format. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Office.OpenXmlExport.ExportExcel(System.String,System.Data.DataTable,System.String,System.Boolean)">
             <summary>   Exports a datatable to a excel file (.xlsx). </summary>
            
             <param name="fileName">         Full path and name of the file. </param>
             <param name="dataTable">        The data table to export. </param>
             <param name="sheetName">        Name of the worksheet to create within the workbook. </param>
             <param name="includeHeaders">   true to include, false to exclude the headers in the first row. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Scpi.ScpiFormatException">
            <summary>   Exception for signaling scpi format errors. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormatException.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormatException.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <param name="message">  The exception message. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormatException.#ctor(System.String,System.Exception)">
             <summary>   Constructor. </summary>
            
             <param name="message">          The exception message. </param>
             <param name="innerException">   The inner exception. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.Scpi.ScpiFormats">
            <summary>
            Various utility functions to extract data from SCPI commands and to parse and format numbers.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Scpi.ScpiFormats.SCPI_NaN">
            <summary>   The value returned by most instruments for measurements that are out of range. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Scpi.ScpiFormats.C_SCPI_NaN">
            <summary>   The value returned by most instruments for measurements that are out of range. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Scpi.ScpiFormats.C_DEFAULT_INT_FORMAT">
            <summary>   The default int format string. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Scpi.ScpiFormats.C_DEFAULT_DOUBLE_FORMAT">
            <summary>   The default double format string. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.SplitCommands(System.String)">
             <summary>
             Extracts the command portion from a full SCPI line and splits the commands by the colon separator.
             If no commands were found, an empty array is returned.
             </summary>
            
             <param name="cmd">  The full SCPI command line. </param>
            
             <returns>   The individual commands. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.SplitArguments(System.String)">
             <summary>
             Extracts the arguments from a SCPI command line and splits them by the comma separator.
             If no arguments were found, an empty array is returned.
             </summary>
            
             <param name="cmd">  The full SCPI command line. </param>
            
             <returns>  The individual arguments. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.AppendArgument(System.String,System.String)">
            <summary>
            Attaches the argument to the command, taking into account whether
            there are already arguments present or not
            </summary>
            <param name="command">The command line.</param>
            <param name="argument">The argument to attach</param>
            <returns>The combined command line</returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.AppendModuleDesignator(System.String,System.Int32)">
             <summary>
             Creates and attaches the channel designator to the command, taking into account whether there
             are already arguments present or not. This would be used for example on a N6700B mainframe if
             you want to talk to a particular module.
             </summary>
            
             <param name="command">      The command line. </param>
             <param name="moduleNumber"> The module number to create the designator for. </param>
            
             <returns>   The combined command line. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.AppendSlotChannelDesignator(System.String,System.Int32,System.Int32)">
            <summary>
            Creates and attaches the channel designator to the command, taking into account whether
            there are already arguments present or not.
            This would be used for example on a N6700B mainframe if you want to talk to a particular
            module.
            </summary>
            <param name="command">The command line.</param>
            <param name="slot">The slot number to create the designator for.</param>
            <param name="channel">The channelnumber to create the designator for.</param>
            <returns>The combined command line</returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.IsIdMatch(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Checks if any of the acceptable strings is contained within the instrument identification.
            The required strings may contain the "?" and "*" wildcards.
            </summary>
            <param name="idn">The identification string as returned by an instrument</param>
            <param name="acceptables">A list of allowed instrument names, e.g. "N79??A" for all 7000 series APS units</param>
            <returns>true if the identification matches</returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.CombineScpi(System.String[],System.String[])">
            <summary>
            Combines the commands and arguments into a SCPI command line
            </summary>
            <param name="cmds">The commands</param>
            <param name="argv">The arguments</param>
            <returns>The combined command line</returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.LastIndexOf(System.String,System.Char)">
             <summary>
             Returns the index of the rightmost occurrence of needle in haystack or -1 if it doesn't occur
             at all.
             </summary>
            
             <param name="haystack"> The haystack. </param>
             <param name="needle">   The needle. </param>
            
             <returns>   The index of needle in haystack or -1. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.RetrieveQuote(System.String)">
             <summary>
             Retrieves a SCPI quote from the argument. The argument must contain the string embedded in
             either single or double quotes.
             </summary>
            
             <param name="argument"> The argument containing the quoted string. </param>
            
             <returns>   The dequoted string or null if no quote was found. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.GetCommandSpellings(System.String,System.String@,System.String@)">
             <summary>   Gets the mandatory and optional command spellings from a "MIXed" case spelling type command. </summary>
            
             <param name="command">      The "MIXed" spelling command. </param>
             <param name="mandatory">    The mandatory command in upper case, e.g. "MIX" (may be an empty string if no upper case spelling was found, which would be against the specs). </param>
             <param name="optional">     The optional command in upper case, e.g. "MIXED" (may be an empty string if no lower case spelling was found). </param>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.IsCommandMatch(System.String,System.String)">
             <summary>   Checks if a command matches either the mandatory or the optional spelling. </summary>
            
             <param name="command">      The command to check, e.g "mixed". </param>
             <param name="spellings">    The spellings in upper lower case, e.g. "MIXed". </param>
            
             <returns>   true if the command matches one of the two possible spellings. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.StripFirstCommand(System.String[])">
             <summary>
             Strips the first entry from the string array and returns the remaining array. Returns an empty array if
             no more entries exist. Returns null if the input array was already empty or null.
             </summary>
            
             <param name="cmds"> The SCPI command line arguments already split by the colon and all upper
                                 case. </param>
            
             <returns>   The contents of the input array without the first entry or null if no entry could be stripped. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.StripOptional(System.String[],System.String)">
             <summary>   Strips optional commands in the given order. </summary>
            
             <param name="cmds">     The SCPI command line arguments already split by the colon and all
                                     upper case. </param>
             <param name="options">  All optional commands in "MIXed" case notation to separate the
                                     mandatory from the optional spelling. The commands have to be
                                     separated by a colon. </param>
            
             <returns>
             A string[] with the optional commands stripped or null if the input array was null.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.RetrieveDouble(System.String,System.Boolean)">
             <summary>
             Retrieves a double from the argument. Note that this may be a double.NaN. If the argument
             does not contain a parsable double, an exception is thrown.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="argument">     The argument containing just the value or a value and a unit.
                                         Units will be silently discarded. </param>
             <param name="allowMinMax">  true to allow, false to deny MIN and MAX as a value. If allowed,
                                         it'll return double.MinValue and double.MaxValue accordingly. </param>
            
             <returns>   The parsed value. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.RetrieveDoubles(System.String,System.Boolean)">
             <summary>
             Returns the doubles from the argument that holds them as a list according to SCPI standards
             (which means comma separation).
             </summary>
            
             <param name="argument">     The argument to parse. </param>
             <param name="allowMinMax">  true to allow, false to deny MIN and MAX as a value. If allowed,
                                         it'll return double.MinValue and double.MaxValue accordingly. </param>
            
             <returns>
             The parsed values
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.RetrieveInt(System.String,System.Boolean)">
             <summary>
             Retrieves an integer from the argument. If the argument does not contain a parsable integer,
             an exception is thrown.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="argument">     The argument containing just the value or a value and a unit.
                                         Units will be silently discarded. </param>
             <param name="allowMinMax">  true to allow, false to deny MIN and MAX as a value. If allowed,
                                         it'll return int.MinValue and int.MaxValue accordingly. </param>
            
             <returns>   The parsed value. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.RetrieveBool(System.String)">
             <summary>
             Retrieves a boolean from the argument. If the argument does not contain a parsable boolean, an
             exception is thrown.
             </summary>
            
             <param name="argument"> The argument containing just the value. </param>
            
             <returns>   The parsed value. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.Format(System.Object)">
             <summary>
             Formats the given value according to SCPI standards. If you need more granular control over
             the number of digits, use the FormatNumber methods directly instead.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when the value has an unsupported type. </exception>
            
             <param name="value">    The value to format. This must be a numerical or boolean value.
                                     Integral value may be of type int at most (no unsigned int or any larger
                                     type like long is supported). Strings are returned unaltered. </param>
            
             <returns>   The formatted value. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.FormatNumber(System.Int32,System.String)">
            <summary>
            Returns a culture neutral formatted string according to the
            (optional) format string. The default is one digit.
            </summary>
            <param name="value">The value to format</param>
            <param name="format">The format string to use</param>
            <returns>The formatted value</returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.FormatNumber(System.Double,System.String)">
            <summary>
            Creates a culture neutral formatted string according to the
            (optional) format string. The default is three decimal digits.
            </summary>
            <param name="value">The value to format</param>
            <param name="format">The format string to use</param>
            <returns>The formatted value</returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.FormatBoolean(System.Boolean)">
             <summary>   Formats a boolean so that it can be used as a parameter in a SCPI string. </summary>
            
             <param name="onOff">    the value to format. </param>
            
             <returns>   The formatted boolean. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.GetLeadingDigits(System.String,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Retrieves the leading part of the string that contains digits only and an optional set of
             formatting signs.
             </summary>
            
             <param name="text">                     The string to parse. </param>
             <param name="acceptDecimalDelimiter">   Allows for "." and "," characters. </param>
             <param name="acceptLeadingSign">        true to accept leading sign. </param>
             <param name="acceptExponent">           true to accept exponent. </param>
            
             <returns>   The leading digits. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.ParseDesignation(System.String,System.String@,System.Int32@,System.Int32@,System.Boolean@)">
             <summary>
             Query if 'cmd' is designated at a particular channel (following the '(@sccc)' syntax).
             </summary>
            
             <param name="cmd">          The full input command. </param>
             <param name="command">      The command portion without the channel designator. </param>
             <param name="slot">         The target slot. </param>
             <param name="channel">      The target channel. </param>
             <param name="isRequest">    True if the command portion and/or designator is marked as a request. </param>
            
             <returns>   true if designated, false if not (all output values are null/0 then). </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.ParseChannel(System.String,System.Int32@,System.Int32@)">
             <summary>   Parse a designator string like '(@1001)' for the slot and channel number. </summary>
            
             <param name="designator">   The designator. </param>
             <param name="slot">         The target slot. </param>
             <param name="channel">      The target channel. </param>
            
             <returns>   true if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.IsWhitespace(System.Char)">
             <summary>   Determines whether the character is a .NET whitespace. </summary>
            
             <param name="c"> The character to check. </param>
            
             <returns>   true if the character is a whitespace, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Scpi.ScpiFormats.IsScpiWhitespace(System.Char)">
             <summary>
             Checks whether a given char is a IEEE488.2 whitespace (7.4.1.2).
             </summary>
            
             <param name="c">    The character to check. </param>
            
             <returns>   true if scpi whitespace, false if not. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Sensors.Thermal.PtConvert">
            <summary>   Converters for platinum based sensors to get temperature from resistance and vice versa </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Sensors.Thermal.PtConvert.ToCelsius(Keysight.Aes.Asf.Sensors.Thermal.ThermalSensorTypes,System.Double)">
             <summary>   Returns the temperature for a measured value. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="sensorType">   Type of the sensor. </param>
             <param name="resistance">      The measured resistance in Ohms. </param>
            
             <returns>   The temperature in °C. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Sensors.Thermal.PtConvert.ToResistance(Keysight.Aes.Asf.Sensors.Thermal.ThermalSensorTypes,System.Double)">
             <summary>   Returns the resistance that would be measured at a particular temperature. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="sensorType">           Type of the sensor. </param>
             <param name="temperatureCelsius">   The temperature in degrees Celsius. </param>
            
             <returns>   The resistance in Ohms. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Sensors.Thermal.Pt100">
            <summary>   Class to convert resistance to and from temperature for a Pt100 sensor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Sensors.Thermal.Pt100.GetTemperature(System.Double)">
             <summary>   Gets a temperature for a certain resistance. Note that the output is only valid within 0°C to 850°C. </summary>
            
             <param name="resistance">   The resistance in Ohms. </param>
            
             <returns>   The temperature in °C. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Sensors.Thermal.Pt100.GetResistance(System.Double)">
             <summary>   Gets the resistance that would be expected from a sensor at a certain temperature. </summary>
            
             <param name="temperature">  The temperature in °C. </param>
            
             <returns>   The resistance in Ohms. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Sensors.Thermal.Pt1000">
            <summary>   Class to convert resistance to and from temperature for a Pt1000 sensor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Sensors.Thermal.Pt1000.GetTemperature(System.Double)">
             <summary>   Gets a temperature for a certain resistance. Note that the output is only valid within 0°C to 850°C. </summary>
            
             <param name="resistance">   The resistance in Ohms. </param>
            
             <returns>   The temperature in °C. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Sensors.Thermal.Pt1000.GetResistance(System.Double)">
             <summary>   Gets the resistance that would be expected from a sensor at a certain temperature. </summary>
            
             <param name="temperature">  The temperature in °C. </param>
            
             <returns>   The resistance in Ohms. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Sensors.Thermal.ThermalSensorTypes">
            <summary>   Values that represent sensor types. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.Sensors.SensorWirings">
            <summary>   Values that represent sensor wirings. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Sensors.SensorWirings.Unspecified">
            <summary>   The unspecified option. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Sensors.SensorWirings.TwoWire">
            <summary>   The sensor is connected with two wires. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.Sensors.SensorWirings.FourWire">
            <summary>   The sensor is connected with a four wire setup (sense and load). </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.SignalProcessing.FourierTransform">
            <summary>   Contains functions for fourier analysis. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.SignalProcessing.FourierTransform.DiscreteTimeFourierTransform(System.Double[],System.Double,System.Double)">
             <summary>   Calculates the discrete time fourier transform (DTFT) of a time discrete signal at the specified frequency. </summary>
            
             <param name="samples">          The samples of the time discrete signal to be analyzed. </param>
             <param name="sampleFrequency">  The sample frequency of the time discrete signal. </param>
             <param name="frequency">        The frequency at which the DTFT is calculated. </param>
            
             <returns>   The complex result of the DTFT at the specified frequency. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.SignalProcessing.SignalGenerator">
            <summary>   Contains sample generator functions for various wave forms. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.SignalProcessing.SignalGenerator.Sine(System.Double,System.Double,System.Double,System.Double,System.UInt32)">
             <summary>   Generates the samples of a sine. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when numberOfPeriods or totalNumberOfSamples
                                                     are not greater than 0. </exception>
            
             <param name="amplitude">            The amplitude of the sine. </param>
             <param name="phaseDegrees">         The phase of the sine in degrees whereas positive values
                                                 result in a signal shift to the left. </param>
             <param name="offset">               The offset of the signal. </param>
             <param name="numberOfPeriods">      The number of periods. </param>
             <param name="totalNumberOfSamples"> The total number of samples. </param>
            
             <returns>
             A double[] containing the samples of the sine. If phase is 0, then the last sample value will
             be 0.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.SignalProcessing.SignalGenerator.Cosine(System.Double,System.Double,System.Double,System.Double,System.UInt32)">
             <summary>   Generates the samples of a cosine. </summary>
            
             <param name="amplitude">            The amplitude of the cosine. </param>
             <param name="phaseDegrees">         The phase of the cosine in degrees whereas positive
                                                 values result in a signal shift to the left. </param>
             <param name="offset">               The offset of the signal. </param>
             <param name="numberOfPeriods">      The number of periods. </param>
             <param name="totalNumberOfSamples"> The total number of samples. </param>
            
             <returns>   A double[] containing the samples of the cosine. </returns>
            
             ### <exception cref="T:System.ArgumentException">    Thrown when numberOfPeriods or
                                                         totalNumberOfSamples are not greater than 0. </exception>
        </member>
        <member name="T:Keysight.Aes.Asf.SignalProcessing.WindowFunctions">
            <summary>   A collection of window functions for signal processing. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.SignalProcessing.WindowFunctions.Blackman(System.Int32,System.Double)">
             <summary>
             Generates the coefficients for a symmetric Blackman window. Note: For proper amplitude values,
             gain correction needs to be done after applying the window function to a signal.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when alpha parameter is smaller than 0 or greater than 1, or when length is smaller than 2. </exception>
            
             <param name="length">   The length of the Blackman window. Must match the length of the
                                     signal to which the window is applied to. </param>
             <param name="alpha">    (Optional) the alpha factor for the Blackman window. Value must be
                                     between 0 and 1. </param>
            
             <returns>   Length number of coefficients of the Blackman window. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.SignalProcessing.WindowFunctions.Hann(System.Int32)">
            <summary>
            Generates the coefficients for a symmetric Hann window. Note: For proper amplitude values,
            gain correction needs to be done after applying the window function to a signal.
            </summary>
            <param name="length">   The length of the Hann window. Must match the length of the
            signal to which the window is applied to. </param>
            <returns>   Length number of coefficients of the Hann window. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.SignalProcessing.WindowFunctions.Hamming(System.Int32,System.Double)">
             <summary>
             Generates the coefficients for a symmetric Hamming window. Note: For proper amplitude values,
             gain correction needs to be done after applying the window function to a signal.
             </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="length">   The length of the Hamming window. Must match the length of the
                                                          signal to which the window is applied to. </param>
             <param name="alpha">    (Optional) the alpha factor for the Hamming window. Value must be
                                     between 0 and 1. </param>
            
             <returns>   Length number of coefficients of the Hamming window. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.SignalProcessing.WindowFunctions.ApplyBlackmanWindow(System.Double[],System.Boolean,System.Double)">
             <summary>   Applies the blackman window on an input signal, and corrects gain distortion. </summary>
            
             <param name="signal">           The signal to apply the Blackman window on. </param>
             <param name="doGainCorrection"> (Optional) true to do gain correction. </param>
             <param name="alpha">            (Optional) the alpha factor for the Blackman window. Value
                                             must be between 0 and 1. </param>
             <returns>   The signal with the applied Blackman window and gain correction, if chosen. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Types.ArrayExtensions">
            <summary>   Holds extension methods for the .NET Array type. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Types.ArrayExtensions.Redim``1(``0[],System.Int32)">
             <summary>
             Creates a new array of the desired size, copies the existing data as appropriate and returns
             the new array. If the new array is larger, the newly added elements will be initialized with
             the .NET default value for the particular type. If the new array is smaller, only the
             appropriate amount of elements will be copied.
             </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="array">    The array to act on. </param>
             <param name="newSize">  Size of the new array. </param>
            
             <returns>   The new array. </returns>
            
             <example>
             You need to make use of the return value to get hold of the new array:
             <code>
             myArray = myArray.Redim(20);
             </code>
             </example>
        </member>
        <member name="M:Keysight.Aes.Asf.Types.ArrayExtensions.TrimStart``1(``0[],System.Int32)">
             <summary>
             Creates a new array without the first n elements of the existing array. If the number of
             elements to trim exceeds the number of total elements in the array, an empty array is
             returned.
             </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="array">    The array to act on. </param>
             <param name="trimSize"> The number of elements to cut away from the start of the array. </param>
            
             <returns>   The new array. </returns>
            
             <example>
             You need to make use of the return value to get hold of the new array:
             <code>
             myArray = myArray.TrimStart(10);
             </code>
             </example>
        </member>
        <member name="M:Keysight.Aes.Asf.Types.ArrayExtensions.TrimEnd``1(``0[],System.Int32)">
             <summary>
             Creates a new array without the last n elements of the existing array. If the number of
             elements to trim exceeds the number of total elements in the array, an empty array is
             returned.
             </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="array">    The array to act on. </param>
             <param name="trimSize"> The number of elements to cut away from the start of the array. </param>
            
             <returns>   The new array. </returns>
            
             <example>
             You need to make use of the return value to get hold of the new array:
             <code>
             myArray = myArray.TrimStart(10);
             </code>
             </example>
        </member>
        <member name="M:Keysight.Aes.Asf.Types.ArrayExtensions.Append``1(``0[],``0[])">
             <summary>
             Creates a new array that can take the data of two existing arrays and copies that data to the
             new array.
             </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="array">    The array to act on. </param>
             <param name="newData">  The extra data to appen. </param>
            
             <returns>   The new array. </returns>
            
             <example>
             You need to make use of the return value to get hold of the new array:
             <code>
             myArray = myArray.Append(otherArray);
             </code>
             </example>
        </member>
        <member name="M:Keysight.Aes.Asf.Types.ArrayExtensions.IndexOf``1(``0[],``0[])">
             <summary>
             Searches for an array inside an array like IndexOf works on strings. The .NET Array.IndexOf
             method tries to find the whole searchPattern as one object at a particular index. This method
             does an item by item comparison instead and treats each item of the searchPattern as an
             individual item in the source array.
             </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="array">            The array to act on. </param>
             <param name="searchPattern">    The array item sequence to seach for. If this array is empty, 0 is returned. </param>
            
             <returns>   The zero-based index of the found array, or -1 if no match was found. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Types.TypeExtensions">
            <summary>   Holds extension methods for the .NET Type type. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Types.TypeExtensions.IsReferenceType(System.Type)">
             <summary>   A Type extension method that query if 'type' is a reference type. </summary>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   true if reference type, false if not. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.Types.TypeExtensions.IsNullable(System.Type)">
             <summary>   A Type extension method that query if 'type' can be set to null. </summary>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   true if null is a possible value, false if not. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.ChannelInstrument">
            <summary>
            Implements an instrument that can interpret commands that are designated at a certain slot
            and channel according to the syntax '(@sccc)' like for example implemented in the 34980A.
            
            You provide a command interpreter for regular commands via the CommandExectuor delegate in
            the base Instrument class. With the ChannelInstrument, you provide an additional interpreter
            for designated commands via the DesignatedCommandExecutor.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.ChannelInstrument.DesignatedCommandExecutor">
             <summary>   The delegate definition for calls to execute designated commands. </summary>
            
             <param name="cmds">     The commands. </param>
             <param name="argv">     The arguments. </param>
             <param name="slot">     The slot. </param>
             <param name="channel">  The channel. </param>
            
             <returns>   A reply to the command where applicable, e.g. a requested measurement. </returns>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.ChannelInstrument.DesignatedExecuteCommandDelegate">
            <summary>   The delegate to actually execute designated commands. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.ChannelInstrument.#ctor(System.String)">
            <summary>   Constructor. </summary>
            <param name="Identification">   The identification must follow the scheme "Vendor.Model.Serial.Firmware". </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.ChannelInstrument.#ctor(System.String,System.Int32)">
             <summary>   Constructor. </summary>
            
             <param name="Identification">   The identification must follow the scheme
                                             "Vendor.Model.Serial.Firmware". </param>
             <param name="port">             The port number to listen on. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.ChannelInstrument.ExecuteCommand(System.String,Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.SessionInfo)">
             <summary>   Execute a received command line. </summary>
            
             <param name="cmd">   The command to execute. </param>
             <param name="session">  The session. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.ChannelInstrument.ExecuteCommand(System.String,System.String,System.Int32,System.Int32,System.Boolean,Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.SessionInfo)">
             <summary>   Execute a received command line that is designated at a certain slot and channel. </summary>
            
             <param name="cmd">          The complete command line. </param>
             <param name="command">      The command line without the designator. </param>
             <param name="slot">         The designated slot. </param>
             <param name="channel">      The designated channel. </param>
             <param name="isRequest">    true if the command is a request. </param>
             <param name="session">      The session. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxCore.DxCustomSerializer">
            <summary>
            Attach this attribute to properties within your derived DxData classes to keep the default
            serializer from messing with it. You need to serialize and attach your data in the override
            methods for DxData.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxCustomSerializer.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxCore.DxClient">
            <summary>   A client implementation to talk to a Dx instrument. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxClient.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxClient.#ctor(System.Net.IPAddress)">
             <summary>   Constructor. </summary>
            
             <param name="server">   The Device Manager's address. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxClient.ConnectTo(System.Net.IPAddress)">
             <summary>   Connects to the Device Manager. </summary>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            
             <param name="server">   The Device Manager's address. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxClient.CheckConnection">
             <summary>   Determines if a connection is established. </summary>
            
             <returns>   true if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxClient.Terminate">
            <summary>
            Close any existing connection.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxClient.RequestData(System.Int32,Keysight.Aes.Asf.VirtualVisa.DxCore.DxData,System.Int32)">
             <summary>
             Request data from the Device Manager. Will return the reply as a class instance or null if no
             reply was sent. The call is blocking.
             </summary>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            
             <param name="channelNumber">    The instrument channel number. </param>
             <param name="request">          The request to send. </param>
             <param name="timeoutSeconds">   The timeout in seconds. </param>
            
             <returns>   A DxData object. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxClient.RequestData(System.Int32,System.Xml.XmlDocument,System.Int32)">
             <summary>
             Request data from the Device Manager. Will return the reply as a reply document or null if no
             reply was sent. The call is blocking.
             </summary>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            
             <param name="channelNumber">    The instrument channel number. </param>
             <param name="requestDoc">       The request to send. </param>
             <param name="timeoutSeconds">   The timeout in seconds. </param>
            
             <returns>   An XmlDocument. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxCore.DxCodec">
            <summary>   Contains methods for en- and decoding the xml streams across the sockets. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxCodec.EncodeDocument(System.Xml.XmlDocument,System.Nullable{System.Int32})">
             <summary>
             Prepare an XML document for sending. The returned buffer can be sent directly over a socket
             or other byte streaming facility. The channel number is optional, as it is not used for replies.
             </summary>
            
             <param name="docToSend">        The XML document to send. </param>
             <param name="channelNumber">    The channel number. </param>
            
             <returns>   A byte[]. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxCodec.DecodeBytes(System.Byte[],System.Int32)">
            <summary>
            Decode received bytes into a string
            </summary>
            <param name="buffer"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxCodec.DecodeDocument(System.String@)">
             <summary>
             Check if a receiving buffer already holds a complete XML Dx Document. If so, the document is
             removed from the buffer and returned as a string. Otherwise, null is returned.
             </summary>
            
             <param name="buffer">   [in,out]. </param>
            
             <returns>   An XmlDocument. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxCodec.DecodeDocument(System.String@,System.Nullable{System.Int32}@)">
             <summary>
             Check if a receiving buffer already holds a complete XML Dx Document. If so, the document is
             removed from the buffer and returned as a string. Otherwise, null is returned. If a channel
             number for the dx device was given, it is returned in channel. Otherwise this is null.
             </summary>
            
             <param name="buffer">   [in,out]. </param>
             <param name="channel">  [out] The channel. </param>
            
             <returns>   An XmlDocument. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxCore.DxData">
            <summary>
            The base class for all classes that are used to transport data to and from DxInstruments
            hosted on the Device Manager. For your particular Dx instrument implementation, you would
            derive from this class to define the data that is transported to and from a Dx Client.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxCore.DxData.VersionNumber">
            <summary>   Gets the version number . </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxData.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxData.SetXML(System.String)">
             <summary>   Sets the local properties by reading in the data from the XML. </summary>
            
             <param name="XmlString">    The XML string. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxData.SetXML(System.Xml.XmlNode)">
             <summary>   Sets the local properties by reading in the data from the XML. </summary>
            
             <param name="node"> The node. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxData.SetAdditionalAttribute(System.String,System.String)">
            <summary>
            Read an attribute that can not be interpreted by the base class
            Override this in a derived class to read the attributes that were
            written out with WriteAdditionalXML()
            </summary>
            <param name="name">     The attribute name. </param>
            <param name="value">    The attribute content. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxData.SetAdditionalNode(System.String,System.String)">
            <summary>
            Read a node that can not be interpreted by the base class
            Override this in a derived class to read the nodes that were
            written out with WriteAdditionalXML()
            </summary>
            <param name="name">     The node name. </param>
            <param name="value">    The node content. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxData.ToXML">
            <summary>
            Serialize the whole class into an XML string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxData.WriteAdditionalXML(System.Xml.XmlWriter)">
            <summary>
            Override this in a derived class to write out additional nodes and attributes
            that are not covered by the automatic serialization
            </summary>
            <param name="writer">   The XmlWrite to use for writing. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer">
            <summary>
            Helper class for de/serializing XML documents to pass through Dx communication sockets. This
            is done manually because of severe performance issues with the built in .NET serializers. It
            does however currently not support all types.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.DocType">
            <summary>
            The document types used to wrap the communication between a Dx instrument and a client.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.DocType.Unknown">
            <summary>   Identifies an unknown document type. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.DocType.Request">
            <summary>   Identifies a request document. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.DocType.ReplyOk">
            <summary>   Identifies a reply document that confirms the request. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.DocType.ReplyErr">
            <summary>   Identifies a reply document to a request that caused an error. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.NodeDxDoc">
            XML Nodes und Attributes within the XmlDocument
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.GetDocumentVersion(System.Xml.XmlDocument)">
             <summary>   Gets the protocol version information from the document. </summary>
            
             <param name="xmlDoc">   The Dx Document. </param>
            
             <returns>   The document version. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.GetDocumentType(System.Xml.XmlDocument)">
             <summary>   Gets the document type. </summary>
            
             <param name="xmlDoc">   The Dx Document. </param>
            
             <returns>   The document type. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.GetDocumentTimestamp(System.Xml.XmlDocument)">
             <summary>   Gets the document timestamp. </summary>
            
             <param name="xmlDoc">   The Dx Document. </param>
            
             <returns>   The document timestamp. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.GetDocumentID(System.Xml.XmlDocument)">
             <summary>   Gets the document ID. This ID needs to be returned in a reply. </summary>
            
             <param name="xmlDoc">   The Dx Document. </param>
            
             <returns>   The document identifier. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.GetDocumentMessage(System.Xml.XmlDocument)">
             <summary>   Gets the message part contained in the document. </summary>
            
             <param name="xmlDoc">   The Dx Document. </param>
            
             <returns>   The document message. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.GetDxDataClass(System.Xml.XmlDocument,System.Int32)">
            <summary>
            Returns the data class at index n or null if it was not found
            </summary>
            <param name="xmlDoc"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.GetGenericClass(System.Xml.XmlDocument,System.Int32)">
            <summary>
            Returns the generic object at index n or null if it was not found
            </summary>
            <param name="xmlDoc"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.CreateXMLDocument(Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.DocType,System.Int32,System.String)">
            <summary>
            Create the document for data transfer
            </summary>
            <param name="type">DocType: Request oder Reply</param>
            <param name="id">Optional ID (important on Reply, otherwise use a random number or leave out)</param>
            <param name="message">Optional message</param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.CreateRequest(Keysight.Aes.Asf.VirtualVisa.DxCore.DxData,System.String)">
            <summary>
            Create a request document
            </summary>
            <param name="dataObject">The query object</param>
            <param name="message">Optional message</param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.CreateReply(System.Xml.XmlDocument,Keysight.Aes.Asf.VirtualVisa.DxCore.DxData,Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.DocType,System.String)">
             <summary>   Creates a reply to a request. </summary>
            
             <param name="request">      The request. </param>
             <param name="dataObject">   The data that the reply should contain. </param>
             <param name="replyType">    Type of the reply. </param>
             <param name="message">      Optional message. </param>
            
             <returns>   The new reply. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.CreateReply(System.Int32,Keysight.Aes.Asf.VirtualVisa.DxCore.DxData,Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.DocType,System.String)">
             <summary>   Create a reply document with a particular ID. </summary>
            
             <param name="id">           The message ID. </param>
             <param name="dataObject">   The data that the reply should contain. </param>
             <param name="replyType">    Type of the reply. </param>
             <param name="message">      Optional message. </param>
            
             <returns>   The new reply. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.AttachNode(System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>
            Attach a Node to a Document
            </summary>
            <param name="xmlDoc"></param>
            <param name="node"></param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.Serialize(Keysight.Aes.Asf.VirtualVisa.DxCore.DxData,System.Xml.XmlDocument)">
             <summary>   Serialize a DxObject into a XmlNode. </summary>
            
             <param name="DxObject">         . </param>
             <param name="ownerDocument">    The document that owns this item. </param>
            
             <returns>   An XmlNode. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.SerializeToString(Keysight.Aes.Asf.VirtualVisa.DxCore.DxData)">
            <summary>
            Serialize a DxObject into a string
            </summary>
            <param name="DxObject"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.Deserialize(System.String)">
             <summary>   De-serializes an xmlString into the appropriate object. </summary>
            
             <param name="xmlString">    The XML string. </param>
            
             <returns>   An object. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.Deserialize(System.Xml.XmlNode)">
             <summary>   De-serializes an xml Node into the appropriate object. </summary>
            
             <param name="xmlNode">  The XML node. </param>
            
             <returns>   An object. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.Serialize(System.Object,System.Xml.XmlDocument)">
             <summary>   Serialize a DxObject into a XmlNode. </summary>
            
             <param name="genericObject">    The generic object. </param>
             <param name="ownerDocument">    The document that owns this item. </param>
            
             <returns>   An XmlNode. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxSerializer.SerializeToString(System.Object)">
             <summary>   Serialize a DxObject into a string. </summary>
            
             <param name="genericObject">    The generic object. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxCore.DxDataBytes">
            <summary>   A default data class implementation that can transport a byte array called Data. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxCore.DxDataBytes.Data">
            <summary>   The raw binary data. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxDataBytes.WriteAdditionalXML(System.Xml.XmlWriter)">
             <summary>
             Override this in a derived class to write out additional nodes and attributes that are not
             covered by the automatic serialization.
             </summary>
            
             <param name="writer">   The XmlWrite to use for writing. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxDataBytes.SetAdditionalAttribute(System.String,System.String)">
             <summary>
             Read an attribute that can not be interpreted by the base class Override this in a derived
             class to read the attributes that were written out with WriteAdditionalXML()
             </summary>
            
             <param name="name">     The attribute name. </param>
             <param name="value">    The attribute content. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxDataBytes.ToXml(System.Byte[])">
             <summary>   Converts a byte array to an XML string. </summary>
            
             <param name="data"> The raw data. </param>
            
             <returns>   data as a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxCore.DxDataBytes.FromXml(System.String)">
             <summary>   Converts a string encoded by ToXml back into a byte array. </summary>
            
             <param name="hex">  The hexadecimal encoded byte array. </param>
            
             <returns>   A byte[]. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxEmptySetup">
            <summary>   An empty setup for dx instruments not requiring any setup data at all. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysSafetyDisconnect">
            <summary>
            A driver for a CoDeSys 3.5 based system like the Raspberry Pi. It supports the safety
            disconnect implementation to switch on single relays using the DxModbusPlcDataWrite type that
            is also used with the CoDeSys 2.5 based WAGO system.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysSafetyDisconnect.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysSafetyDisconnect.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <param name="ipAddress">    The IP address. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysSafetyDisconnect.Connect">
            <summary>
            Connects your Dx instrument. In your implementation, this is where you would connect to
            actual hardware (if there is any) and set the IsConnected state appropriately.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysSafetyDisconnect.Disconnect">
            <summary>
            Disconnects your Dx instrument. In your implementation, this is where you would disconnect
            from actual hardware (if there is any) and set the IsConnected state appropriately.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysSafetyDisconnect.Reconnect">
            <summary>
            Reconnects this instrument. Here you may just call your own Disconnect() and Connect()
            implementations or provide a more efficient process if available.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysSafetyDisconnect.Process(Keysight.Aes.Asf.VirtualVisa.DxCore.DxData)">
             <summary>
             Process the given data. This is a class you derive from DxData for use with your instrument.
             </summary>
            
             <param name="data"> The data. </param>
            
             <returns>
             The result of the processing operation. This may be the same class type as the input or you
             may derive other classes to contain the response. If no data is produced, null may be
             returned.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysRaw">
            <summary>
            A driver for a CoDeSys 3.5 based system like the Raspberry Pi. It supports raw packet read
            and write using the DxCoDeSysDataRead/Write classes.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysRaw.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysRaw.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <param name="ipAddress">    The IP address. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysRaw.Connect">
            <summary>
            Connects your Dx instrument. In your implementation, this is where you would connect to
            actual hardware (if there is any) and set the IsConnected state appropriately.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysRaw.Disconnect">
            <summary>
            Disconnects your Dx instrument. In your implementation, this is where you would disconnect
            from actual hardware (if there is any) and set the IsConnected state appropriately.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysRaw.Reconnect">
            <summary>
            Reconnects this instrument. Here you may just call your own Disconnect() and Connect()
            implementations or provide a more efficient process if available.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysRaw.Process(Keysight.Aes.Asf.VirtualVisa.DxCore.DxData)">
             <summary>
             Process the given data. This is a class you derive from DxData for use with your instrument.
             </summary>
            
             <param name="data"> The data. </param>
            
             <returns>
             The result of the processing operation. This may be the same class type as the input or you
             may derive other classes to contain the response. If no data is produced, null may be
             returned.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysRawRead">
            <summary>   A raw CoDeSys read packet. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysRawRead.CobId">
             <summary>
             Gets or sets the identifier of the cob to read. You need to set this before making the read
             call, the NLV will then be filled in with the first matching list received.
             </summary>
            
             <value> The CobId. </value>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysRawWrite">
            <summary>   A CoDeSys raw write packet. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysRawWrite.ModbusData">
            <summary>   The raw modbus data. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysRawWrite.WriteAdditionalXML(System.Xml.XmlWriter)">
             <summary>
             Override this in a derived class to write out additional nodes and attributes that are not
             covered by the automatic serialization.
             </summary>
            
             <param name="writer">   The XmlWrite to use for writing. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxCoDeSysRawWrite.SetAdditionalAttribute(System.String,System.String)">
             <summary>
             Read an attribute that can not be interpreted by the base class Override this in a derived
             class to read the attributes that were written out with WriteAdditionalXML()
             </summary>
            
             <param name="name">     The attribute name. </param>
             <param name="value">    The attribute content. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxTcpTunnel">
            <summary>
            A dx instrument that allows sharing of a TCP connection through the Solution Service (or any
            other DX instrument host).
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxTcpTunnel.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxTcpTunnel.#ctor(System.String,System.Int32)">
             <summary>   Constructor. </summary>
            
             <param name="ipAddress">    The IP address. </param>
             <param name="port">         The TCP port. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxTcpTunnel.Connect">
            <summary>
            Connects your Dx instrument. In your implementation, this is where you would connect to
            actual hardware (if there is any) and set the IsConnected state appropriately.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxTcpTunnel.Disconnect">
            <summary>
            Disconnects your Dx instrument. In your implementation, this is where you would disconnect
            from actual hardware (if there is any) and set the IsConnected state appropriately.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxTcpTunnel.Reconnect">
            <summary>
            Reconnects this instrument. Here you may just call your own Disconnect() and Connect()
            implementations or provide a more efficient process if available.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxTcpTunnel.Process(Keysight.Aes.Asf.VirtualVisa.DxCore.DxData)">
             <summary>
             Process the given data. This is a class you derive from DxData for use with your instrument.
             </summary>
            
             <param name="data"> The data. </param>
            
             <returns>
             The result of the processing operation. This may be the same class type as the input or you
             may derive other classes to contain the response. If no data is produced, null may be
             returned.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxTcpTunnelRead">
            <summary>
            A DxTcpTunnel raw read packet. Use the Data property to pass in a delimiter that stops
            receiving or leave at null.
            The response will be a DxTcpTunnelWrite packet that contains the received Data.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxTcpTunnelRead.TimeoutMillisec">
             <summary>   Gets or sets the receive timeout in milliseconds. Set to 0 for no timeout. </summary>
            
             <value> The timeout. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxTcpTunnelRead.ByteCount">
             <summary>   Gets or sets the number of byte to receive. Set to 0 for no limit. </summary>
            
             <value> The number of bytes. </value>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxTcpTunnelWrite">
            <summary>   A DxTcpTunnel raw write packet. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamber">
            <summary>
            Implementation of DxInstrument to control a Vötsch climat chamber.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamber.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamber.#ctor(System.String,System.Int32)">
             <summary>   Constructor. </summary>
            
             <param name="port">     The port. </param>
             <param name="baudrate"> The baudrate. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamber.Connect">
            <summary>
            Connect to the climat chamber using the serial port setup parameters.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamber.Disconnect">
            <summary>
            Disconnect from the climate chamber.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamber.Process(Keysight.Aes.Asf.VirtualVisa.DxCore.DxData)">
            <summary>
            Process the given data. Send the commmand string based on the given data to the chamber.
            </summary>
            <param name="data">The data</param>
            <returns>The answer data</returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamber.Reconnect">
            <summary>
            Disconnects the used serial port and the connects again.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData">
            <summary>
            A data packet for the Vötsch climate chamber to create command strings that can be sent to the climate chamber.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.HelpCommand">
            <summary>
            This command returns a list of all available commands for the chamber
            This command is the same for all chambers.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.RetrieveFailuresCommand">
            <summary>
            This command returns the current failure:
            &lt;Failure Number&gt;&lt;Space&gt;&lt;Failure Text&gt;&lt;CR&gt;
            Example: 16 Netzwiederkehr&lt;CR&gt; or 0 &lt;CR&gt; (no error)
            This command is the same for all chambers.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.ResetFailuresCommand">
            <summary>
            This command resets the failures of the chamber and returns the number of not reset failures
            xx&lt;CR&gt; , where xx stays for the amount of failures which are still there and were not reset.
            This command is the same for all chambers.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.StartProgramCommand">
            <summary>
            This command starts a predefined program This command is the same for all chambers.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.StopProgramCommand">
            <summary>
            This command stops any running command. This command is the same for all chambers.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.GetStateCommand">
            <summary>
            Command to read the status of the chamber. This command is the same for all chambers.
            The format of the answer is different for the chamber types.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.Temperature">
            <summary>
            The target temperature or the current temperature of the climate chamber depending on the communication direction.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.ProgramNumber">
            <summary>
            Program number for the chamber programs. Allowed numbers between 1 and 9999
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.ChamberNumber">
            <summary>
            The number of the chamber which is connected to the network. Normally only one chamber at a time is connected therefore the default value is 1.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.OnOff">
            <summary>
            Defines the On/Off state of the chamber
            True = On
            False = Off
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.CompressedAirOnOff">
            <summary>
            Defines the On/Off state of the chamber.
            True = On
            False = Off
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.DryerOnOff">
            <summary>
            Defines the Dryer On/Off state.
            True = On
            False = Off
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.Command">
            <summary>
            The command to send to the chamber
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.ChamberType">
            <summary>
            The exact chamber type
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.GetCommandString">
            <summary>
            Get the command string with the current settings of the data packet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.Get_SetStateCommand">
            <summary>
            Since the GetState command differs for each chamber type this method gets the correct command depending on the chamber type.
            </summary>
            <returns>The command string</returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.GetFormattedValue(System.Double)">
            <summary>
            Get the double value as string in the format for the command strings "0000.0".
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData.GetStringForBool(System.Boolean)">
            <summary>
            Get the string representation of the boolean value for the command strings.
            </summary>
            <param name="value">The boolean.</param>
            <returns>"1" if value is true, "0" if value is false.</returns>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberAnswerData">
            <summary>
            A data packet for the Vötsch climate chamber which contains the answer data of a command
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberAnswerData.#ctor(Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberData)">
            <summary>
            Create an answer data object based on the sending data.
            </summary>
            <param name="sendingData"></param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberAnswerData.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberAnswerData.Answer">
            <summary>
            The plain answer string.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberOverComServer">
            <summary>   A dx voetsch climate chamber accessed over W&amp;T COM Server 58665. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberOverComServer.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberOverComServer.#ctor(System.String,Keysight.Aes.Asf.VirtualVisa.BaudrateOptions,Keysight.Aes.Asf.VirtualVisa.ParityOptions,Keysight.Aes.Asf.VirtualVisa.DatabitsOptions,Keysight.Aes.Asf.VirtualVisa.StopBitOptions,Keysight.Aes.Asf.VirtualVisa.FlowControlOptions)">
             <summary>   Constructor. </summary>
            
             <param name="ipAddress">     The IP address of the COM Server. </param>
             <param name="baudrate">     The baudrate. </param>
             <param name="parity">       The parity. </param>
             <param name="databits">     The databits. </param>
             <param name="stopbit">      The stopbit. </param>
             <param name="flowControl">  The flow control. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberOverComServer.Connect">
            <summary>
            Connects the COM Server and configures the RS232 with the given parameters.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberOverComServer.Disconnect">
            <summary>
            Disconnects the telnet connection and the tunnel connection
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberOverComServer.Process(Keysight.Aes.Asf.VirtualVisa.DxCore.DxData)">
             <summary>
             Process the given data. This is either sending a command or requesting data from the Voetsch chamber
             </summary>
            
             <param name="data"> The data. </param>
            
             <returns>
             The result of the processing operation. This may be the same class type as the input or you
             may derive other classes to contain the response. If no data is produced, null may be
             returned.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxVoetschClimateChamberOverComServer.Reconnect">
             <summary>
             Reconnects this instrument.
             </summary>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.VoetschChamberType">
            <summary>
            Enumeration of supported Vötsch chamber types
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.VoetschChamberType.Voetsch_7018">
            <summary>
            Vötsch 7018
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.VoetschChamberType.Voetsch_7004">
            <summary>
            Vötsch 7004
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.VoetschChamberType.Voetsch_7011">
            <summary>
            Vötsch 7011
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.VoetschChamberType.Voetsch_7150">
            <summary>
            Vötsch 7011
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.VoetschCommands">
            <summary>
            Commands for the Vötsch climate chambers.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.VoetschCommands.Help">
            <summary>
            This command returns a list of all available commands for the chamber
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.VoetschCommands.RetrieveFailures">
            <summary>
            This command returns the current failure:
            &lt;Failure Number&gt;&lt;Space&gt;&lt;Failure Text&gt;&lt;CR&gt;
            Example: 16 Netzwiederkehr&lt;CR&gt; or 0 &lt;CR&gt; (no error)
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.VoetschCommands.ResetFailures">
            <summary>
            This command resets the failures of the chamber and returns the number of not reset failures
            xx&lt;CR&gt; , where xx stays for the amount of failures which are still there and were not reset.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.VoetschCommands.StartProgram">
            <summary>
            This command starts a predefined program
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.VoetschCommands.StopProgram">
            <summary>
            This command stops any running command.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.VoetschCommands.GetState">
            <summary>
            Get the current state (temperature, humidity) from the chamber
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.VoetschCommands.SetState">
            <summary>
            Set the state (temperature, humidity) of the current chamber
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoring">
            <summary>   A CoDeSys 2.5 based redundant monitoring system, typically running on a WAGO PLC. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoring.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoring.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <param name="ipAddress">    The IP address. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoring.Connect">
            <summary>
            Connects your Dx instrument. In your implementation, this is where you would connect to
            actual hardware (if there is any) and set the IsConnected state appropriately.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoring.Disconnect">
            <summary>
            Disconnects your Dx instrument. In your implementation, this is where you would disconnect
            from actual hardware (if there is any) and set the IsConnected state appropriately.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoring.Process(Keysight.Aes.Asf.VirtualVisa.DxCore.DxData)">
             <summary>
             Process the given data. This is a class you derive from DxData for use with your instrument.
             </summary>
            
             <param name="data"> The data. </param>
            
             <returns>
             The result of the processing operation. This may be the same class type as the input or you
             may derive other classes to contain the response. If no data is produced, null may be
             returned.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoring.Reconnect">
            <summary>
            Reconnects this instrument. Here you may just call your own Disconnect() and Connect()
            implementations or provide a more efficient process if available.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoringWrite">
            <summary>   Use this class to send a relay open or close command to a DxWagoRedundantMonitoring or DxCoDeSysSafetyDisconnect. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoringWrite.Commands">
            <summary>   The commands that the Dx Instrument can execute. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoringWrite.Commands.CheckFirmware">
            <summary>   Tries to check the firmware and throws an exception on version mismatch. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoringWrite.Commands.ExecuteRelayCommand">
            <summary>   Opens, closes etc. a relay according to the ChannelNumber and OpenClose. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoringWrite.Commands.ConfigureChannel">
            <summary>   Configures the ParameterSet for the selected Channel. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoringWrite.Command">
             <summary>   Gets or sets the command to execute. </summary>
            
             <value> The command. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoringWrite.ChannelNumber">
             <summary>   Gets or sets the 1-based channel number. </summary>
            
             <value> The channel number. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoringWrite.RelayCommand">
             <summary>   Gets or sets whether the relay shall be opened, closed etc. </summary>
            
             <value> The command. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxPlcRedundantMonitoringWrite.ParameterSet">
             <summary>
             Gets or sets the parameter set index (0 is the invalid set). See Tim Schoefflers PLC
             documentation for details.
             </summary>
            
             <value> The parameter set index. </value>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxOhce">
            <summary>   Test device that returns a string in reverse order ("echo" -> "ohce"). </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxOhce.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxOhce.Connect">
            <summary>
            Connects your Dx instrument. In your implementation, this is where you would connect to
            actual hardware (if there is any) and set the IsConnected state appropriately.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxOhce.Disconnect">
            <summary>
            Disconnects your Dx instrument. In your implementation, this is where you would disconnect
            from actual hardware (if there is any) and set the IsConnected state appropriately.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxOhce.Reconnect">
            <summary>
            Reconnects this instrument. Here you may just call your own Disconnect() and Connect()
            implementations or provide a more efficient process if available.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxOhce.Process(Keysight.Aes.Asf.VirtualVisa.DxCore.DxData)">
             <summary>
             Process the given data. This is a class you derive from DxData for use with your instrument.
             </summary>
            
             <param name="data"> The data. </param>
            
             <returns>
             The result of the processing operation. This may be the same class type as the input or you
             may derive other classes to contain the response. If no data is produced, null may be
             returned.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxOhceData">
            <summary>   The data class for the Ohce instrument. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxOhceData.EchoText">
             <summary>   Gets or sets the echo text. </summary>
            
             <value> The echo text. </value>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxDataEcho">
            <summary>   A dx instrument that simply returns any DxData packet it recieves. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxDataEcho.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxDataEcho.Connect">
            <summary>
            Connects your Dx instrument. In your implementation, this is where you would connect to
            actual hardware (if there is any) and set the IsConnected state appropriately.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxDataEcho.Disconnect">
            <summary>
            Disconnects your Dx instrument. In your implementation, this is where you would disconnect
            from actual hardware (if there is any) and set the IsConnected state appropriately.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxDataEcho.Process(Keysight.Aes.Asf.VirtualVisa.DxCore.DxData)">
             <summary>
             Process the given data. This is a class you derive from DxData for use with your instrument.
             </summary>
            
             <param name="data"> The data. </param>
            
             <returns>
             The result of the processing operation. This may be the same class type as the input or you
             may derive other classes to contain the response. If no data is produced, null may be
             returned.
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxDataEcho.Reconnect">
            <summary>
            Reconnects this instrument. Here you may just call your own Disconnect() and Connect()
            implementations or provide a more efficient process if available.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxDescriptor">
            <summary>   A dx device descriptor. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxDescriptor.DxType">
            <summary>   The implementing type of the dx instrument. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxDescriptor.DisplayName">
            <summary>   The suggested name to display to the user. Null if the class is not attributed. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxDescriptor.Description">
            <summary>   The suggested description to display to the user. Null if the class is not attributed.</summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxDescriptor.ToString">
            <summary>   Returns the DisplayName if set, the DxType otherwise. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxRegistrar">
            <summary>   A class to help with iterating the various available Dx Instrument implementations. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxRegistrar.GetAvailableDxInstrumentTypes">
             <summary>   Gets the types of all the available dx instrument implementations. </summary>
            
             <returns>
             An enumerator to process the available dx instrument types
             </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstruments.DxRegistrar.GetAvailableDxInstruments(System.Boolean)">
             <summary>   Gets a list of all available dx instruments. </summary>
            
             <param name="attributedOnly">   true to return only instrument classes that are actually
                                             attributed with a DisplayName. This will typically remove the
                                             instruments meant for debugging and testing purposes. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process the available dx instruments in this
             collection.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.BaudrateOptions">
            <summary>   Values that represent baudrate options. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.ParityOptions">
            <summary>
            Values that represent parity options of the Wut 58665 with the corresponding
            telnet menu option number.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DatabitsOptions">
            <summary>
            Values that represent databits options of the WuT 58665 with the
            corresponding telnet menu option number.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.StopBitOptions">
            <summary>
            Values that represent stop bit options of the WuT 58665 with the
            corresponding telnet menu option number.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.FlowControlOptions">
            <summary>
            Values that represent flow control options of the WuT 58665 with the
            corresponding telnet menu option number.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.FlowControlOptions.Hardware">
            <summary>   Hardware Flow Control (RTS/CTS). </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.FlowControlOptions.Software">
            <summary>   Software Flow Control (XON/XOFF). </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxIpAndSerialSetup">
            <summary>   A dx setup for an instrument that is connected via an ethernet to COM server. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxIpAndSerialSetup.Baudrate">
             <summary>   Gets or sets the baudrate. </summary>
            
             <value> The baudrate. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxIpAndSerialSetup.Parity">
             <summary>   Gets or sets the parity. </summary>
            
             <value> The parity. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxIpAndSerialSetup.Databits">
             <summary>   Gets or sets the databits. </summary>
            
             <value> The databits. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxIpAndSerialSetup.Stopbit">
             <summary>   Gets or sets the stopbit. </summary>
            
             <value> The stopbit. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxIpAndSerialSetup.FlowControl">
             <summary>   Gets or sets the flow control. </summary>
            
             <value> The flow control. </value>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxIpPortSetup">
            <summary>   A default dx instrument setup class for instruments that only require an IP Address and a port number. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxIpPortSetup.Port">
             <summary>   Gets or sets the Port number. </summary>
            
             <value> The port number. </value>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxIpSetup">
            <summary>   A default dx instrument setup class for instruments that only require an IP Address. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxIpSetup.IpAddress">
             <summary>   Gets or sets the IP address. </summary>
            
             <value> The IP address. </value>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxSerialPortSetup">
            <summary>
            The setup class for serial port communication contains the necessary configuration properties.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxSerialPortSetup.Port">
            <summary>
            Defines the port for the communication.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxSerialPortSetup.BaudRate">
            <summary>
            Defines the baudrate for the communication.
            </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstrument`1">
            <summary>
            The base class for DX instruments adding a generic type for the setup class.
            Note: All the properties in your setup class must have an initial value assigned
            that is not the default value. This is checked by the IntergrationTests.
            The reason for this is that otherwise the default value properties wouldn't show
            up when serializing and so the example config file created by the SolutionService
            would be pointless for the user.
            
            Note that when you implement an instrument for release, you need to add a 
            DisplayName attribute to your class to make it appear in the DeviceManager.
            </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstrument`1.Setup">
             <summary>   Gets or sets the setup class instance. </summary>
            
             <value> The setup. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstrument`1.IpAddress">
             <summary>   Gets or sets the IP address of the instrument. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when the provided setup class does not derive from DxIpSetup. </exception>
            
             <value> The IP address. </value>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstrument`1.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstrument`1.#ctor(`0)">
            <summary>   Constructor taking a setup. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstrument`1.#ctor(System.String)">
             <summary>   Constructor taking an IP address. </summary>
            
             <param name="ipAddress">    The IP address. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.DxInstrument">
            <summary>
            The base class for DX instruments which can be modeled by simply exchanging XML based data
            with a client and communicating with a TCP/IP based device.
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.DxInstrument.C_DX_PORT">
            <summary>   The default port for Dx instruments. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstrument.GenericSetup">
             <summary>   Gets or sets the setup class instance generically. By default the setup is null. </summary>
            
             <value> The setup. </value>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.DxInstrument.IsConnected">
            <summary>   Determines whether this object is connected. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstrument.#ctor">
            <summary>   Default constructor. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstrument.Connect">
            <summary>
            Connects your Dx instrument. In your implementation, this is where you would connect to
            actual hardware (if there is any) and set the IsConnected state appropriately.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstrument.Disconnect">
            <summary>
            Disconnects your Dx instrument. In your implementation, this is where you would disconnect
            from actual hardware (if there is any) and set the IsConnected state appropriately.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstrument.Reconnect">
            <summary>
            Reconnects this instrument. Here you may just call your own Disconnect() and Connect()
            implementations or provide a more efficient process if available.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.DxInstrument.Process(Keysight.Aes.Asf.VirtualVisa.DxCore.DxData)">
             <summary>
             Process the given data. This is a class you derive from DxData for use with your instrument.
             </summary>
            
             <param name="data"> The data. </param>
            
             <returns>
             The result of the processing operation. This may be the same class type as the input or you
             may derive other classes to contain the response. If no data is produced, null may be
             returned.
             </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument">
            <summary>
            Base class for a virtual visa instrument that communicates SCPI commands via a socket (telnet
            style).
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.C_DEFAULT_PORT">
            <summary>   The default port. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.SessionInfo">
            <summary>
            Helper class with information on incoming connections to pass through
            IAsyncResult
            </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.SessionInfo.ClientSocket">
            <summary>   The client socket. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.SessionInfo.ReceiveBuffer">
            <summary>   Buffer for received data. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.SessionInfo.C_RECV_BUF_SIZE">
            <summary>   Size of the receive buffer. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.SessionInfo.ReceivedData">
            <summary>   Data extracted from the buffer. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.LastError">
            <summary>   Gets or sets the last error. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.LogMessage">
             <summary>   Delegate definition for the logging event. </summary>
            
             <param name="MessageWarningError">  null for message, false for warning, true for error. </param>
             <param name="caller">               The caller. </param>
             <param name="message">              The message. </param>
        </member>
        <member name="E:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.LogMessageEvent">
            <summary>   Event queue for all listeners interested in log messages events. </summary>
        </member>
        <member name="T:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.CommandExecutor">
             <summary>   Delegate definition for command executors. </summary>
            
             <param name="cmds"> The commands. </param>
             <param name="argv"> The arguments. </param>
            
             <returns>   The reply to the command (or null for none). </returns>
        </member>
        <member name="F:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.ExecuteCommandDelegate">
            <summary>   Hookup for an instance that executes commands. By making use of this, you can avoid deriving a class and instead just provide a command delegate to an Instrument instance. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.InstrumentIdentification">
            <summary>   Gets or sets the instrument identification that is returned on "*IDN?" requests. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.LocalEndpoint">
            <summary>   Gets the local endpoint of the listening instrument. </summary>
        </member>
        <member name="P:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.VisaAddress">
            <summary>   Gets the visa address that can be used to communicate to the local endpoint. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.#ctor(System.String)">
            <summary>   Constructor. </summary>
            <param name="Identification">   The identification must follow the scheme "Vendor.Model.Serial.Firmware". </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.#ctor(System.String,System.Int32)">
             <summary>   Constructor. </summary>
            
             <param name="Identification">   The identification must follow the scheme
                                             "Vendor.Model.Serial.Firmware". </param>
             <param name="port">             The port number to listen on. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.IncomingConnection(System.IAsyncResult)">
            <summary>
            Asynchronous event handler for incoming connections
            </summary>
            <param name="asyn"></param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.IncomingData(System.IAsyncResult)">
            <summary>
            Compute incoming data. Append to incoming buffer and scan for complete
            SCPI commands (i.e. check for line breaks).
            </summary>
            <param name="asyn"></param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.CheckForCompleteRequest(Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.SessionInfo)">
            <summary>
            Check if there is a complete command inside the buffer
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.ExecuteCommand(System.String,Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.SessionInfo)">
             <summary>   Execute a received command line. </summary>
            
             <param name="cmd">  The command line. </param>
             <param name="session">  The client session. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.ExecuteCommand(System.String[],System.String[],Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.SessionInfo)">
             <summary>
             You do not have to derive from Instrument to implement standard behavior. Instead just
             provide the ExecuteCommandDelegate which is called for all commands that the server does not
             reply to by default (i.e. all mandatory SCPI-99 commands)
             Implement different device behavior by overriding this method. You can use SendReply(session,
             message) to reply to the client. Call the base class implementation to have the
             Identification request handled by default.
             </summary>
            
             <param name="cmds">     The SCPI commands already split by the colon and all upper case. </param>
             <param name="argv">     The SCPI arguments already split by the colon and all upper case. </param>
             <param name="session">  The client session. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.ExecuteUser(System.String[],System.String[])">
             <summary>   Passes the command arguments to the user provided delegate. </summary>
            
             <param name="cmds"> The SCPI commands already split by the colon and all upper case. </param>
             <param name="argv"> The SCPI arguments already split by the colon and all upper case. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.ExecuteStrippedComand(System.String[],System.String[])">
             <summary>
             Strips the first entry from the command array and executes the remaining array.
             </summary>
            
             <param name="cmds"> The SCPI commands already split by the colon and all upper case. </param>
             <param name="argv"> The SCPI arguments already split by the colon and all upper case. </param>
            
             <returns>   The result of the execution or null if there is none. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.ExecuteSystem(System.String[],System.String[],Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.SessionInfo)">
             <summary>   Executes the SYSTEM operation. </summary>
            
             <param name="cmds">     The SCPI commands already split by the colon and all upper case. </param>
             <param name="argv">     The SCPI arguments already split by the colon and all upper case. </param>
             <param name="session">  . </param>
            
             <returns>   true if the command was processed, false otherwise. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.SendReply(Keysight.Aes.Asf.VirtualVisa.ScpiInstrument.SessionInfo,System.String)">
             <summary>   Sends a reply to the client identified by the session. </summary>
            
             <param name="session">  The session identifying the client. </param>
             <param name="message">  The message. If no line break is attached, a new line (0x0A) will be used. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.XML.DictionarySerializer">
            <summary>   A helper class to (de)serialize dictionaries to and from XML. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.DictionarySerializer.ToXml``2(System.Collections.Generic.Dictionary{``0,``1})">
             <summary>   Serializes a dictionary to XML. </summary>
            
             <typeparam name="TKey">     Type of the key. </typeparam>
             <typeparam name="TValue">   Type of the value. </typeparam>
             <param name="dict"> The dictionary. </param>
            
             <returns>   XML as string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.DictionarySerializer.FromXml``2(System.String)">
             <summary>   Deserializes a dictionary from the given XML. </summary>
            
             <typeparam name="TKey">     Type of the key. </typeparam>
             <typeparam name="TValue">   Type of the value. </typeparam>
             <param name="xml">  The XML. </param>
            
             <returns>   A Dictionary&lt;TKey,TValue&gt; </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.XML.ISelfXmlSerializer">
            <summary>   Interface for classes that can de/serialize themselves to and from XML. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.ISelfXmlSerializer.ToXml">
             <summary>   Converts this object to an XML node that can be inserted into any XML document. </summary>
            
             <returns>   This object as a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.ISelfXmlSerializer.FromXml(System.String)">
             <summary>   Initializes this object from the given XML string. </summary>
            
             <param name="xml">  The XML. </param>
        </member>
        <member name="T:Keysight.Aes.Asf.XML.SelfSerializer">
            <summary>
            A base class that implements methods to self de/serialize instances. This uses the default
            .NET XML and Binary Serializers, so your derived class can decorate properties with all the usual
            attributes. However be aware of the performance issues the default serializers have.
            For a simple serializer that is much faster but limited to base types, look at the XmlHelper.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.SelfSerializer.ToBytes">
             <summary>   Converts this object to a binary representation. </summary>
            
             <returns>   This object as a byte[]. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.SelfSerializer.FromBytes``1(System.Byte[])">
             <summary>
             Initializes a new class instance of a particular (derived) type from the given binary representation.
             </summary>
            
             <typeparam name="T">    The type to retrieve. </typeparam>
             <param name="binary">  The serialized binary. </param>
            
             <returns>   A configuration instance of type T. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.SelfSerializer.ToXmlBytes">
             <summary>   Converts this object to an XML string and encodes this into UTF8 bytes. </summary>
            
             <returns>   This object as a byte[]. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.SelfSerializer.FromXmlBytes``1(System.Byte[])">
             <summary>
             Initializes a new class instance of a particular (derived) type from the given UTF8 encoded XML string.
             </summary>
            
             <typeparam name="T">    The type to retrieve. </typeparam>
             <param name="binary">  The serialized binary. </param>
            
             <returns>   A configuration instance of type T. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.SelfSerializer.ToXml">
             <summary>   Converts this object to an XML string. </summary>
            
             <returns>   This object as a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.SelfSerializer.FromXml``1(System.String)">
             <summary>
             Initializes a new class instance of a particular (derived) type from the given XML string.
             </summary>
            
             <typeparam name="T">    The type to retrieve. </typeparam>
             <param name="xml">  The XML. </param>
            
             <returns>   A configuration instance of type T. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.XML.Serializer">
            <summary>   A serialization helper. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.Serializer.ToBytes(System.Object)">
             <summary>   Converts a class instance to a binary representation. </summary>
            
             <param name="classInstance">    The class instance. </param>
            
             <returns>   This object as a byte[]. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.Serializer.FromBytes``1(System.Byte[])">
             <summary>
             Initializes a new class instance of a particular (derived) type from the given binary
             representation.
             </summary>
            
             <typeparam name="T">    The type to retrieve. </typeparam>
             <param name="binary">   The serialized binary. </param>
            
             <returns>   A configuration instance of type T. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.Serializer.ToXmlBytes(System.Object)">
             <summary>
             Converts a class instance to an XML string and encodes this into UTF8 bytes.
             </summary>
            
             <param name="classInstance">    The class instance. </param>
            
             <returns>   This object as a byte[]. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.Serializer.FromXmlBytes``1(System.Byte[])">
             <summary>
             Initializes a new class instance of a particular (derived) type from the given UTF8 encoded XML string.
             </summary>
            
             <typeparam name="T">    The type to retrieve. </typeparam>
             <param name="binary">  The serialized binary. </param>
            
             <returns>   A configuration instance of type T. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.Serializer.ToXml(System.Object,System.Boolean)">
             <summary>   Converts a class instance to an XML string. </summary>
            
             <param name="classInstance">        The class instance. </param>
             <param name="omitXmlDeclaration">   true to omit the XML declaration. Use this if you want to create a node. </param>
            
             <returns>   This object as a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.Serializer.FromXml``1(System.String,System.Boolean,System.Boolean)">
             <summary>
             Initializes a new object (instance) of a particular type from the given XML string.
             </summary>
            
             <typeparam name="T">    The type to retrieve. </typeparam>
             <param name="xml">                  The XML. </param>
             <param name="isFragment">           true if the xml is only a node and not a whole document. </param>
             <param name="determineActualType">  true if T is object to try and determine the actual type.
                                                 Note that for example for all system array types this
                                                 will typically fail since the serializer writes out type
                                                 names that this code doesnt know how to reconstruct it to
                                                 an actual type. </param>
            
             <returns>   The deserialized object. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.Serializer.FromXml(System.String,System.Type,System.Boolean)">
             <summary>
             Initializes a new object (instance) of a particular type from the given XML string.
             </summary>
            
             <param name="xml">                  The XML. </param>
             <param name="type">                 The type to deserialize. </param>
             <param name="isFragment">           true if the xml is only a node and not a whole document. </param>
            
             <returns>   The deserialized object. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.XML.TypeSerializer">
            <summary>
            Contains helper methods to (de)serialize a .NET type to and from XML. This will only use the
            assembly qualified type name.
            </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.TypeSerializer.ToXml(System.Type)">
             <summary>   Serializes a Type to XML. </summary>
            
             <param name="type"> The type. </param>
            
             <returns>   XML as string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.TypeSerializer.FromXml(System.String)">
             <summary>   Deserializes a Type from the given XML. </summary>
            
            
             <returns>   A Type or null if it could not be determined. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.XML.XmlHelper">
            <summary>   Various methods to help with simple de/serialization of base type class properties. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.XML.XmlHelper.XmlGenericNode">
            <summary>   The XML node name for a node created with the serialize method. </summary>
        </member>
        <member name="F:Keysight.Aes.Asf.XML.XmlHelper.XmlTypeAttribute">
            <summary>   The XML attribute name for the type attribute that describes the .NET Type of the serialized object. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.XmlHelper.PropsSerialize(System.Object)">
             <summary>   Serializes the public properties of the given object and returns the XML node as a string. </summary>
            
             <param name="sourceObject"> The class instance to serialize. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.XmlHelper.PropsDeserialize(System.String)">
             <summary>   De-serializes the xml into a class and returns the instance. </summary>
            
             <param name="xmlSource">    The XML source. </param>
            
             <returns>   An object. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.XmlHelper.CreateDefaultXmlWriter(System.Text.StringBuilder@)">
             <summary>   Creates a default XML writer and string builder. </summary>
            
             <param name="stringBuilder">    [out] The string builder. </param>
            
             <returns>   The new default XML writer. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.XmlHelper.CreateXmlWriter(System.IO.StringWriter@,System.Boolean)">
             <summary>   Creates a XML writer and a StringWriter. </summary>
            
             <param name="stringWriter"> [out] The string writer. </param>
             <param name="isFragment">   true if the writer shall write a fragment, false for a document. </param>
            
             <returns>   The new XML writer. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.XmlHelper.WriteSubnodeXml(System.Xml.XmlWriter,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
             <summary>   Writes the xml as a subnode into the current writer position. </summary>
            
             <param name="writer">       The writer. </param>
             <param name="nodeName">     Name of the node. </param>
             <param name="xml">          The XML. </param>
             <param name="attributes">   A number of attributes to add to the node. </param>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.XmlHelper.GetReaderForXml(System.String)">
             <summary>   Gets an XmlReader for plain xml text. </summary>
            
             <param name="xml">  The XML text. </param>
            
             <returns>   The reader for the XML. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.XmlHelper.CreateXmlNodeFromObject(System.Object,System.Xml.XmlDocument)">
             <summary>   Creates XML node from object. </summary>
            
             <param name="sourceObject">     The class instance to serialize. </param>
             <param name="ownerDocument">    The document that owns this item. </param>
            
             <returns>   The new XML node from object. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.XmlHelper.CreateObjectFromXmlNode(System.Xml.XmlNode,System.Type)">
             <summary>   Creates object from XML node. </summary>
            
             <param name="sourceNode">   Source node. </param>
             <param name="targetType">   Type of the target. </param>
            
             <returns>   The new object from XML node. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.XmlHelper.ConvertToString(System.Object)">
             <summary>   Converts a sourceObject to a string. </summary>
            
             <param name="sourceObject"> The class instance to serialize. </param>
            
             <returns>   The given data converted to a string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.XmlHelper.ConvertFromString(System.Type,System.String)">
             <summary>   Convert from string. </summary>
            
             <param name="targetType">   Type of the target. </param>
             <param name="targetValue">  Target value. </param>
            
             <returns>   the de-serialized object. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.XmlHelper.ConvertFromString``1(System.String)">
             <summary>   Convert from string. </summary>
            
             <typeparam name="T">    The expected type. </typeparam>
             <param name="targetValue">  The value as a string. </param>
            
             <returns>   the de-serialized object. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.XmlHelper.StringToXmlNode(System.String,System.Xml.XmlDocument)">
             <summary>   String to XML node. </summary>
            
             <param name="xmlString">    The XML string. </param>
             <param name="ownerDoc">     The document that owns this item. </param>
            
             <returns>   An XmlNode. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.XmlHelper.XmlNodeToString(System.Xml.XmlNode)">
             <summary>   XML node to string. </summary>
            
             <param name="node"> The node. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:Keysight.Aes.Asf.XML.XmlHelper.Escape(System.String)">
             <summary>   Escapes the text so that it can be used within a XML statement. </summary>
            
             <param name="text"> The text. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="T:Keysight.Aes.Asf.Visa.VisaFormats">
            <summary>   Helper methods for handling VISA related data. </summary>
        </member>
        <member name="M:Keysight.Aes.Asf.Visa.VisaFormats.GetIpAddress(System.String)">
             <summary>
             Gets the IP address portion from a VISA address. The address must be formatted 
             according to the "TCPIPx::IPAddress::*" like one of the following:
             "TCPIP0::127.0.0.1::5025::SOCKET"
             "TCPIP0::127.0.0.1::inst0::INSTR".
             The extracted part is not checked for actual IP validity.
             </summary>
            
             <param name="visaAddress">  The visa address. </param>
            
             <returns>   The presumed IP address. </returns>
        </member>
    </members>
</doc>
